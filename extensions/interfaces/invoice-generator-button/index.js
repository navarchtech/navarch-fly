import{useApi as e,defineInterface as t}from"@directus/extensions-sdk";import{defineComponent as a,ref as o,inject as n,resolveComponent as r,openBlock as i,createElementBlock as s,Fragment as l,createCommentVNode as d,createVNode as c,withCtx as u,createTextVNode as m,createBlock as f,toDisplayString as h}from"vue";var p=(e=>(e.BRACKET="Brackets",e.MIN_DEDUCTION="Minimum Deduction",e.MAX_CAP="Maximum Cap",e))(p||{}),y=(e=>(e.PERCENTAGE="Percentage",e.FRACTIONAL="Fractional",e))(y||{}),_=(e=>(e.WET_WEIGHT="wet_weight",e.MOISTURE="moisture",e.DRY_WEIGHT="dry_weight",e))(_||{}),v=(e=>(e.METHOD="method",e.WET_WEIGHT_UOM="wet_weight_uom",e.MOISTURE_UOM="moisture_uom",e.DRY_WEIGHT_UOM="dry_weight_uom",e))(v||{}),w=a({props:{value:{type:Object,default:null}},emits:["input"],setup(t,{emit:a}){const r=o(""),i=o(!1),s=o(!1),l=e(),d=n("values",o({}));function c(e){if(console.log("[evaluateWeightData]"),0===e.length)return;const t=m(e,_.DRY_WEIGHT),a=m(e,_.WET_WEIGHT);return{method:u(e,v.METHOD),lots:e,dry_weight_uom:u(e,v.DRY_WEIGHT_UOM),wet_weight_uom:u(e,v.WET_WEIGHT_UOM),dry_weight:t,wet_weight:a,moisture:(a-t)/a*100}}function u(e,t){if(console.log("[getFirstValueAsSharedValue]"),0!==e.length)return console.log(`lots[0][${t.toString()}]=${e[0][t.toString()]}`),e[0][t.toString()]}function m(e,t){return console.log("[evaluateAggregateValue]"),e.reduce(((e,a)=>{var o;return e+(null!=(o=a[t.toString()])?o:0)}),0)}function f(e){return null==e}function h(e,t=2,a=!0){if(console.log("[formatNumber]"),isNaN(e)||null===e)return"-";const o=Math.round(e*Math.pow(10,t))/Math.pow(10,t),[n,r]=o.toString().split("."),i=n.replace(/\B(?=(\d{3})+(?!\d))/g,",");if(!r&&!a)return i;return`${i}.${(null!=r?r:"").padEnd(t,"0")}`}function w(e){if(console.log("[parseNumber]"),!e)return 0;const t=parseFloat(e.replace(/,/g,""));return console.log(`[parseNumber] number: ${e} to ${t}`),t}function g(e,t,a){var o,n,r;if(console.log("[findBracket]"),1===e.length){if(t>=(null!=(o=e[0].lower_threshold)?o:0)&&(null===e[0].upper_threshold||void 0===e[0].upper_threshold||t<e[0].upper_threshold))return e[0];throw new Error(`Evaluated monetary value $${t} does not fall within the only ${a.type} bracket with range ${null!=(n=e[0].lower_threshold)?n:0} - ${null!=(r=e[0].upper_threshold)?r:"âˆž"}`)}return e.find((e=>{var a,o;const n=t>(null!=(a=e.lower_threshold)?a:0)&&(null===e.upper_threshold||void 0===e.upper_threshold||t<e.upper_threshold)||e.lower_threshold_inclusive&&t===(null!=(o=e.lower_threshold)?o:0)||e.upper_threshold_inclusive&&t===e.upper_threshold;return console.log(`[findBracket] value=${t} for bracket: ${JSON.stringify(e)}? match=${!!n}`),n}))}function $(e,t){var a,o,n,r,i,s,l;console.log("[evaluateFinalValueFromBrackets]");const d=(e-(null!=(a=t.initial_adjustment)?a:0)*(null!=(o=t.initial_adjustment_conversion_factor)?o:1))*(null!=(n=t.rate)?n:0)*(t.rate_type===y.PERCENTAGE?.01:1)+(null!=(r=t.final_adjustment)?r:0)*(null!=(i=t.final_adjustment_conversion_factor)?i:1);switch(t.bracket_type){case p.MIN_DEDUCTION:if(null===t.comparator||void 0===t.comparator)throw new Error("Minimum deduction not found");const a=t.comparator*(null!=(s=t.comparator_conversion_factor)?s:1);return e-d<a?e-a:d;case p.MAX_CAP:if(null===t.comparator||void 0===t.comparator)throw new Error("Maximum cap not found");const o=t.comparator*(null!=(l=t.comparator_conversion_factor)?l:1);return d>o?o:d;case p.BRACKET:return d;default:throw new Error(`bracket type ${t.bracket_type} is not supported`)}}async function E(e,t,a,o){var n,r,i,s,l,d,c,u;if(console.log("[evaluatePayableAssay]"),!a||0===a.length)return{};const m=g(a,e,{commodityCode:o,type:"Payable Assay"});if(!m)throw new Error(`Bracket not found for value ${e}, please ensure the brackets for all commodities defined in the contract cover all range of possible values for payable assays`);let f,_,v=1;m.initial_adjustment_uom&&void 0!==m.initial_adjustment_uom&&null!==m.initial_adjustment_uom&&m.initial_adjustment_uom!==t&&(v=await M(m.initial_adjustment_uom,t),f=U(m.initial_adjustment_uom,t));let w,E=1;m.bracket_type===p.MAX_CAP?(_=null!=(n=m.maximum_cap)?n:0,void 0!==m.maximum_cap_uom&&null!==m.maximum_cap_uom&&m.maximum_cap_uom!==t&&(E=await M(m.maximum_cap_uom,t),w=U(m.maximum_cap_uom,t))):m.bracket_type===p.MIN_DEDUCTION&&(_=null!=(r=m.minimum_deduction)?r:0,void 0!==m.minimum_deduction_uom&&null!==m.minimum_deduction_uom&&m.minimum_deduction_uom!==t&&(E=await M(m.minimum_deduction_uom,t),w=U(m.minimum_deduction_uom,t)));const b=$(e,{bracket_type:m.bracket_type,rate:null!=(i=m.rate)?i:1,rate_type:null!=(s=m.rate_type)?s:y.FRACTIONAL,initial_adjustment:null!=(l=m.initial_adjustment)?l:0,initial_adjustment_conversion_factor:v,comparator:_,comparator_conversion_factor:E});let C="";const D=void 0!==m.initial_adjustment&&null!==m.initial_adjustment;if(m.bracket_type===p.BRACKET)C=`${D?"(":""}${h(e,4)}${null!=t?t:""}${D?` - ${h(m.initial_adjustment,4)}${null!=(d=m.initial_adjustment_uom)?d:`${null!=t?t:""}`}`:""}${D&&1!==v?` * ${h(v,4)}${f}`:""}${D?")":""} * ${h(m.rate,4)}${m.rate_type===y.PERCENTAGE?"/100":`/${h(1,4)}`}`;else if(m.bracket_type===p.MIN_DEDUCTION){C=b===e-_*E?`${h(e,4)}${null!=t?t:""} - ${h(_,4)}${null!=t?t:""}${1!==E?` * ${h(E,4)}${w}`:""}`:`${D?"(":""}${h(e,4)}${null!=t?t:""}${D?` - ${h(m.initial_adjustment,4)}${null!=(c=m.initial_adjustment_uom)?c:`${null!=t?t:""}`}`:""}${D&&1!==v?` * ${h(v,4)}${f}`:""}${D?")":""} * ${h(m.rate,4)}${m.rate_type===y.PERCENTAGE?"/100":`/${h(1,4)}`}`}else{if(m.bracket_type!==p.MAX_CAP)throw new Error(`[buildPayableAssayExpression] unknown bracket method: ${m.bracket_type}`);C=b===_*E?`${h(_,4)}${null!=t?t:""}${1!==E?` * ${h(E,4)}${w}`:""}`:`${D?"(":""}${h(e,4)}${null!=t?t:""}${D?` - ${h(m.initial_adjustment,4)}${null!=(u=m.initial_adjustment_uom)?u:`${null!=t?t:""}`}`:""}${D&&1!==v?` * ${h(v,4)}${f}`:""}${D?")":""} * ${h(m.rate,4)}${m.rate_type===y.PERCENTAGE?"/100":`/${h(1,4)}`}`}return{payableAssay:b,expression:C}}console.log("[main] formValues=",d);const b="above the lower threshold, plus",C="below the upper threshold, minus";function D(e,t,a,o){var n,r,i,s;if(console.log("[evaluateTreatmentCharge]"),!a||!a.length)return;const l=g(a,e,{commodityCode:o,type:"Treatment Charge"});if(!l)throw new Error(`Bracket not found for value ${e}, please ensure the brackets for all commodities defined in the contract cover all range of possible values for treatment charge`);let d=0,c=1;if(l.use_btc)c=0,d=0;else if(c=null!=(n=l.rate)?n:1,l.for_every_unit===b)d=null!=(r=l.lower_threshold)?r:0;else{if(l.for_every_unit!==C)throw new Error(`[evaluateTreatmentCharge] unknown for_every_unit: ${l.for_every_unit}`);d=null!=(i=l.upper_threshold)?i:0}const u={bracket_type:p.BRACKET,rate:c,rate_type:y.FRACTIONAL,initial_adjustment:d,final_adjustment:null!=(s=l.base_treatment_charge)?s:0};return console.log(`[evaluateTreatmentCharge] bracketForEvaluation: ${JSON.stringify(u)}`),{finalValue:$(e,u),baseTreatmentCharge:l.base_treatment_charge}}function A(e,t,a,o,n){var r,i,s;if(console.log("[evaluatePenalty]"),!t||!t.length)return{};const l=g(t,e,{commodityCode:n,type:"Penalty"});if(!l)throw new Error(`[evaluatePenalty] Bracket not found for value ${e}, please ensure the brackets for all commodities defined in the contract cover all range of possible values for penalty`);let d=0,c=1;if(l.no_penalty)c=0,d=0;else if(c=null!=(r=l.rate)?r:1,l.for_every_unit===b)d=null!=(i=l.lower_threshold)?i:0;else{if(l.for_every_unit!==C)throw new Error(`[evaluatePenalty] unknown for_every_unit: ${l.for_every_unit}`);d=null!=(s=l.upper_threshold)?s:0}const u={bracket_type:p.BRACKET,rate:c,rate_type:y.FRACTIONAL,initial_adjustment:d,final_adjustment:0};console.log(`[evaluatePenalty] bracketForEvaluation: ${JSON.stringify(u)}`);const m=$(e,u),f=null!=u.initial_adjustment;let _="";return _=l.rate&&0!==l.rate?`${f?"(":""}${h(e,4)}${f?` - ${h(d,4)})`:""} / ${h(1,4)} * ${null!=a?a:""} ${h(c,4)}/${null!=o?o:""}`:"No penalty",{penalty:m,expression:_,bracket:l}}function N(e){return e.toLowerCase().split(" ").map((e=>e.charAt(0).toUpperCase()+e.slice(1))).join(" ")}function I(e){const t=e.getDate(),a=e.getMonth(),o=e.getFullYear();return`${t} ${["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"][a]} ${o}`}function O(e,t=!0){const a=e.getMonth()+1,o=e.getDate();return`${e.getFullYear()}${t?"-":" "}${a<10?"0":""}${a}${t?"-":" "}${o<10?"0":""}${o}`}function T(e,t,a=!1){const o=new Date(e.valueOf());let n=t-(a?1:0);for(;n>0;)o.setDate(o.getDate()-1),0!==o.getDay()&&6!==o.getDay()&&(n-=1);return o.getHours()>=12&&o.setDate(o.getDate()+1),o}function P(e,t){const a=new Date(e.valueOf());return a.setMonth(a.getMonth()+t,1),a}function S(e,t){const a=new Date(e.valueOf());return a.setMonth(a.getMonth()+t+1,0),a}async function k(e,t){if(e===t)return 1;const a=await l.get(`/items/${$e}?filter[${Ee}]=${e}`,{params:{fields:[Ae]}});if(0===a.data.data.length||null===a.data.data[0][Ae]||void 0===a.data.data[0][Ae])throw new Error(`[getWeightUnitConversionValue] failed to get conversion value for source weight unit ${e}. Ensure that the symbol is correct and is a weight unit symbol`);const o=await l.get(`/items/${$e}?filter[${Ee}]=${t}`,{params:{fields:[Ae]}});if(0===o.data.data.length||null===o.data.data[0][Ae]||void 0===o.data.data[0][Ae])throw new Error(`[getWeightUnitConversionValue] failed to get conversion value for the target weight unit ${t}. Ensure that the symbol is correct and is a weight unit symbol`);const n=parseFloat(a.data.data[0][Ae]);if(isNaN(n))throw new Error(`[getWeightUnitConversionValue] source weight unit ${e} conversion value=${n} is not a number`);const r=parseFloat(o.data.data[0][Ae]);if(isNaN(r))throw new Error(`[getWeightUnitConversionValue] target weight unit ${t} conversion value=${r} is not a number`);return n/r}async function M(e,t){if(null==e||null==t)return 1;if(e===t)return 1;const a=await l.get(`/items/${Ne}?filter[${Ie}]=${e}`,{params:{fields:[Oe]}});if(0===a.data.data.length||void 0===a.data.data[0][Oe]||null===a.data.data[0][Oe])throw new Error(`[getAssayUnitConversionValue] failed to get conversion value for source weight unit ${e}. Ensure that the symbol is correct and is a weight unit symbol`);const o=await l.get(`/items/${Ne}?filter[${Ie}]=${t}`,{params:{fields:[Oe]}});if(0===o.data.data.length||void 0===o.data.data[0][Oe]||null===o.data.data[0][Oe])throw new Error(`[getAssayUnitConversionValue] failed to get conversion value for the target weight unit ${t}. Ensure that the symbol is correct and is a weight unit symbol`);const n=parseFloat(a.data.data[0][Oe]);if(isNaN(n))throw new Error(`[getAssayUnitConversionValue] source weight unit ${e} conversion value=${n} is not a number`);console.log(`[getAssayUnitConversionValue] source unit conversion value=${n}`);const r=parseFloat(o.data.data[0][Oe]);if(isNaN(r))throw new Error(`[getAssayUnitConversionValue] target weight unit ${e} conversion value=${r} is not a number`);return console.log(`[getAssayUnitConversionValue] target unit conversion value=${r}`),console.log("[getAssayUnitConversionValue] returning "+n/r),n/r}function U(e,t){if(void 0===e||void 0===t||null===e||null===t)return;const a=e.split("/"),o=t.split("/");if(a.length>2||o.length>2)throw new Error(`[getConversionUnit] sourceUnit=${e} and targetUnit=${t} must be in the format of 'unit1/unit2', an extra '/' was found`);if(1===a.length&&1===o.length)return`${o[0]}/${a[0]}`;if(1===a.length){const e=o[0]===a[0]?"":`${o[1]}(${a[1]})`,t=o[1];return""===t?e:`${e}/${t}`}if(1===o.length){const e=a[1],t=a[0]===o[0]?"":`${a[1]}(${o[0]})`;return""===t?e:`${e}/${t}`}{const e=a[0]===o[0],t=a[1]===o[1],n=e||""===a[0],r=e||""===o[0],i=t||""===a[1],s=t||""===o[1],l=!i&&!r,d=!n&&!s,c=`${i?"":a[1]}${l?"(":""}${r?"":`${o[0]}`}${l?")":""}`,u=`${n?"":a[0]}${d?"(":""}${s?"":`${o[1]}`}${d?")":""}`;return""===u?c:`${c}/${u}`}}async function F(e,t,a){const o=await l.get(`/items/${$e}?filter[${be}]=${t}`,{params:{fields:[Ee]}});if(!o.data.data||!o.data.data[0]||!o.data.data[0][Ee])throw new Error(`[getConversionValuesAndUnitsForPayableMetalCalculation] Dry weight uom not found for symbol ${t}`);const n=o.data.data[0][Ee];if("%"===a){if(n===e)return{};const t=U(n,e);if(!t)throw new Error(`[getConversionValuesAndUnitsForPayableMetalCalculation] no conversion unit found for dry weight unit ${n} and target weight unit ${e}`);return{finalConversion:{conversionFactor:await k(n,e),conversionUom:t}}}let r=a.split("/");if(1==r.length){const e=await async function(e){const t=await l.get(`/items/${Ne}`,{params:{fields:[Ie,Te],filter:{[Te]:{_nnull:!0},[Ie]:{_eq:e}}}});if(200!==t.status||!t.data||0===t.data.data.length)throw new Error("[getAssayUnitComposition] no assay units found with composition");return t.data.data[0][Te]}(a);if(!e)throw new Error(`[getConversionValuesAndUnitsForPayableMetalCalculation] assay unit ${a} does not have a composition`);r=e.split("/")}if(r.length>2||0===r.length)throw new Error(`[getConversionValuesAndUnitsForPayableMetalCalculation] assay unit ${a} is not in the format of 'unit1/unit2'`);const i=r[0],s=r[1],d={};if(s!==n){const e=U(n,s);if(!e)throw new Error(`[getConversionValuesAndUnitsForPayableMetalCalculation] no conversion unit found for dry weight unit ${n} and assay unit denominator unit ${s}`);d.initialConversion={conversionFactor:await k(n,s),conversionUom:e}}if(i!==e){const t=U(i,e);if(!t)throw new Error(`[getConversionValuesAndUnitsForPayableMetalCalculation] no conversion unit found for target weight unit ${e} and assay unit numerator unit ${i}`);d.finalConversion={conversionFactor:await k(i,e),conversionUom:t}}return d}const j="foreign_key",R="lot_number",x="method",V="contract",B="counterparty",J="assay_results",W="weight_result",q="actual_arrival_date",G="bl_date",L="estimated_shipment_date",H="vessel",K="origin",Y="destination",Q="shipment_code",X="adjustments",z="parcel_finalisation_date",Z="assay_uom",ee="contract_currency",te="invoice_type",ae="pay_percent",oe="pa_days",ne="pa_day_type",re="pa_ref_day",ie="pp_days",se="pp_day_type",le="pp_ref_day",de="commodity",ce="payable_commodity",ue="price_per_uom",me="related_commodity_in_contract",fe="lower_threshold",he="lower_threshold_inclusive",pe="upper_threshold",ye="upper_threshold_inclusive",_e="rate",ve="name",we="code",ge="code",$e="navarch_unit",Ee="symbol",be="dry_symbol",Ce="dry_unit",De="wet_unit",Ae="conversionToGram",Ne="navarch_assay_unit",Ie="unit",Oe="conversion_to_ppb",Te="composition",Pe="name",Se="navarch_address_id",ke="name",Me="line_1",Ue="line_2",Fe="city",je="state",Re="country",xe="zip",Ve="phone_code",Be="phone_number",Je="signatory_name",We="signatory_title",qe="remittance_details",Ge="signature",Le="navarch_country",He="name",Ke="phone_code",Ye="line_1",Qe="line_2",Xe="city",ze="state",Ze="country",et="zip",tt="name",at="navarch_world_port",ot="port_name",nt="country",rt="price_pm",it="average_price",st="date",lt="name",dt="navarch_invoices",ct="parcel",ut="invoice",mt="document_type",ft="revision_invoice",ht="invoice_type",pt="invoice_date";return{isGeneraingDoc:i,invoiceUrl:d.value,generateInvoice:async function(){var e,t,o,n,s,u,m,f,p,y,_,v,g,$,b,C,O,k,M,U,Ae,Ne,Ie,Oe,Te,rt,it,st,bt,Ct,Dt,At,Nt,It;r.value="";try{i.value=!0,console.log("[generateInvoice] formValues=",d);const Ot=d.value[ct];if(!Ot)return r.value="Parcel not selected for invoice document generation",void(i.value=!1);const Tt=d.value[pt]?new Date(d.value[pt]):new Date,Pt=d.value[ht],St=await l.get(`/items/navarch_parcel/${Ot}`,{params:{fields:[J,W,V,B,q,G,L,H,K,Y,Q,X]}});console.log(`parcelResponce.data.data=${JSON.stringify(St.data.data)}`),function(e){if(!e)throw new Error("Parcel data not found, please ensure the selected parcel still exists");if(!e[V])throw new Error("The selected parcel does not have a contract, please ensure that the contract field for the parcel is not empty");if(!e[B])throw new Error("The selected parcel does not have a counterparty, please ensure that the counterparty field for the parcel is not empty");if(!e[J])throw new Error("The selected parcel does not have assay results");if(!e[W])throw new Error("The selected parcel does not have weight results");if(!e[K])throw new Error("The selected parcel does not have an origin port");if(!e[Y])throw new Error("The selected parcel does not have a destination port");if(!e[Q])throw new Error("The selected parcel does not have a shipment code")}(St.data.data);const kt=St.data.data[J],Mt=St.data.data[W],Ut=St.data.data[V],Ft=await l.get(`/items/navarch_contract_payment_information?filter[related_contract]=${Ut}`,{params:{fields:[te,ae,oe,ne,re,ie,se,le]}});if(Ft.data.data&&0===Ft.data.data.length)return r.value="No invoice type found for the contract",void(i.value=!1);const jt=Ft.data.data.find((e=>e[te]===Pt));if(!jt)return r.value=`Cannot find payment information for ${Pt} in the contract, please ensure that data for it has been entered and saved`,void(i.value=!1);const Rt=await l.get(`/items/navarch_weight_lot?filter[${j}]=${Mt}&sort[]=${R}`,{params:{fields:["id","dry_weight","wet_weight",x,"moisture","wet_weight_uom","dry_weight_uom"]}});console.log(`weightLotResponse.data.data=${JSON.stringify(Rt.data.data)}`),function(e){if(!e||0===e.length)throw new Error("No weight lots found for the selected parcel")}(Rt.data.data);const xt=function(e){console.log("[evaluateWeights]");const t={};for(const a of e)t[a.method]||(console.log(`adding method ${a.method} to weightData object`),t[a.method]=[]),console.log(`adding lot ${a.id} to weightData.${a.method} array`),t[a.method.toString()].push(a);const a=[];for(const e of Object.keys(t)){if(!t[e]){console.log(`method=${e} does not exist in weightData object`);continue}console.log(`adding lots and other values to weights for method=${e}`);const o=c(t[e]);o&&a.push(o)}return a}(Rt.data.data),Vt=d.value.weight_method;let Bt=xt.find((e=>e.method===Vt));if(Bt||(Bt=xt.find((e=>"Outturn"===e.method))),Bt||(Bt=xt.find((e=>"Inturn Final"===e.method))),Bt||(Bt=xt.find((e=>"Inturn"===e.method))),Bt||(Bt=xt.find((e=>"Estimated"===e.method))),Bt||(Bt=xt.find((e=>"Planned"===e.method))),!Bt)throw new Error("No weight lot data found for all weight methods. Please ensure weight lot data has been entered in the selected parcel.");if(void 0===Bt.dry_weight||null===Bt.dry_weight||void 0===Bt.wet_weight||null===Bt.wet_weight||void 0===Bt.moisture||null===Bt.moisture||void 0===Bt.dry_weight_uom||null===Bt.dry_weight_uom||void 0===Bt.wet_weight_uom||null===Bt.wet_weight_uom||void 0===Bt.method||null===Bt.method)throw new Error("One of the fields for weight lots is undefined");const Jt=await l.get(`/items/${$e}?filter[${be}]=${Bt.dry_weight_uom}`,{params:{fields:[Ce]}}),Wt=await l.get(`/items/${$e}?filter[wet_symbol]=${Bt.wet_weight_uom}`,{params:{fields:[De]}});if(!Jt.data.data||!Jt.data.data[0]||!Jt.data.data[0][Ce])throw new Error(`Dry weight uom not found for symbol ${Bt.dry_weight_uom}`);if(!Wt.data.data||!Wt.data.data[0]||!Wt.data.data[0][De])throw new Error(`Wet weight uom not found for symbol ${Bt.wet_weight_uom}`);const qt=Jt.data.data[0][Ce],Gt=0===qt.indexOf("dry")?qt:`dry ${qt}`,Lt=Wt.data.data[0][De],Ht=0===Lt.indexOf("wet")?Lt:`wet ${Lt}`,Kt=await l.get(`/items/navarch_assay_lot?filter[${j}]=${kt}&sort[]=${R}`,{params:{fields:["id","commodity",x,"dry_weight","dry_weight_uom","buyer_assay","seller_assay","final_assay","lot_number",Z]}});console.log(`assayLotResponse.data.data=${JSON.stringify(Kt.data.data)}`),function(e){if(!e||0===e.length)throw new Error("No assay lots found for the selected parcel")}(Kt.data.data);const Yt=function(e){var t;console.log("[evaluateAnalyticalAssay]");const a={};for(const t of e)a[t.method]||(a[t.method]={}),a[t.method][t.commodity]||(a[t.method][t.commodity]=[]),null!==t.lot_number?(1===a[t.method][t.commodity].length&&null===a[t.method][t.commodity][0].lot_number&&(a[t.method][t.commodity]=[]),a[t.method][t.commodity].push(t)):null===t.lot_number&&0===a[t.method][t.commodity].length&&a[t.method][t.commodity].push(t);console.log(`[evaluateAnalyticalAssay] group: ${JSON.stringify(a)}}`);const o={};for(const e in a){console.log(`[evaluateAnalyticalAssay] methodKey: ${e}, group[methodKey]: ${JSON.stringify(a[e])}`);for(const n in a[e]){console.log(`[evaluateAnalyticalAssay] commodityKey: ${n}, group[methodKey][commodityKey]: ${JSON.stringify(a[e][n])}`),o[e]=null!=(t=o[e])?t:{},o[e][n]={};const i=a[e][n].reduce(((e,t)=>e+t.dry_weight),0);if(console.log(`[evaluateAnalyticalAssay] totalDryWeight: ${i} from ${JSON.stringify(a[e][n])}`),0===i||isNaN(i))throw r.value=`Please provide dry weight for ${n} commodity in ${e} method, total dry weight cannot be ${i}`,new Error("[evaluateAnalyticalAssay] totalDryWeight is 0");console.log(`[evaluateAnalyticalAssay] totalDryWeight: ${i}`),o[e][n].analytical_assay=a[e][n].reduce(((t,a)=>{var o,i;const s=null!=(i=a.final_assay)?i:null!=(o=a.seller_assay)?o:a.buyer_assay;if(null==s)throw r.value=`Please provide Final, Seller or Buyer assay value for ${n} commodity in ${e} method`,new Error("[evaluateAnalyticalAssay] assay value is not defined for assay lot");const l=t+s*a.dry_weight;return console.log(`[evaluateAnalyticalAssay] evaluated analytical assay: ${l} for method=${e}, commodity=${n}; with values accumulator=${t}, assayValue=${s}, dryWeight=${a.dry_weight}`),l}),0)/i,console.log(`[evaluateAnalyticalAssay] analytical assay: ${o[e][n].analytical_assay}`),a[e][n].length>0&&(o[e][n][Z]=a[e][n][0][Z])}}return console.log(`[evaluateAnalyticalAssay] analyticalAssay: ${JSON.stringify(o)}`),o}(Kt.data.data),Qt=d.value.assay_method;let Xt;if(Qt&&(Xt=Yt[Qt.toString()]),Xt||(Xt=Yt.Outturn),Xt||(Xt=Yt["Inturn Final"]),Xt||(Xt=Yt.Inturn),Xt||(Xt=Yt.Estimated),Xt||(Xt=Yt.Planned),!Xt)throw new Error("No assay lot data found for all assay methods. Please ensure assay lot data has been entered in the selected parcel.");console.log(`WEIGHT: ${JSON.stringify(Bt)}`),console.log(`ASSAYS: ${JSON.stringify(Xt)}`);const zt=await l.get(`/items/navarch_contract/${Ut}`,{params:{fields:[ee]}});!function(e){if(!e)throw new Error("Contract data not found, please ensure the selected contract still exists");if(!e[ee])throw new Error("The selected contract does not have a set currency, please ensure that the currency field for the contract is not empty")}(zt.data.data);const Zt=await l.get(`/items/navarch_currency/${zt.data.data.contract_currency}`,{params:{fields:[ge]}});!function(e){if(!e)throw new Error("Currency data not found, please ensure the selected currency still exists");if(!e[ge])throw new Error("The selected currency in the contract is not valid")}(Zt.data.data);const ea=Zt.data.data.code,ta=await l.get(`/items/navarch_commodity_in_contract?filter[contract]=${Ut}`,{params:{fields:["id",de,"primary_commodity",ce,"price_method","quotational_periods","payable_assay_rates","treatment_charge_rates","penalty_rates","penalty_per_uom",ue,"treatment_charge_per_uom"]}});!function(e){if(!e||0===e.length)throw new Error("No commodity data found in selected contract for parcel");if(!e.every((e=>e[de])))throw new Error("The selected contract has an undefined commodity, please ensure that the 'Commodity' field for all commodites in the contract is not empty");if(!e.every((e=>!e[ce]||e[ue])))throw new Error("The selected contract has an undefined base price Uom for commodity, please ensure that the 'Base Price Uom' field for all commodites in the contract is not empty")}(ta.data.data),console.log(`\tcommodityInContractResponse: ${JSON.stringify(ta.data.data)}`);const aa=[],oa=[];let na="";for(const{id:a,commodity:r,primary_commodity:i,price_method:c,quotational_periods:w,price_per_uom:N,penalty_per_uom:j,treatment_charge_per_uom:R}of ta.data.data){const x=await l.get(`/items/navarch_commodity/${r}`,{params:{fields:[ve,we]}});if(vt(x.data.data,r),!Xt[x.data.data.code]){console.log(`[generateInvoice] no analytical assay for commodity ${x.data.data.code} found, skipping...`);continue}if(i&&(na=x.data.data[ve]),null!==w){const r=w;console.log(`\tquotationalPeriods: ${JSON.stringify(r)}`);const i=Array.isArray(r)?r.find((e=>e.default)):null;if(!i)throw new Error(`No default quotational period found for commodity ${x.data.data.code}`);const A=r.filter((e=>!e.default)).map((e=>`${e.qp_period} ${e.qp_code}`)),j=[`${i.qp_period} ${i.qp_code}`,...A].join(", ");console.log(`[generateInvoice] evaluate payable assay for ${x.data.data.code} with an analytical assay=${null==(e=Xt[x.data.data.code])?void 0:e.analytical_assay}`);const V=await l.get(`/items/navarch_payable_assay_bracket?filter[${me}]=${a}`,{params:{fields:["bracket_type",fe,he,pe,ye,_e,"rate_type","initial_adjustment","initial_adjustment_uom","minimum_deduction","minimum_deduction_uom","maximum_cap","maximum_cap_uom"]}}),{payableAssay:B,expression:J}=await E(null==(t=Xt[x.data.data.code])?void 0:t.analytical_assay,null==(o=Xt[x.data.data.code])?void 0:o.assay_uom,V.data.data,x.data.data[ve]);let W,H,K="";if("Final"!==Pt){const e={invoice_type:Pt,days:jt[ie],day_type:jt[se],ref_day:jt[le]};if(!e)throw new Error(`[generateInvoice] No provisional pricing found for invoice type ${Pt}`);let t;switch(e.ref_day){case"Arrival Date":t=St.data.data[q],K="Actual Arrival Date from the Parcel form";break;case"B/L Date":t=St.data.data[G],K="B/L Date from the Parcel form";break;case"Invoice Date":t=d.value[pt],K="Invoice Date from the Invoice form";break;case"Estimated Shipment Date":t=St.data.data[L],K="Estimated Shipment Date from the Parcel form";break;default:throw new Error(`Invalid reference day for invoice pricing: ${e.ref_day}; please contact Navarch for support`)}if(null==t)throw new Error(`Reference day for invoice pricing ${K} is empty`);H=new Date(t);const a=parseInt(e.days),o=e.day_type;switch(o){case"Business Day(s)":W=T(H,a,!0);break;case"Calendar Day(s)":W=new Date(H.valueOf()),W.setDate(W.getDate()-a);break;default:throw new Error(`Invalid day type ${o} for ${Pt} Invoice in the contract, please ensure it is either Calendar Day(s) or Business Day(s)`)}if(W.valueOf()>Date.now())throw new Error(`Start date for provisional pricing ${W} (${K}) for ${Pt} Invoice has not occurred yet`);if(H.valueOf()>Date.now())throw new Error(`End date for provisional pricing ${H} (${K}) for ${Pt} Invoice has not occurred yet`)}else{let e;switch(i.qp_code){case"MAMA":e=q,K="Actual Arrival Date";break;case"MOSS":e=L,K="Estimated Shipment Date";break;case"MOS":case"MOAS":e=G,K="B/L Date";break;default:throw new Error(`Unsupported QP code ${i.qp_code} in the contract commodities, please ensure all commodity QP codes are MAMA, MOS, MOSS, or MOAS`)}const t=new Date(St.data.data[e]);if(null==t)throw new Error(`[generateInvoice] Invalid reference day for ${K} from ${i.qp_code}`);if(W=P(t,i.qp_period),W.valueOf()>Date.now())throw new Error(`[generateInvoice] Start date for provisional pricing ${W} (${K}) based on default QP has not occurred yet`);if(H=S(t,i.qp_period),H.valueOf()>Date.now())throw new Error(`[generateInvoice] End date for provisional pricing ${H} (${K}) based on default QP has not occurred yet`)}console.log(`[generateInvoice] provisional pricing date range: ${W.toString()} - ${H.toString()}`);const Y=await _t(x.data.data.code,c,W,H);let Q;const X=await l.get(`/items/navarch_treatment_charge_bracket?filter[${me}]=${a}`,{params:{fields:[fe,he,pe,ye,"base_treatment_charge","use_btc","for_every_unit",_e]}});void 0!==X.data.data&&null!==X.data.data&&X.data.data.length>0&&(Q=await D(Y,null==(n=Xt[x.data.data.code])||n.assay_uom,X.data.data,x.data.data[ve]));const z=await l.get(`/items/${$e}/${N}`,{params:{fields:[Ee]}});wt(z.data.data,x.data.data[ve]);const Z=z.data.data[Ee];let ee;if(Q){if(!R)throw new Error(`Treatment Charge Rate UOM is not defined for commodity ${x.data.data[ve]}`);const e=await l.get(`/items/${$e}/${R}`,{params:{fields:[Ee]}});gt(e.data.data,x.data.data[ve]),ee=e.data.data[Ee]}const te=await F(Z,Bt.dry_weight_uom,null==(s=Xt[x.data.data.code])?void 0:s.assay_uom);console.log(`[generateInvoice] payableMetalConversion for commodity ${x.data.data.name}: ${JSON.stringify(te)}`),te.initialConversion=1===(null==(u=te.initialConversion)?void 0:u.conversionFactor)?void 0:te.initialConversion,te.finalConversion=1===(null==(m=te.finalConversion)?void 0:m.conversionFactor)?void 0:te.finalConversion;const ae=await l.get(`/items/navarch_price_method/${c}`,{params:{fields:[lt]}});Et(ae.data.data,c,x.data.data[ve]),aa.push({commodity:x.data.data.name,analytical_assay:h(null==(f=Xt[x.data.data.code])?void 0:f.analytical_assay,4),deduction_expression:J,payable_assay:h(B,4),assay_uom:null==(p=Xt[x.data.data.code])?void 0:p.assay_uom,payable_metal:h(Bt.dry_weight*(null!=(_=null==(y=te.initialConversion)?void 0:y.conversionFactor)?_:1)*(null!=B?B:1)*(null!=(g=null==(v=te.finalConversion)?void 0:v.conversionFactor)?g:1)*("%"!==(null==($=Xt[x.data.data.code])?void 0:$.assay_uom)?1:.01),4),payable_metal_expression:`${h(Bt.dry_weight,4)}${Bt.dry_weight_uom}${te.initialConversion?` * ${h(te.initialConversion.conversionFactor,4)}${te.initialConversion.conversionUom}`:""} * ${h(null!=B?B:1,4)}${"%"!==(null==(b=Xt[x.data.data.code])?void 0:b.assay_uom)?`${null==(C=Xt[x.data.data.code])?void 0:C.assay_uom}`:" / 100"}${te.finalConversion?` * ${h(te.finalConversion.conversionFactor,4)}${te.finalConversion.conversionUom}`:""}`,payable_metal_uom:Z,qp:j,qp_start_date:I(W),qp_end_date:I(H),price_method:ae.data.data[lt],price_rate:h(Y,4),price_per_uom:Z,price:h(Bt.dry_weight*(null!=(k=null==(O=te.initialConversion)?void 0:O.conversionFactor)?k:1)*(null!=B?B:1)*(null!=(U=null==(M=te.finalConversion)?void 0:M.conversionFactor)?U:1)*("%"!==(null==(Ae=Xt[x.data.data.code])?void 0:Ae.assay_uom)?1:.01)*Y),treatment_charge:Q?{rate:h(Q.baseTreatmentCharge,4),discount:h((null!=(Ne=Q.baseTreatmentCharge)?Ne:0)-(null!=(Ie=Q.finalValue)?Ie:0),4),final_rate:h(Q.finalValue,4),per_uom:ee,final_amount:h(Bt.dry_weight*(null!=(Oe=Q.finalValue)?Oe:1))}:void 0,final_total:h(Bt.dry_weight*(null!=(rt=null==(Te=te.initialConversion)?void 0:Te.conversionFactor)?rt:1)*(null!=B?B:1)*(null!=(st=null==(it=te.finalConversion)?void 0:it.conversionFactor)?st:1)*("%"!==(null==(bt=Xt[x.data.data.code])?void 0:bt.assay_uom)?1:.01)*Y-(Q?1:0)*(Bt.dry_weight*(null!=(Ct=null==Q?void 0:Q.finalValue)?Ct:1)))})}const V=await l.get(`/items/navarch_penalty_bracket?filter[${me}]=${a}`,{params:{fields:[fe,he,pe,ye,"no_penalty","for_every_unit",_e]}});if(V.data.data.length>0){if(null===j)throw new Error(`[generateInvoice] penalty_per_uom is null for ${x.data.data.code}`);const e=await l.get(`/items/${$e}/${j}`,{params:{fields:[Ee]}});$t(e.data.data,x.data.data[ve]);const t=e.data.data[Ee],{penalty:a,expression:o,bracket:n}=await A(null==(Dt=Xt[x.data.data.code])?void 0:Dt.analytical_assay,V.data.data,ea,t,x.data.data[ve]);console.log(`[generateInvoice] evaluate penalty for ${x.data.data.code} with an analytical assay=${null==(At=Xt[x.data.data.code])?void 0:At.analytical_assay}, penaltyRate=${null==n?void 0:n.rate}, finalPenaltyRate=${a}, expression='${o}'`),oa.push({commodity:x.data.data.name,analytical_assay:h(null==(Nt=Xt[x.data.data.code])?void 0:Nt.analytical_assay,4),deduction_expression:o,assay_uom:null==(It=Xt[x.data.data.code])?void 0:It.assay_uom,penalty_rate:h(null==n?void 0:n.rate,4),penalty_per_uom:t,final_penalty_rate:h(a,4),final_penalty:h((null!=a?a:1)*Bt.dry_weight)})}}console.log(`[generateInvoice] COMMODITIES: ${JSON.stringify(aa)}`),console.log(`[generateInvoice] PENALTIES: ${JSON.stringify(oa)}`);const ra=aa.reduce(((e,t)=>e+w(t.price)),0),ia=aa.reduce(((e,t)=>{var a;return e+w(null==(a=t.treatment_charge)?void 0:a.final_amount)}),0),sa=oa.reduce(((e,t)=>e+w(t.final_penalty)),0);console.log(`[generateInvoice] TOTAL_REVENUE=${ra}, TOTAL_TREATMENT_CHARGE=${ia}, TOTAL_PENALTIES=${sa}`);let la,da=0;const ca=!!St.data.data[X];ca&&(da=St.data.data[X].reduce(((e,t)=>e+t.amount),0),la={adjustments:St.data.data[X].map((e=>({description:e.description,amount:h(e.amount)}))),total_adjustments:h(da)});const ua=jt[ae],ma=ra-ia-sa+da,fa=null!=ua?ma*ua/100:void 0,ha=await l.get(`/items/navarch_counterparty/${St.data.data[B]}`,{params:{fields:[Pe]}});!function(e){if(console.log("[validateCounterparty]"),!e)throw new Error("Counterparty for parcel not found");if(!e[Pe])throw new Error("No name defined for counterparty of the selected parcel")}(ha.data.data);const pa=await l.get(`/items/navarch_counterparty_navarch_address?filter[navarch_counterparty_id]=${St.data.data[B]}`,{params:{fields:[Se]}});!function(e){if(console.log("[validateCounterpartyAddress]"),!e||0===e.length)throw new Error("Counterparty address for parcel not found");if(!e[0][Se])throw new Error("No address defined for counterparty of the selected parcel")}(pa.data.data);const ya=pa.data.data[0][Se],_a=await l.get(`/items/navarch_address/${ya}`,{params:{fields:[Ye,Qe,Xe,ze,Ze,et]}});!function(e){if(!e)throw new Error("Buyer address for parcel not found");if(!e[Ye])throw new Error("No address line 1 defined for buyer address of the selected parcel");if(!e[Ze])throw new Error("No country defined for buyer address of the selected parcel")}(_a.data.data);const va=_a.data.data[Ye],wa=_a.data.data[Qe]?`,\n${_a.data.data[Qe]}`:"",ga=_a.data.data[Xe]?`,\n${_a.data.data[Xe]}`:"",$a=_a.data.data[ze]?`,\n${_a.data.data[ze]}`:"",Ea=await l.get(`/items/${Le}/${_a.data.data[Ze]}`,{params:{fields:[He]}});!function(e){if(!e)throw new Error("Something went wrong when getting the buyer's based country")}(Ea.data.data);const ba=Ea.data.data[He]?`, ${Ea.data.data[He]}`:"",Ca=`${va}${wa}${ga}${_a.data.data[et]?` ${_a.data.data[et]}`:""}${$a}${ba}`,Da=St.data.data[H];let Aa;Da&&(Aa=await l.get(`/items/navarch_vessel/${Da}`,{params:{fields:[tt]}}),function(e){if(console.log("[validateVessel]"),!e)throw new Error("Vessel for parcel not found");if(!e[tt])throw new Error("No name defined for vessel of the selected parcel")}(Aa.data.data));const Na=(await l.get("/items/navarch_company",{params:{fields:[ke,Me,Ue,Fe,je,xe,Re,Ve,Be,Je,We,qe,Ge]}})).data.data;!function(e){if(console.log("[validateCompanyData]"),!e)throw new Error("Company data not found");if(!e[ke])throw new Error("Please set company name in Directories > Company");if(!e[Ve])throw new Error("Please set company phone code in Directories > Company");if(!e[Me])throw new Error("Please set company address line 1 in Directories > Company");if(!e[Re])throw new Error("Please set the country the company is based in Directories > Company");if(!e[Be])throw new Error("Please set the company phone number in Directories > Company");if(!e[Je])throw new Error("Please set the company signatory name in Directories > Company");if(!e[We])throw new Error("Please set the company signatory title in Directories > Company");if(!e[qe])throw new Error("Please set the company remittance details in Directories > Company");if(!e[Ge])throw new Error("Please set the company signature in Directories > Company")}(Na);const Ia=Na[ke],Oa=await l.get(`/items/${Le}/${Na[Ve]}`,{params:{fields:[Ke]}});!function(e){if(!e)throw new Error("Company phone code not found, please ensure phone code selected for Directories > Company is valid");if(!e[Ke])throw new Error("Company country phone code not found, please contact Navarch support for assistance")}(Oa.data.data);const Ta=Oa.data.data[Ke],Pa=Na[Be],Sa=Na[Me],ka=Na[Ue]?`,\n${Na[Ue]}`:"",Ma=Na[Fe]?`,\n${Na[Fe]}`:"",Ua=Na[je]?`,\n${Na[je]}`:"",Fa=await l.get(`/items/${Le}/${Na[Re]}`,{params:{fields:[He]}});!function(e){if(!e)throw new Error("Country not found, please ensure country selected for Directories > Company is valid");if(!e[He])throw new Error("Country name not found, please contact Navarch support for assistance")}(Fa.data.data);const ja=Fa.data.data[He]?`, ${Fa.data.data[He]}`:"",Ra=`${Sa}${ka}${Ma}${Na[xe]?` ${Na[xe]}`:""}${Ua}${ja}`,xa=await l.get(`/items/${at}/${St.data.data[K]}`,{params:{fields:[ot,nt]}});!function(e){if(!e)throw new Error("Origin port for parcel not found");if(!e[ot])throw new Error("No name defined for origin port of the selected parcel");if(!e[nt])throw new Error("No country defined for origin port of the selected parcel")}(xa.data.data);const Va=await l.get(`/items/${at}/${St.data.data[Y]}`,{params:{fields:[ot,nt]}});!function(e){if(!e)throw new Error("Destination port for parcel not found");if(!e[ot])throw new Error("No name defined for destination port of the selected parcel");if(!e[nt])throw new Error("No country defined for destination port of the selected parcel")}(Va.data.data);let Ba=(await l.get(`/items/${dt}?filter[${ct}]=${Ot}`,{params:{fields:["id",ut]}})).data.data.reduce(((e,t)=>e+(t[ut]?1:0)),0)+1,Ja=Ot;const Wa=Ba.toString().padStart(2,"0"),qa=`${St.data.data[Q]} (#${Wa})`,Ga=Ja.toString().padStart(2,"0"),La={invoice_type:Pt,days:jt[oe],day_type:jt[ne],ref_day:"Final"===Pt?"Parcel Finalisation":jt[re]};if(!La)throw new Error(`Contract does not have a payment advice for invoice type ${Pt}`);let Ha,Ka="";switch(La.ref_day){case"Arrival Date":Ka="Actual Arrival Date from the Parcel form",Ha=St.data.data[q];break;case"B/L Date":Ka="B/L Date from the Parcel form",Ha=St.data.data[G];break;case"Invoice Date":Ka="Invoice Date from the Invoice form",Ha=d.value[pt];break;case"Estimated Shipment Date":Ka="Estimated Shipment Date from the Parcel form",Ha=St.data.data[L];break;case"Parcel Finalisation":if(void 0===St.data.data[z]||null===St.data.data[z])throw new Error("[generateInvoice] Parcel has not been finalised, please fill in the the parcel finalisation date in the parcel form.");Ka="Parcel Finalisation Date from the Parcel form",Ha=St.data.data[z];break;default:throw new Error(`Invalid reference day for payment advice: ${La.ref_day}; please contact Navarch for support`)}if(null==Ha)throw new Error(`Reference day for payment advice ${Ka} is empty in parcel`);const Ya=new Date(Ha),Qa=parseInt(La.days),Xa=La.day_type;let za;switch(Xa){case"Business Day(s)":za=function(e,t,a=!1){const o=new Date(e.valueOf());let n=t-(a?1:0);for(;n>0;)o.setDate(o.getDate()+1),0!==o.getDay()&&6!==o.getDay()&&(n-=1);return o.getHours()>=12&&o.setDate(o.getDate()+1),o}(Ya,Qa,!0);break;case"Calendar Day(s)":za=new Date(Ya.valueOf()),za.getHours()>=12?za.setDate(za.getDate()+Qa+1):za.setDate(za.getDate()+Qa);break;default:throw new Error(`[generateInvoice] Invalid day_type for payment advice ${Xa}`)}console.log(`[generateInvoice] payment advice due date: ${za.toString()}`);const Za=I(za);let eo,to,ao,oo;if(d.value[ft]){const e=await l.get(`/items/${dt}/${d.value[ft]}`,{params:{fields:[ct,ut,ht,mt]}});if(console.log(`[generateInvoice] revisionParcelResponse: ${JSON.stringify(e.data)}`),200!==e.status||!e.data.data)throw new Error(`[generateInvoice] Failed to get invoice ${d.value[ft]}`);if(e.data.data[ct]!==Ot)throw new Error(`[generateInvoice] Parcel ID mismatch between this invoice with parcel ${Ot}, and the revision invoice ${d.value[ft]} with parcel id ${e.data.data[ct]}`);if(!e.data.data[ut])throw new Error(`[generateInvoice] No invoice pdf has been generated yet for invoice ${d.value[ft]}`);if(!e.data.data[ht])throw new Error(`[generateInvoice] No invoice type found for the revision invoice ${d.value[ft]}`);ao=e.data.data[ht],oo=e.data.data[mt];const t=e.data.data[ut];if(function(e){if(!e)throw new Error("Revision invoice data not found");if(!e.invoice_number)throw new Error("Revision invoice data does not have an invoice number in generated document");if(!e.balance_in_sellers_favor)throw new Error("Revision invoice data does not have a valid 'Balance in Sellers Favor' in generated document")}(t),console.log(`[generateInvoice] revisionInvoiceData: ${JSON.stringify(t)}`),eo=t.invoice_number,!eo||""===eo)throw new Error(`[generateInvoice] Could not find invoice number in revision invoice ${d.value[ft]}`);const a=t.balance_in_sellers_favor.replace(/,/g,"");if(to=parseFloat(a),!to||isNaN(to))throw new Error(`[generateInvoice] Total payment=${t.balance_in_sellers_favor} found is not convertible to monetary amount for revision invoice ${d.value[ft]}`)}const no=null!=fa?fa-(null!=to?to:0):void 0,ro={seller:Ia,seller_address:Ra,seller_phone_number:`+${Ta} ${Pa}`,signatory:{signatoryName:Na[Je],signatoryTitle:Na[We],signature:Na[Ge],company:Ia},remittance:Na[qe],buyer:ha.data.data[Pe],buyer_address:Ca,shipment_code:St.data.data[Q],vessel:Aa?Aa.data.data[tt]:"N/A",bl_date:St.data.data[G]?I(new Date(St.data.data[G])):"N/A",invoice_type:Pt,invoice_date:I(Tt),revision:eo&&to?oo:void 0,invoice_number:qa,parcel:`${St.data.data[Q]} (#${Ga})`,port_of_loading:`${xa.data.data[ot]}, ${xa.data.data[nt]}`,port_of_discharge:`${Va.data.data[ot]}, ${Va.data.data[nt]}`,primary_commodity:`${na} Concentrates`,due_date:Za,wet_weight:h(Bt.wet_weight,4),wet_weight_uom:Bt.wet_weight_uom,wet_weight_uom_name:N(Ht),moisture:h(Bt.moisture,4),moisture_uom:"%",dry_weight:h(Bt.dry_weight,4),dry_weight_uom:Bt.dry_weight_uom,dry_weight_uom_name:N(Gt),total_revenue:h(ra),total_deductions:h(sa+ia),currency:ea,commodities:aa,penalties:{penalties:oa,total_penalties:h(sa)},adjustments:ca?la:void 0,invoice_value:h(ma),payable_percentage:h(ua),payable_amount:h(fa),payment_received_source:eo&&to&&oo?`${ao}.${oo}.${eo}`:void 0,payment_received:eo&&to?h(to):void 0,balance_in_sellers_favor:h(no)};console.log(`[generateInvoice] invoice request body: ${JSON.stringify(ro)}`);const io=await l.post("/generate/invoice",ro);if(200!==io.status)return console.log(`[generateInvoice] invoice response status: ${io.status}`),r.value=io.data,void(i.value=!1);const so={...ro,doc_name:io.data};a("input",so),console.log(`[generateInvoice] invoice response: ${JSON.stringify(d.value)}`),i.value=!1,yt(io.data)}catch(e){return i.value=!1,console.log(`generating invoice went wrong due to: ${e}`),void(r.value=e)}},viewInvoice:yt,isCopying:s,copy:async function(){s.value=!0;const{id:e,user_created:t,date_created:a,user_updated:o,date_updated:n,invoice:i,...c}=d.value;console.log(`[invoice::copy] requestBody=${JSON.stringify(c)}`);const u=await l.post("/items/navarch_invoices",c);if(200!==u.status)return console.log(`[invoice::copy] copy response status: ${u.status}`),void(r.value=`Failed to duplicate invoice with status ${u.status}`);s.value=!1,window.open(`/admin/content/navarch_invoices/${u.data.data.id}`)},failureReason:r};function yt(e){const a=null!=e?e:t.value.doc_name;console.log(`[viewInvoice] doc name: ${a}`);const o=`/display-doc?filepath=${encodeURIComponent(`/data/uploads/${a}.pdf`)}`;window.open(o)}async function _t(e,t,a,o,n=1){if(f(e))throw new Error("Commodity is not defined for price calcualtion");if(f(t))throw new Error(`Price method for commodity ${e} is not defined for price calcualtion`);if(f(a))throw new Error(`Start date is not defined for price calcualtion with ${t} has not been properly defined, please ensure that contract QP is properly defined`);if(f(o))throw new Error(`End date is not defined for price calcualtion with ${t} has not been properly defined, please ensure that contract QP is properly defined`);const r=await l.get(`/items/navarch_commodity_price?filter[_and][0][price_method][_eq]=${t}&filter[_and][0][currency][_eq]=${n}&filter[_and][1][date][_between][0]=${O(a)}&filter[_and][1][date][_between][1]=${O(o)}`,{params:{fields:[rt,it,st,"price_method"]}});if(!r||!r.data||!r.data.data)throw new Error(`[getCommodityAvgPrice] Failed to get commodity prices for commodity ${e} between ${O(a)} and ${O(o)}`);if(0===r.data.data.length)throw new Error(`No commodity prices found for commodity ${e} between ${O(a)} and ${O(o)}`);return r.data.data.reduce(((e,a)=>{if(!a[it]&&!a[rt])throw new Error(`Commodity for ${t} on the date of ${a[st]} does not have a price, please contact Navarch for assistance`);let o;if(null!==a[it]&&(o=Number(a[it])),null===a[rt])throw new Error(`The commodity price for Price Method #${t} for the date of ${a[st]} is not a valid number, please contact Navarch for assistance`);return o=Number(a[rt]),e+o}),0)/r.data.data.length}function vt(e,t){var a,o;if(console.log("[validateCommodityData]"),!e)throw new Error("commodity data response is null");if(!e[ve])throw new Error(`Commodity name for commodity ${null!=(a=e[we])?a:t} is undefined, please contact Navarch for assistance`);if(!e[we])throw new Error(`Commodity code for commodity ${null!=(o=e[ve])?o:t} is not defined, please contact Navarch for assistance`)}function wt(e,t){if(!e)throw new Error(`Price per UOM for commodity ${t} is not a valid`);if(!e[Ee])throw new Error(`Price per UOM for commodity ${t} does not have a valid unit symbol, please contact Navarch for assistance`)}function gt(e,t){if(!e)throw new Error(`Treatment charge per UOM for commodity ${t} is not a valid`);if(!e[Ee])throw new Error(`Treatment charge per UOM for commodity ${t} does not have a valid unit symbol, please contact Navarch for assistance`)}function $t(e,t){if(!e)throw new Error(`Penalty per UOM for commodity ${t} is not a valid`);if(!e[Ee])throw new Error(`Penalty per UOM for commodity ${t} does not have a valid unit symbol, please contact Navarch for assistance`)}function Et(e,t,a){if(!e)throw new Error(`Price method ${t} for commodity ${a} is not defined, please contact Navarch for assistance`);if(!e[lt])throw new Error(`Price method ${t} for commodity ${a} has no name, please contact Navarch for assistance`)}}});const g={key:0},$={key:1};var E=[],b=[];!function(e,t){if(e&&"undefined"!=typeof document){var a,o=!0===t.prepend?"prepend":"append",n=!0===t.singleTag,r="string"==typeof t.container?document.querySelector(t.container):document.getElementsByTagName("head")[0];if(n){var i=E.indexOf(r);-1===i&&(i=E.push(r)-1,b[i]={}),a=b[i]&&b[i][o]?b[i][o]:b[i][o]=s()}else a=s();65279===e.charCodeAt(0)&&(e=e.substring(1)),a.styleSheet?a.styleSheet.cssText+=e:a.appendChild(document.createTextNode(e))}function s(){var e=document.createElement("style");if(e.setAttribute("type","text/css"),t.attributes)for(var a=Object.keys(t.attributes),n=0;n<a.length;n++)e.setAttribute(a[n],t.attributes[a[n]]);var i="prepend"===o?"afterbegin":"beforeend";return r.insertAdjacentElement(i,e),e}}(".margin-top-16px[data-v-64969d30] {\n  margin-top: 16px;\n}",{}),w.render=function(e,t,a,o,n,p){const y=r("v-button"),_=r("v-notice");return i(),s(l,null,[d(' <input :value="value" @input="handleChange($event.target.value)" /> '),d(" create a button only interface for Directus"),e.value?(i(),s("div",$,[c(y,{onClick:t[1]||(t[1]=()=>e.viewInvoice())},{default:u((()=>[m("View Invoice ")])),_:1})])):(i(),s("div",g,[c(y,{onClick:t[0]||(t[0]=()=>e.generateInvoice()),loading:e.isGeneraingDoc},{default:u((()=>[m("Generate Invoice")])),_:1},8,["loading"]),e.failureReason?(i(),f(_,{key:0},{default:u((()=>[m(h(e.failureReason),1)])),_:1})):d("v-if",!0)])),c(y,{class:"margin-top-16px",onClick:t[2]||(t[2]=()=>e.copy()),loading:e.isCopying},{default:u((()=>[m("Copy")])),_:1},8,["loading"])],64)},w.__scopeId="data-v-64969d30",w.__file="src/interface.vue";var C=t({id:"invoice_generator_button",name:"Generate Invoice Button",icon:"receipt_long",description:"This is a custom interface for Navarch's Invoice Generator Button.",component:w,options:null,types:["json"],group:"standard"});export{C as default};
