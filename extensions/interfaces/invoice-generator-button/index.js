import{useApi as e,defineInterface as t}from"@directus/extensions-sdk";import{defineComponent as a,ref as o,inject as n,resolveComponent as r,openBlock as i,createElementBlock as l,Fragment as s,createCommentVNode as d,createVNode as c,withCtx as u,createTextVNode as f,createBlock as m,toDisplayString as h}from"vue";var _=(e=>(e.BRACKET="Brackets",e.MIN_DEDUCTION="Minimum Deduction",e.MAX_CAP="Maximum Cap",e))(_||{}),p=(e=>(e.PERCENTAGE="Percentage",e.FRACTIONAL="Fractional",e))(p||{}),y=(e=>(e.WET_WEIGHT="wet_weight",e.MOISTURE="moisture",e.DRY_WEIGHT="dry_weight",e))(y||{}),v=(e=>(e.METHOD="method",e.WET_WEIGHT_UOM="wet_weight_uom",e.MOISTURE_UOM="moisture_uom",e.DRY_WEIGHT_UOM="dry_weight_uom",e))(v||{}),w=a({props:{value:{type:Object,default:null}},emits:["input"],setup(t,{emit:a}){const r=o(""),i=o(!1),l=e(),s=n("values",o({}));function d(e){if(console.log("[evaluateWeightData]"),0===e.length)return;const t=u(e,y.DRY_WEIGHT),a=u(e,y.WET_WEIGHT);return{method:c(e,v.METHOD),lots:e,dry_weight_uom:c(e,v.DRY_WEIGHT_UOM),wet_weight_uom:c(e,v.WET_WEIGHT_UOM),dry_weight:t,wet_weight:a,moisture:(a-t)/a*100}}function c(e,t){if(console.log("[getFirstValueAsSharedValue]"),0!==e.length)return console.log(`lots[0][${t.toString()}]=${e[0][t.toString()]}`),e[0][t.toString()]}function u(e,t){return console.log("[evaluateAggregateValue]"),e.reduce(((e,a)=>{var o;return e+(null!=(o=a[t.toString()])?o:0)}),0)}function f(e){return null==e}function m(e,t=2,a=!0){if(console.log("[formatNumber]"),isNaN(e)||null===e)return"-";const o=Math.round(e*Math.pow(10,t))/Math.pow(10,t),[n,r]=o.toString().split("."),i=n.replace(/\B(?=(\d{3})+(?!\d))/g,",");if(!r&&!a)return i;return`${i}.${(null!=r?r:"").padEnd(t,"0")}`}function h(e){if(console.log("[parseNumber]"),!e)return 0;const t=parseFloat(e.replace(/,/g,""));return console.log(`[parseNumber] number: ${e} to ${t}`),t}function w(e,t){var a;if(console.log("[findBracket]"),1===e.length){if(t>=(null!=(a=e[0].lower_threshold)?a:0)&&(null===e[0].upper_threshold||void 0===e[0].upper_threshold||t<e[0].upper_threshold))return e[0];throw new Error(`[findBracket] value=${t} does not fall within the only bracket: ${JSON.stringify(e[0])}`)}return e.find((e=>{var a,o;const n=t>(null!=(a=e.lower_threshold)?a:0)&&(null===e.upper_threshold||void 0===e.upper_threshold||t<e.upper_threshold)||e.lower_threshold_inclusive&&t===(null!=(o=e.lower_threshold)?o:0)||e.upper_threshold_inclusive&&t===e.upper_threshold;return console.log(`[findBracket] value=${t} for bracket: ${JSON.stringify(e)}? match=${!!n}`),n}))}function g(e,t){var a,o,n,r,i,l,s;console.log("[evaluateFinalValueFromBrackets]");const d=(e-(null!=(a=t.initial_adjustment)?a:0)*(null!=(o=t.initial_adjustment_conversion_factor)?o:1))*(null!=(n=t.rate)?n:0)*(t.rate_type===p.PERCENTAGE?.01:1)+(null!=(r=t.final_adjustment)?r:0)*(null!=(i=t.final_adjustment_conversion_factor)?i:1);switch(t.bracket_type){case _.MIN_DEDUCTION:if(null===t.comparator||void 0===t.comparator)throw new Error("Minimum deduction not found");const a=t.comparator*(null!=(l=t.comparator_conversion_factor)?l:1);return e-d<a?e-a:d;case _.MAX_CAP:if(null===t.comparator||void 0===t.comparator)throw new Error("Maximum cap not found");const o=t.comparator*(null!=(s=t.comparator_conversion_factor)?s:1);return d>o?o:d;case _.BRACKET:return d;default:throw new Error(`bracket type ${t.bracket_type} is not supported`)}}async function $(e,t,a){var o,n,r,i,l,s,d,c;if(console.log("[evaluatePayableAssay]"),!a||0===a.length)return{};const u=w(a,e);if(!u)throw new Error(`Bracket not found for value ${e}, please ensure the brackets for all commodities defined in the contract cover all range of possible values for payable assays`);let f,h,y=1;u.initial_adjustment_uom&&void 0!==u.initial_adjustment_uom&&null!==u.initial_adjustment_uom&&u.initial_adjustment_uom!==t&&(y=await k(u.initial_adjustment_uom,t),f=M(u.initial_adjustment_uom,t));let v,$=1;u.bracket_type===_.MAX_CAP?(h=null!=(o=u.maximum_cap)?o:0,void 0!==u.maximum_cap_uom&&null!==u.maximum_cap_uom&&u.maximum_cap_uom!==t&&($=await k(u.maximum_cap_uom,t),v=M(u.maximum_cap_uom,t))):u.bracket_type===_.MIN_DEDUCTION&&(h=null!=(n=u.minimum_deduction)?n:0,void 0!==u.minimum_deduction_uom&&null!==u.minimum_deduction_uom&&u.minimum_deduction_uom!==t&&($=await k(u.minimum_deduction_uom,t),v=M(u.minimum_deduction_uom,t)));const E=g(e,{bracket_type:u.bracket_type,rate:null!=(r=u.rate)?r:1,rate_type:null!=(i=u.rate_type)?i:p.FRACTIONAL,initial_adjustment:null!=(l=u.initial_adjustment)?l:0,initial_adjustment_conversion_factor:y,comparator:h,comparator_conversion_factor:$});let b="";const C=void 0!==u.initial_adjustment&&null!==u.initial_adjustment;if(u.bracket_type===_.BRACKET)b=`${C?"(":""}${m(e,4)}${null!=t?t:""}${C?` - ${m(u.initial_adjustment,4)}${null!=(s=u.initial_adjustment_uom)?s:`${null!=t?t:""}`}`:""}${C&&1!==y?` * ${m(y,4)}${f}`:""}${C?")":""} * ${m(u.rate,4)}${u.rate_type===p.PERCENTAGE?"/100":`/${m(1,4)}`}`;else if(u.bracket_type===_.MIN_DEDUCTION){b=E===e-h*$?`${m(e,4)}${null!=t?t:""} - ${m(h,4)}${null!=t?t:""}${1!==$?` * ${m($,4)}${v}`:""}`:`${C?"(":""}${m(e,4)}${null!=t?t:""}${C?` - ${m(u.initial_adjustment,4)}${null!=(d=u.initial_adjustment_uom)?d:`${null!=t?t:""}`}`:""}${C&&1!==y?` * ${m(y,4)}${f}`:""}${C?")":""} * ${m(u.rate,4)}${u.rate_type===p.PERCENTAGE?"/100":`/${m(1,4)}`}`}else{if(u.bracket_type!==_.MAX_CAP)throw new Error(`[buildPayableAssayExpression] unknown bracket method: ${u.bracket_type}`);b=E===h*$?`${m(h,4)}${null!=t?t:""}${1!==$?` * ${m($,4)}${v}`:""}`:`${C?"(":""}${m(e,4)}${null!=t?t:""}${C?` - ${m(u.initial_adjustment,4)}${null!=(c=u.initial_adjustment_uom)?c:`${null!=t?t:""}`}`:""}${C&&1!==y?` * ${m(y,4)}${f}`:""}${C?")":""} * ${m(u.rate,4)}${u.rate_type===p.PERCENTAGE?"/100":`/${m(1,4)}`}`}return{payableAssay:E,expression:b}}console.log("[main] formValues=",s);const E="above the lower threshold, plus",b="below the upper threshold, minus";function C(e,t,a){var o,n,r,i;if(console.log("[evaluateTreatmentCharge]"),!a||!a.length)return;const l=w(a,e);if(!l)throw new Error(`Bracket not found for value ${e}, please ensure the brackets for all commodities defined in the contract cover all range of possible values for treatment charge`);let s=0,d=1;if(l.use_btc)d=0,s=0;else if(d=null!=(o=l.rate)?o:1,l.for_every_unit===E)s=null!=(n=l.lower_threshold)?n:0;else{if(l.for_every_unit!==b)throw new Error(`[evaluateTreatmentCharge] unknown for_every_unit: ${l.for_every_unit}`);s=null!=(r=l.upper_threshold)?r:0}const c={bracket_type:_.BRACKET,rate:d,rate_type:p.FRACTIONAL,initial_adjustment:s,final_adjustment:null!=(i=l.base_treatment_charge)?i:0};return console.log(`[evaluateTreatmentCharge] bracketForEvaluation: ${JSON.stringify(c)}`),{finalValue:g(e,c),baseTreatmentCharge:l.base_treatment_charge}}function N(e,t,a,o){var n,r,i;if(console.log("[evaluatePenalty]"),!t||!t.length)return{};const l=w(t,e);if(!l)throw new Error(`[evaluatePenalty] Bracket not found for value ${e}, please ensure the brackets for all commodities defined in the contract cover all range of possible values for penalty`);let s=0,d=1;if(l.no_penalty)d=0,s=0;else if(d=null!=(n=l.rate)?n:1,l.for_every_unit===E)s=null!=(r=l.lower_threshold)?r:0;else{if(l.for_every_unit!==b)throw new Error(`[evaluatePenalty] unknown for_every_unit: ${l.for_every_unit}`);s=null!=(i=l.upper_threshold)?i:0}const c={bracket_type:_.BRACKET,rate:d,rate_type:p.FRACTIONAL,initial_adjustment:s,final_adjustment:0};console.log(`[evaluatePenalty] bracketForEvaluation: ${JSON.stringify(c)}`);const u=g(e,c),f=null!=c.initial_adjustment;let h="";return h=l.rate&&0!==l.rate?`${f?"(":""}${m(e,4)}${f?` - ${m(s,4)})`:""} / ${m(1,4)} * ${null!=a?a:""} ${m(d,4)}/${null!=o?o:""}`:"No penalty",{penalty:u,expression:h,bracket:l}}function D(e){return e.toLowerCase().split(" ").map((e=>e.charAt(0).toUpperCase()+e.slice(1))).join(" ")}function A(e){const t=e.getDate(),a=e.getMonth(),o=e.getFullYear();return`${t} ${["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"][a]} ${o}`}function I(e,t=!0){const a=e.getMonth()+1,o=e.getDate();return`${e.getFullYear()}${t?"-":" "}${a<10?"0":""}${a}${t?"-":" "}${o<10?"0":""}${o}`}function O(e,t,a=!1){const o=new Date(e.valueOf());let n=t-(a?1:0);for(;n>0;)o.setDate(o.getDate()-1),0!==o.getDay()&&6!==o.getDay()&&(n-=1);return o}function T(e,t){const a=new Date(e.valueOf());return a.setMonth(a.getMonth()+t,1),a}function P(e,t){const a=new Date(e.valueOf());return a.setMonth(a.getMonth()+t+1,0),a}async function S(e,t){if(e===t)return 1;const a=await l.get(`/items/${Ee}?filter[${be}]=${e}`,{params:{fields:[Ae]}});if(0===a.data.data.length||null===a.data.data[0][Ae]||void 0===a.data.data[0][Ae])throw new Error(`[getWeightUnitConversionValue] failed to get conversion value for source weight unit ${e}. Ensure that the symbol is correct and is a weight unit symbol`);const o=await l.get(`/items/${Ee}?filter[${be}]=${t}`,{params:{fields:[Ae]}});if(0===o.data.data.length||null===o.data.data[0][Ae]||void 0===o.data.data[0][Ae])throw new Error(`[getWeightUnitConversionValue] failed to get conversion value for the target weight unit ${t}. Ensure that the symbol is correct and is a weight unit symbol`);const n=parseFloat(a.data.data[0][Ae]);if(isNaN(n))throw new Error(`[getWeightUnitConversionValue] source weight unit ${e} conversion value=${n} is not a number`);const r=parseFloat(o.data.data[0][Ae]);if(isNaN(r))throw new Error(`[getWeightUnitConversionValue] target weight unit ${t} conversion value=${r} is not a number`);return n/r}async function k(e,t){if(null==e||null==t)return 1;if(e===t)return 1;const a=await l.get(`/items/${Ie}?filter[${Oe}]=${e}`,{params:{fields:[Te]}});if(0===a.data.data.length||void 0===a.data.data[0][Te]||null===a.data.data[0][Te])throw new Error(`[getAssayUnitConversionValue] failed to get conversion value for source weight unit ${e}. Ensure that the symbol is correct and is a weight unit symbol`);const o=await l.get(`/items/${Ie}?filter[${Oe}]=${t}`,{params:{fields:[Te]}});if(0===o.data.data.length||void 0===o.data.data[0][Te]||null===o.data.data[0][Te])throw new Error(`[getAssayUnitConversionValue] failed to get conversion value for the target weight unit ${t}. Ensure that the symbol is correct and is a weight unit symbol`);const n=parseFloat(a.data.data[0][Te]);if(isNaN(n))throw new Error(`[getAssayUnitConversionValue] source weight unit ${e} conversion value=${n} is not a number`);console.log(`[getAssayUnitConversionValue] source unit conversion value=${n}`);const r=parseFloat(o.data.data[0][Te]);if(isNaN(r))throw new Error(`[getAssayUnitConversionValue] target weight unit ${e} conversion value=${r} is not a number`);return console.log(`[getAssayUnitConversionValue] target unit conversion value=${r}`),console.log("[getAssayUnitConversionValue] returning "+n/r),n/r}function M(e,t){if(void 0===e||void 0===t||null===e||null===t)return;const a=e.split("/"),o=t.split("/");if(a.length>2||o.length>2)throw new Error(`[getConversionUnit] sourceUnit=${e} and targetUnit=${t} must be in the format of 'unit1/unit2', an extra '/' was found`);if(1===a.length&&1===o.length)return`${o[0]}/${a[0]}`;if(1===a.length){const e=o[0]===a[0]?"":`${o[1]}(${a[1]})`,t=o[1];return""===t?e:`${e}/${t}`}if(1===o.length){const e=a[1],t=a[0]===o[0]?"":`${a[1]}(${o[0]})`;return""===t?e:`${e}/${t}`}{const e=a[0]===o[0],t=a[1]===o[1],n=e||""===a[0],r=e||""===o[0],i=t||""===a[1],l=t||""===o[1],s=!i&&!r,d=!n&&!l,c=`${i?"":a[1]}${s?"(":""}${r?"":`${o[0]}`}${s?")":""}`,u=`${n?"":a[0]}${d?"(":""}${l?"":`${o[1]}`}${d?")":""}`;return""===u?c:`${c}/${u}`}}async function U(e,t,a){const o=await l.get(`/items/${Ee}?filter[${Ce}]=${t}`,{params:{fields:[be]}});if(!o.data.data||!o.data.data[0]||!o.data.data[0][be])throw new Error(`[getConversionValuesAndUnitsForPayableMetalCalculation] Dry weight uom not found for symbol ${t}`);const n=o.data.data[0][be];if("%"===a){if(n===e)return{};const t=M(n,e);if(!t)throw new Error(`[getConversionValuesAndUnitsForPayableMetalCalculation] no conversion unit found for dry weight unit ${n} and target weight unit ${e}`);return{finalConversion:{conversionFactor:await S(n,e),conversionUom:t}}}let r=a.split("/");if(1==r.length){const e=await async function(e){const t=await l.get(`/items/${Ie}`,{params:{fields:[Oe,Pe],filter:{[Pe]:{_nnull:!0},[Oe]:{_eq:e}}}});if(200!==t.status||!t.data||0===t.data.data.length)throw new Error("[getAssayUnitComposition] no assay units found with composition");return t.data.data[0][Pe]}(a);if(!e)throw new Error(`[getConversionValuesAndUnitsForPayableMetalCalculation] assay unit ${a} does not have a composition`);r=e.split("/")}if(r.length>2||0===r.length)throw new Error(`[getConversionValuesAndUnitsForPayableMetalCalculation] assay unit ${a} is not in the format of 'unit1/unit2'`);const i=r[0],s=r[1],d={};if(s!==n){const e=M(n,s);if(!e)throw new Error(`[getConversionValuesAndUnitsForPayableMetalCalculation] no conversion unit found for dry weight unit ${n} and assay unit denominator unit ${s}`);d.initialConversion={conversionFactor:await S(n,s),conversionUom:e}}if(i!==e){const t=M(i,e);if(!t)throw new Error(`[getConversionValuesAndUnitsForPayableMetalCalculation] no conversion unit found for target weight unit ${e} and assay unit numerator unit ${i}`);d.finalConversion={conversionFactor:await S(i,e),conversionUom:t}}return d}const F="foreign_key",R="lot_number",j="method",V="contract",x="counterparty",B="assay_results",J="weight_result",G="actual_arrival_date",W="bl_date",q="estimated_shipment_date",L="vessel",H="origin",K="destination",Y="shipment_code",Q="adjustments",X="parcel_finalisation_date",z="dry_weight",Z="final_assay",ee="assay_uom",te="contract_currency",ae="invoice_type",oe="pay_percent",ne="pa_days",re="pa_day_type",ie="pa_ref_day",le="pa_final_inv_ref_day",se="pp_days",de="pp_day_type",ce="pp_ref_day",ue="commodity",fe="price_per_uom",me="related_commodity_in_contract",he="lower_threshold",_e="lower_threshold_inclusive",pe="upper_threshold",ye="upper_threshold_inclusive",ve="rate",we="name",ge="code",$e="code",Ee="navarch_unit",be="symbol",Ce="dry_symbol",Ne="dry_unit",De="wet_unit",Ae="conversionToGram",Ie="navarch_assay_unit",Oe="unit",Te="conversion_to_ppb",Pe="composition",Se="name",ke="navarch_address_id",Me="name",Ue="line_1",Fe="line_2",Re="city",je="state",Ve="country",xe="zip",Be="phone_code",Je="phone_number",Ge="signatory_name",We="signatory_title",qe="remittance_details",Le="navarch_country",He="name",Ke="phone_code",Ye="line_1",Qe="line_2",Xe="city",ze="state",Ze="country",et="zip",tt="name",at="navarch_world_port",ot="port_name",nt="country",rt="price_pm",it="average_price",lt="date",st="navarch_invoices",dt="parcel",ct="invoice",ut="document_type",ft="revision_invoice",mt="invoice_type",ht="invoice_date";return{isGeneraingDoc:i,invoiceUrl:s.value,generateInvoice:async function(){var e,t,o,n,c,u,f,_,p,y,v,w,g,E,b,I,S,k,M,Ae,Ie,Oe,Te,Pe,rt,it,lt,$t,Et,bt,Ct,Nt,Dt,At;r.value="";try{i.value=!0,console.log("[generateInvoice] formValues=",s);const It=s.value[dt];if(!It)return r.value="Parcel not selected for invoice document generation",void(i.value=!1);const Ot=s.value[ht]?new Date(s.value[ht]):new Date,Tt=s.value[mt],Pt=await l.get(`/items/navarch_parcel/${It}`,{params:{fields:[B,J,V,x,G,W,q,L,H,K,Y,Q]}});console.log(`parcelResponce.data.data=${JSON.stringify(Pt.data.data)}`),function(e){if(!e)throw new Error("Parcel data not found, please ensure the selected parcel still exists");if(!e[V])throw new Error("The selected parcel does not have a contract, please ensure that the contract field for the parcel is not empty");if(!e[x])throw new Error("The selected parcel does not have a counterparty, please ensure that the counterparty field for the parcel is not empty");if(!e[B])throw new Error("The selected parcel does not have assay results");if(!e[J])throw new Error("The selected parcel does not have weight results");if(!e[H])throw new Error("The selected parcel does not have an origin port");if(!e[K])throw new Error("The selected parcel does not have a destination port");if(!e[Y])throw new Error("The selected parcel does not have a shipment code")}(Pt.data.data);const St=Pt.data.data[B],kt=Pt.data.data[J],Mt=Pt.data.data[V],Ut=await l.get(`/items/navarch_contract_payment_information?filter[related_contract]=${Mt}`,{params:{fields:[ae,oe,ne,re,ie,le,se,de,ce]}});if(Ut.data.data&&0===Ut.data.data.length)return r.value="No invoice type found for the contract",void(i.value=!1);const Ft=Ut.data.data.find((e=>e[ae]===Tt));if(!Ft)return r.value=`Cannot find payment information for ${Tt} in the contract, please ensure that data for it has been entered and saved`,void(i.value=!1);const Rt=await l.get(`/items/navarch_weight_lot?filter[${F}]=${kt}&sort[]=${R}`,{params:{fields:["id","dry_weight","wet_weight",j,"moisture","wet_weight_uom","dry_weight_uom"]}});console.log(`weightLotResponse.data.data=${JSON.stringify(Rt.data.data)}`),function(e){if(!e||0===e.length)throw new Error("No weight lots found for the selected parcel")}(Rt.data.data);const jt=function(e){console.log("[evaluateWeights]");const t={};for(const a of e)t[a.method]||(console.log(`adding method ${a.method} to weightData object`),t[a.method]=[]),console.log(`adding lot ${a.id} to weightData.${a.method} array`),t[a.method.toString()].push(a);const a=[];for(const e of Object.keys(t)){if(!t[e]){console.log(`method=${e} does not exist in weightData object`);continue}console.log(`adding lots and other values to weights for method=${e}`);const o=d(t[e]);o&&a.push(o)}return a}(Rt.data.data),Vt=s.value.weight_method;let xt=jt.find((e=>e.method===Vt));if(xt||(xt=jt.find((e=>"Outturn"===e.method))),xt||(xt=jt.find((e=>"Inturn Final"===e.method))),xt||(xt=jt.find((e=>"Inturn"===e.method))),xt||(xt=jt.find((e=>"Estimated"===e.method))),xt||(xt=jt.find((e=>"Planned"===e.method))),!xt)throw new Error("No weight lot data found for all weight methods. Please ensure weight lot data has been entered in the selected parcel.");if(void 0===xt.dry_weight||null===xt.dry_weight||void 0===xt.wet_weight||null===xt.wet_weight||void 0===xt.moisture||null===xt.moisture||void 0===xt.dry_weight_uom||null===xt.dry_weight_uom||void 0===xt.wet_weight_uom||null===xt.wet_weight_uom||void 0===xt.method||null===xt.method)throw new Error("One of the fields for weight lots is undefined");const Bt=await l.get(`/items/${Ee}?filter[${Ce}]=${xt.dry_weight_uom}`,{params:{fields:[Ne]}}),Jt=await l.get(`/items/${Ee}?filter[wet_symbol]=${xt.wet_weight_uom}`,{params:{fields:[De]}});if(!Bt.data.data||!Bt.data.data[0]||!Bt.data.data[0][Ne])throw new Error(`Dry weight uom not found for symbol ${xt.dry_weight_uom}`);if(!Jt.data.data||!Jt.data.data[0]||!Jt.data.data[0][De])throw new Error(`Wet weight uom not found for symbol ${xt.wet_weight_uom}`);const Gt=Bt.data.data[0][Ne],Wt=0===Gt.indexOf("dry")?Gt:`dry ${Gt}`,qt=Jt.data.data[0][De],Lt=0===qt.indexOf("wet")?qt:`wet ${qt}`,Ht=await l.get(`/items/navarch_assay_lot?filter[${F}]=${St}&sort[]=${R}`,{params:{fields:["id","commodity",j,z,Z,"lot_number",ee]}});console.log(`assayLotResponse.data.data=${JSON.stringify(Ht.data.data)}`),function(e){if(!e||0===e.length)throw new Error("No assay lots found for the selected parcel")}(Ht.data.data);const Kt=function(e){var t;console.log("[evaluateAnalyticalAssay]");const a={};for(const t of e)a[t.method]||(a[t.method]={}),a[t.method][t.commodity]||(a[t.method][t.commodity]=[]),null!==t.lot_number?(1===a[t.method][t.commodity].length&&null===a[t.method][t.commodity][0].lot_number&&(a[t.method][t.commodity]=[]),a[t.method][t.commodity].push(t)):null===t.lot_number&&0===a[t.method][t.commodity].length&&a[t.method][t.commodity].push(t);console.log(`[evaluateAnalyticalAssay] group: ${JSON.stringify(a)}}`);const o={};for(const e in a){console.log(`[evaluateAnalyticalAssay] methodKey: ${e}, group[methodKey]: ${JSON.stringify(a[e])}`);for(const n in a[e]){console.log(`[evaluateAnalyticalAssay] commodityKey: ${n}, group[methodKey][commodityKey]: ${JSON.stringify(a[e][n])}`),o[e]=null!=(t=o[e])?t:{},o[e][n]={};const r=a[e][n].reduce(((e,t)=>e+t[z]),0);console.log(`[evaluateAnalyticalAssay] totalDryWeight: ${r} from ${JSON.stringify(a[e][n])}`),o[e][n].analytical_assay=a[e][n].reduce(((e,t)=>e+t[Z]*t[z]),0)/(0!==r?r:1),console.log(`[evaluateAnalyticalAssay] analytical assay: ${o[e][n].analytical_assay}`),a[e][n].length>0&&(o[e][n][ee]=a[e][n][0][ee])}}return console.log(`[evaluateAnalyticalAssay] analyticalAssay: ${JSON.stringify(o)}`),o}(Ht.data.data),Yt=s.value.assay_method;let Qt;if(Yt&&(Qt=Kt[Yt.toString()]),Qt||(Qt=Kt.Outturn),Qt||(Qt=Kt["Inturn Final"]),Qt||(Qt=Kt.Inturn),Qt||(Qt=Kt.Estimated),Qt||(Qt=Kt.Planned),!Qt)throw new Error("No assay lot data found for all assay methods. Please ensure assay lot data has been entered in the selected parcel.");console.log(`WEIGHT: ${JSON.stringify(xt)}`),console.log(`ASSAYS: ${JSON.stringify(Qt)}`);const Xt=await l.get(`/items/navarch_contract/${Mt}`,{params:{fields:[te]}});!function(e){if(!e)throw new Error("Contract data not found, please ensure the selected contract still exists");if(!e[te])throw new Error("The selected contract does not have a set currency, please ensure that the currency field for the contract is not empty")}(Xt.data.data);const zt=await l.get(`/items/navarch_currency/${Xt.data.data.contract_currency}`,{params:{fields:[$e]}});!function(e){if(!e)throw new Error("Currency data not found, please ensure the selected currency still exists");if(!e[$e])throw new Error("The selected currency in the contract is not valid")}(zt.data.data);const Zt=zt.data.data.code,ea=await l.get(`/items/navarch_commodity_in_contract?filter[contract]=${Mt}`,{params:{fields:["id",ue,"primary_commodity","price_method","quotational_periods","payable_assay_rates","treatment_charge_rates","penalty_rates","penalty_per_uom",fe,"treatment_charge_per_uom"]}});!function(e){if(!e||0===e.length)throw new Error("No commodity data found in selected contract for parcel");if(!e.every((e=>e[ue])))throw new Error("The selected contract has an undefined commodity, please ensure that the 'Commodity' field for all commodites in the contract is not empty");if(!e.every((e=>e[fe])))throw new Error("The selected contract has an undefined base price Uom for commodity, please ensure that the 'Base Price Uom' field for all commodites in the contract is not empty")}(ea.data.data),console.log(`\tcommodityInContractResponse: ${JSON.stringify(ea.data.data)}`);const ta=[],aa=[];let oa="";for(const{id:a,commodity:r,primary_commodity:i,price_method:d,quotational_periods:h,price_per_uom:D,penalty_per_uom:F,treatment_charge_per_uom:R}of ea.data.data){const j=await l.get(`/items/navarch_commodity/${r}`,{params:{fields:[we,ge]}});if(yt(j.data.data,r),!Qt[j.data.data.code]){console.log(`[generateInvoice] no analytical assay for commodity ${j.data.data.code} found, skipping...`);continue}if(i&&(oa=j.data.data[we]),null!==h){const r=h;console.log(`\tquotationalPeriods: ${JSON.stringify(r)}`);const i=Array.isArray(r)?r.find((e=>e.default)):null;if(!i)throw new Error(`No default quotational period found for commodity ${j.data.data.code}`);const N=r.filter((e=>!e.default)).map((e=>`${e.qp_period} ${e.qp_code}`)),F=[`${i.qp_period} ${i.qp_code}`,...N].join(", ");console.log(`[generateInvoice] evaluate payable assay for ${j.data.data.code} with an analytical assay=${null==(e=Qt[j.data.data.code])?void 0:e.analytical_assay}`);const V=await l.get(`/items/navarch_payable_assay_bracket?filter[${me}]=${a}`,{params:{fields:["bracket_type",he,_e,pe,ye,ve,"rate_type","initial_adjustment","initial_adjustment_uom","minimum_deduction","minimum_deduction_uom","maximum_cap","maximum_cap_uom"]}}),{payableAssay:x,expression:B}=await $(null==(t=Qt[j.data.data.code])?void 0:t.analytical_assay,null==(o=Qt[j.data.data.code])?void 0:o.assay_uom,V.data.data);let J,L,H="";if("Final"!==Tt){const e={invoice_type:Tt,days:Ft[se],day_type:Ft[de],ref_day:Ft[ce]};if(!e)throw new Error(`[generateInvoice] No provisional pricing found for invoice type ${Tt}`);let t;switch(e.ref_day){case"Arrival Date":t=Pt.data.data[G],H="Actual Arrival Date from the Parcel form";break;case"B/L Date":t=Pt.data.data[W],H="B/L Date from the Parcel form";break;case"Invoice Date":t=s.value[ht],H="Invoice Date from the Invoice form";break;case"Estimated Shipment Date":t=Pt.data.data[q],H="Estimated Shipment Date from the Parcel form";break;default:throw new Error(`Invalid reference day for invoice pricing: ${e.ref_day}; please contact Navarch for support`)}if(null==t)throw new Error(`Reference day for invoice pricing ${H} is empty`);L=new Date(t);const a=parseInt(e.days),o=e.day_type;switch(o){case"Business Day(s)":J=O(L,a,!0);break;case"Calendar Day(s)":J=new Date(L.valueOf()),J.setDate(J.getDate()-a);break;default:throw new Error(`[generateInvoice] Invalid day_type ${o}`)}}else{let e;switch(i.qp_code){case"MAMA":e=G,H="Actual Arrival Date";break;case"MOSS":e=q,H="Estimated Shipment Date";break;case"MOS":case"MOAS":e=W,H="B/L Date";break;default:throw new Error(`[generateInvoice] Unsupported QP code ${i.qp_code}, currently only supports MAMA, MOS, MOSS, and MOAS`)}const t=new Date(Pt.data.data[e]);if(null==t)throw new Error(`[generateInvoice] Invalid reference day for ${H} from ${i.qp_code}`);if(J=T(t,i.qp_period),J.valueOf()>Date.now())throw new Error(`[generateInvoice] Start date for provisional pricing ${J} (${H}) based on default QP has not occurred yet`);if(L=P(t,i.qp_period),L.valueOf()>Date.now())throw new Error(`[generateInvoice] End date for provisional pricing ${L} (${H}) based on default QP has not occurred yet`)}console.log(`[generateInvoice] provisional pricing date range: ${J.toString()} - ${L.toString()}`);const K=await pt(j.data.data.code,d,J,L);let Y;const Q=await l.get(`/items/navarch_treatment_charge_bracket?filter[${me}]=${a}`,{params:{fields:[he,_e,pe,ye,"base_treatment_charge","use_btc","for_every_unit",ve]}});void 0!==Q.data.data&&null!==Q.data.data&&Q.data.data.length>0&&(Y=await C(K,null==(n=Qt[j.data.data.code])||n.assay_uom,Q.data.data));const X=await l.get(`/items/${Ee}/${D}`,{params:{fields:[be]}});vt(X.data.data,j.data.data[we]);const z=X.data.data[be];let Z;if(Y){if(!R)throw new Error(`Treatment Charge Rate UOM is not defined for commodity ${j.data.data[we]}`);const e=await l.get(`/items/${Ee}/${R}`,{params:{fields:[be]}});wt(e.data.data,j.data.data[we]),Z=e.data.data[be]}const ee=await U(z,xt.dry_weight_uom,null==(c=Qt[j.data.data.code])?void 0:c.assay_uom);console.log(`[generateInvoice] payableMetalConversion for commodity ${j.data.data.name}: ${JSON.stringify(ee)}`),ee.initialConversion=1===(null==(u=ee.initialConversion)?void 0:u.conversionFactor)?void 0:ee.initialConversion,ee.finalConversion=1===(null==(f=ee.finalConversion)?void 0:f.conversionFactor)?void 0:ee.finalConversion,ta.push({commodity:j.data.data.name,analytical_assay:m(null==(_=Qt[j.data.data.code])?void 0:_.analytical_assay,4),deduction_expression:B,payable_assay:m(x,4),assay_uom:null==(p=Qt[j.data.data.code])?void 0:p.assay_uom,payable_metal:m(xt.dry_weight*(null!=(v=null==(y=ee.initialConversion)?void 0:y.conversionFactor)?v:1)*(null!=x?x:1)*(null!=(g=null==(w=ee.finalConversion)?void 0:w.conversionFactor)?g:1)*("%"!==(null==(E=Qt[j.data.data.code])?void 0:E.assay_uom)?1:.01),4),payable_metal_expression:`${m(xt.dry_weight,4)}${xt.dry_weight_uom}${ee.initialConversion?` * ${m(ee.initialConversion.conversionFactor,4)}${ee.initialConversion.conversionUom}`:""} * ${m(null!=x?x:1,4)}${"%"!==(null==(b=Qt[j.data.data.code])?void 0:b.assay_uom)?`${null==(I=Qt[j.data.data.code])?void 0:I.assay_uom}`:" / 100"}${ee.finalConversion?` * ${m(ee.finalConversion.conversionFactor,4)}${ee.finalConversion.conversionUom}`:""}`,payable_metal_uom:z,qp:F,qp_date_range:`${A(J)} - ${A(L)}`,price_method:d,price_rate:m(K,4),price_per_uom:z,price:m(xt.dry_weight*(null!=(k=null==(S=ee.initialConversion)?void 0:S.conversionFactor)?k:1)*(null!=x?x:1)*(null!=(Ae=null==(M=ee.finalConversion)?void 0:M.conversionFactor)?Ae:1)*("%"!==(null==(Ie=Qt[j.data.data.code])?void 0:Ie.assay_uom)?1:.01)*K),treatment_charge:Y?{rate:m(Y.baseTreatmentCharge,4),discount:m((null!=(Oe=Y.baseTreatmentCharge)?Oe:0)-(null!=(Te=Y.finalValue)?Te:0),4),final_rate:m(Y.finalValue,4),per_uom:Z,final_amount:m(xt.dry_weight*(null!=(Pe=Y.finalValue)?Pe:1))}:void 0,final_total:m(xt.dry_weight*(null!=(it=null==(rt=ee.initialConversion)?void 0:rt.conversionFactor)?it:1)*(null!=x?x:1)*(null!=($t=null==(lt=ee.finalConversion)?void 0:lt.conversionFactor)?$t:1)*("%"!==(null==(Et=Qt[j.data.data.code])?void 0:Et.assay_uom)?1:.01)*K-(Y?1:0)*(xt.dry_weight*(null!=(bt=null==Y?void 0:Y.finalValue)?bt:1)))})}const V=await l.get(`/items/navarch_penalty_bracket?filter[${me}]=${a}`,{params:{fields:[he,_e,pe,ye,"no_penalty","for_every_unit",ve]}});if(V.data.data.length>0){if(null===F)throw new Error(`[generateInvoice] penalty_per_uom is null for ${j.data.data.code}`);const e=await l.get(`/items/${Ee}/${F}`,{params:{fields:[be]}});gt(e.data.data,j.data.data[we]);const t=e.data.data[be],{penalty:a,expression:o,bracket:n}=await N(null==(Ct=Qt[j.data.data.code])?void 0:Ct.analytical_assay,V.data.data,Zt,t);console.log(`[generateInvoice] evaluate penalty for ${j.data.data.code} with an analytical assay=${null==(Nt=Qt[j.data.data.code])?void 0:Nt.analytical_assay}, penaltyRate=${null==n?void 0:n.rate}, finalPenaltyRate=${a}, expression='${o}'`),aa.push({commodity:j.data.data.name,analytical_assay:m(null==(Dt=Qt[j.data.data.code])?void 0:Dt.analytical_assay,4),deduction_expression:o,assay_uom:null==(At=Qt[j.data.data.code])?void 0:At.assay_uom,penalty_rate:m(null==n?void 0:n.rate,4),penalty_per_uom:t,final_penalty_rate:m(a,4),final_penalty:m((null!=a?a:1)*xt.dry_weight)})}}console.log(`[generateInvoice] COMMODITIES: ${JSON.stringify(ta)}`),console.log(`[generateInvoice] PENALTIES: ${JSON.stringify(aa)}`);const na=ta.reduce(((e,t)=>e+h(t.price)),0),ra=ta.reduce(((e,t)=>{var a;return e+h(null==(a=t.treatment_charge)?void 0:a.final_amount)}),0),ia=aa.reduce(((e,t)=>e+h(t.final_penalty)),0);console.log(`[generateInvoice] TOTAL_REVENUE=${na}, TOTAL_TREATMENT_CHARGE=${ra}, TOTAL_PENALTIES=${ia}`);let la,sa=0;const da=!!Pt.data.data[Q];da&&(sa=Pt.data.data[Q].reduce(((e,t)=>e+t.amount),0),la={adjustments:Pt.data.data[Q].map((e=>({description:e.description,amount:m(e.amount)}))),total_adjustments:m(sa)});const ca=Ft[oe],ua=na-ra-ia+sa,fa=null!=ca?ua*ca/100:void 0,ma=await l.get(`/items/navarch_counterparty/${Pt.data.data[x]}`,{params:{fields:[Se]}});!function(e){if(console.log("[validateCounterparty]"),!e)throw new Error("Counterparty for parcel not found");if(!e[Se])throw new Error("No name defined for counterparty of the selected parcel")}(ma.data.data);const ha=await l.get(`/items/navarch_counterparty_navarch_address?filter[navarch_counterparty_id]=${Pt.data.data[x]}`,{params:{fields:[ke]}});!function(e){if(console.log("[validateCounterpartyAddress]"),!e||0===e.length)throw new Error("Counterparty address for parcel not found");if(!e[0][ke])throw new Error("No address defined for counterparty of the selected parcel")}(ha.data.data);const _a=ha.data.data[0][ke],pa=await l.get(`/items/navarch_address/${_a}`,{params:{fields:[Ye,Qe,Xe,ze,Ze,et]}});!function(e){if(!e)throw new Error("Buyer address for parcel not found");if(!e[Ye])throw new Error("No address line 1 defined for buyer address of the selected parcel");if(!e[Ze])throw new Error("No country defined for buyer address of the selected parcel")}(pa.data.data);const ya=pa.data.data[Ye],va=pa.data.data[Qe]?`,\n${pa.data.data[Qe]}`:"",wa=pa.data.data[Xe]?`,\n${pa.data.data[Xe]}`:"",ga=pa.data.data[ze]?`,\n${pa.data.data[ze]}`:"",$a=await l.get(`/items/${Le}/${pa.data.data[Ze]}`,{params:{fields:[He]}});!function(e){if(!e)throw new Error("Something went wrong when getting the buyer's based country")}($a.data.data);const Ea=$a.data.data[He]?`, ${$a.data.data[He]}`:"",ba=`${ya}${va}${wa}${pa.data.data[et]?` ${pa.data.data[et]}`:""}${ga}${Ea}`,Ca=Pt.data.data[L];let Na;Ca&&(Na=await l.get(`/items/navarch_vessel/${Ca}`,{params:{fields:[tt]}}),function(e){if(console.log("[validateVessel]"),!e)throw new Error("Vessel for parcel not found");if(!e[tt])throw new Error("No name defined for vessel of the selected parcel")}(Na.data.data));const Da=(await l.get("/items/navarch_company",{params:{fields:[Me,Ue,Fe,Re,je,xe,Ve,Be,Je,Ge,We,qe]}})).data.data;!function(e){if(console.log("[validateCompanyData]"),!e)throw new Error("Company data not found");if(!e[Me])throw new Error("Please set company name in Directories > Company");if(!e[Be])throw new Error("Please set company phone code in Directories > Company");if(!e[Ue])throw new Error("Please set company address line 1 in Directories > Company");if(!e[Ve])throw new Error("Please set the country the company is based in Directories > Company");if(!e[Je])throw new Error("Please set the company phone number in Directories > Company");if(!e[Ge])throw new Error("Please set the company signatory name in Directories > Company");if(!e[We])throw new Error("Please set the company signatory title in Directories > Company");if(!e[qe])throw new Error("Please set the company remittance details in Directories > Company")}(Da);const Aa=Da[Me],Ia=await l.get(`/items/${Le}/${Da[Be]}`,{params:{fields:[Ke]}});!function(e){if(!e)throw new Error("Company phone code not found, please ensure phone code selected for Directories > Company is valid");if(!e[Ke])throw new Error("Company country phone code not found, please contact Navarch support for assistance")}(Ia.data.data);const Oa=Ia.data.data[Ke],Ta=Da[Je],Pa=Da[Ue],Sa=Da[Fe]?`,\n${Da[Fe]}`:"",ka=Da[Re]?`,\n${Da[Re]}`:"",Ma=Da[je]?`,\n${Da[je]}`:"",Ua=await l.get(`/items/${Le}/${Da[Ve]}`,{params:{fields:[He]}});!function(e){if(!e)throw new Error("Country not found, please ensure country selected for Directories > Company is valid");if(!e[He])throw new Error("Country name not found, please contact Navarch support for assistance")}(Ua.data.data);const Fa=Ua.data.data[He]?`, ${Ua.data.data[He]}`:"",Ra=`${Pa}${Sa}${ka}${Da[xe]?` ${Da[xe]}`:""}${Ma}${Fa}`,ja=await l.get(`/items/${at}/${Pt.data.data[H]}`,{params:{fields:[ot,nt]}});!function(e){if(!e)throw new Error("Origin port for parcel not found");if(!e[ot])throw new Error("No name defined for origin port of the selected parcel");if(!e[nt])throw new Error("No country defined for origin port of the selected parcel")}(ja.data.data);const Va=await l.get(`/items/${at}/${Pt.data.data[K]}`,{params:{fields:[ot,nt]}});!function(e){if(!e)throw new Error("Destination port for parcel not found");if(!e[ot])throw new Error("No name defined for destination port of the selected parcel");if(!e[nt])throw new Error("No country defined for destination port of the selected parcel")}(Va.data.data);let xa=(await l.get(`/items/${st}?filter[${dt}]=${It}`,{params:{fields:["id",ct]}})).data.data.reduce(((e,t)=>e+(t[ct]?1:0)),0)+1,Ba=It;const Ja=xa.toString().padStart(2,"0"),Ga=`${Pt.data.data[Y]} (#${Ja})`,Wa=Ba.toString().padStart(2,"0"),qa={invoice_type:Tt,days:Ft[ne],day_type:Ft[re],ref_day:"Final"===Tt?Ft[le]:Ft[ie]};if(!qa)throw new Error(`Contract does not have a payment advice for invoice type ${Tt}`);let La,Ha="";switch(qa.ref_day){case"Arrival Date":Ha="Actual Arrival Date from the Parcel form",La=Pt.data.data[G];break;case"B/L Date":Ha="B/L Date from the Parcel form",La=Pt.data.data[W];break;case"Invoice Date":Ha="Invoice Date from the Invoice form",La=s.value[ht];break;case"Estimated Shipment Date":Ha="Estimated Shipment Date from the Parcel form",La=Pt.data.data[q];break;case"Parcel Finalisation":if(void 0===Pt.data.data[X]||null===Pt.data.data[X])throw new Error("[generateInvoice] Parcel has not been finalised, please fill in the the parcel finalisation date in the parcel form.");Ha="Parcel Finalisation Date from the Parcel form",La=Pt.data.data[X];break;default:throw new Error(`Invalid reference day for payment advice: ${qa.ref_day}; please contact Navarch for support`)}if(null==La)throw new Error(`Reference day for payment advice ${Ha} is empty in parcel`);const Ka=new Date(La),Ya=parseInt(qa.days),Qa=qa.day_type;let Xa;switch(Qa){case"Business Day(s)":Xa=function(e,t,a=!1){const o=new Date(e.valueOf());let n=t-(a?1:0);for(;n>0;)o.setDate(o.getDate()+1),0!==o.getDay()&&6!==o.getDay()&&(n-=1);return o}(Ka,Ya,!0);break;case"Calendar Day(s)":Xa=new Date(Ka.valueOf()),Xa.setDate(Xa.getDate()+Ya);break;default:throw new Error(`[generateInvoice] Invalid day_type for payment advice ${Qa}`)}console.log(`[generateInvoice] payment advice due date: ${Xa.toString()}`);const za=A(Xa);let Za,eo,to,ao;if(s.value[ft]){const e=await l.get(`/items/${st}/${s.value[ft]}`,{params:{fields:[dt,ct,mt,ut]}});if(console.log(`[generateInvoice] revisionParcelResponse: ${JSON.stringify(e.data)}`),200!==e.status||!e.data.data)throw new Error(`[generateInvoice] Failed to get invoice ${s.value[ft]}`);if(e.data.data[dt]!==It)throw new Error(`[generateInvoice] Parcel ID mismatch between this invoice with parcel ${It}, and the revision invoice ${s.value[ft]} with parcel id ${e.data.data[dt]}`);if(!e.data.data[ct])throw new Error(`[generateInvoice] No invoice pdf has been generated yet for invoice ${s.value[ft]}`);if(!e.data.data[mt])throw new Error(`[generateInvoice] No invoice type found for the revision invoice ${s.value[ft]}`);to=e.data.data[mt],ao=e.data.data[ut];const t=e.data.data[ct];if(function(e){if(!e)throw new Error("Revision invoice data not found");if(!e.invoice_number)throw new Error("Revision invoice data does not have an invoice number in generated document");if(!e.balance_in_sellers_favor)throw new Error("Revision invoice data does not have a valid 'Balance in Sellers Favor' in generated document")}(t),console.log(`[generateInvoice] revisionInvoiceData: ${JSON.stringify(t)}`),Za=t.invoice_number,!Za||""===Za)throw new Error(`[generateInvoice] Could not find invoice number in revision invoice ${s.value[ft]}`);const a=t.balance_in_sellers_favor.replace(/,/g,"");if(eo=parseFloat(a),!eo||isNaN(eo))throw new Error(`[generateInvoice] Total payment=${t.balance_in_sellers_favor} found is not convertible to monetary amount for revision invoice ${s.value[ft]}`)}const oo=null!=fa?fa-(null!=eo?eo:0):void 0,no={seller:Aa,seller_address:Ra,seller_phone_number:`+${Oa} ${Ta}`,signatory:{signatoryName:Da[Ge],signatoryTitle:Da[We],company:Aa},remittance:Da[qe],buyer:ma.data.data[Se],buyer_address:ba,shipment_code:Pt.data.data[Y],vessel:Na?Na.data.data[tt]:"N/A",bl_date:Pt.data.data[W]?A(new Date(Pt.data.data[W])):"N/A",invoice_type:Tt,invoice_date:A(Ot),revision:Za&&eo?ao:void 0,invoice_number:Ga,parcel:`${Pt.data.data[Y]} (#${Wa})`,port_of_loading:`${ja.data.data[ot]}, ${ja.data.data[nt]}`,port_of_discharge:`${Va.data.data[ot]}, ${Va.data.data[nt]}`,primary_commodity:`${oa} Concentrates`,due_date:za,wet_weight:m(xt.wet_weight,4),wet_weight_uom:xt.wet_weight_uom,wet_weight_uom_name:D(Lt),moisture:m(xt.moisture,4),moisture_uom:"%",dry_weight:m(xt.dry_weight,4),dry_weight_uom:xt.dry_weight_uom,dry_weight_uom_name:D(Wt),total_revenue:m(na),total_deductions:m(ia+ra),currency:Zt,commodities:ta,penalties:{penalties:aa,total_penalties:m(ia)},adjustments:da?la:void 0,invoice_value:m(ua),payable_percentage:m(ca),payable_amount:m(fa),payment_received_source:Za&&eo&&ao?`${to}.${ao}.${Za}`:void 0,payment_received:Za&&eo?m(eo):void 0,balance_in_sellers_favor:m(oo)};console.log(`[generateInvoice] invoice request body: ${JSON.stringify(no)}`);const ro=await l.post("/generate/invoice",no);if(200!==ro.status)return console.log(`[generateInvoice] invoice response status: ${ro.status}`),r.value=ro.data,void(i.value=!1);const io={...no,doc_name:ro.data};a("input",io),console.log(`[generateInvoice] invoice response: ${JSON.stringify(s.value)}`),i.value=!1,_t(ro.data)}catch(e){return i.value=!1,console.log(`generating invoice went wrong due to: ${e}`),void(r.value=e)}},viewInvoice:_t,failureReason:r};function _t(e){const a=null!=e?e:t.value.doc_name;console.log(`[viewInvoice] doc name: ${a}`);const o=`/display-doc?filepath=${encodeURIComponent(`/data/uploads/${a}.pdf`)}`;window.open(o)}async function pt(e,t,a,o,n=1){if(f(e))throw new Error("Commodity is not defined for price calcualtion");if(f(t))throw new Error(`Price method for commodity ${e} is not defined for price calcualtion`);if(f(a))throw new Error(`Start date is not defined for price calcualtion with ${t} has not been properly defined, please ensure that contract QP is properly defined`);if(f(o))throw new Error(`End date is not defined for price calcualtion with ${t} has not been properly defined, please ensure that contract QP is properly defined`);const r=await l.get(`/items/navarch_commodity_price?filter[_and][0][price_method][_eq]=${t}&filter[_and][0][currency][_eq]=${n}&filter[_and][1][date][_between][0]=${I(a)}&filter[_and][1][date][_between][1]=${I(o)}`,{params:{fields:[rt,it,lt,"price_method"]}});if(!r||!r.data||!r.data.data)throw new Error(`[getCommodityAvgPrice] Failed to get commodity prices for commodity ${e} between ${I(a)} and ${I(o)}`);if(0===r.data.data.length)throw new Error(`No commodity prices found for commodity ${e} between ${I(a)} and ${I(o)}`);return r.data.data.reduce(((e,a)=>{if(!a[it]&&!a[rt])throw new Error(`Commodity for ${t} on the date of ${a[lt]} does not have a price, please contact Navarch for assistance`);let o=Number(a[it]);if(isNaN(o)&&(o=Number(a[rt])),isNaN(o))throw new Error(`The commodity price for Price Method #${t} for the date of ${a[lt]} is not a valid number, please contact Navarch for assistance`);return e+o}),0)/r.data.data.length}function yt(e,t){var a,o;if(console.log("[validateCommodityData]"),!e)throw new Error("commodity data response is null");if(!e[we])throw new Error(`Commodity name for commodity ${null!=(a=e[ge])?a:t} is undefined, please contact Navarch for assistance`);if(!e[ge])throw new Error(`Commodity code for commodity ${null!=(o=e[we])?o:t} is not defined, please contact Navarch for assistance`)}function vt(e,t){if(!e)throw new Error(`Price per UOM for commodity ${t} is not a valid`);if(!e[be])throw new Error(`Price per UOM for commodity ${t} does not have a valid unit symbol, please contact Navarch for assistance`)}function wt(e,t){if(!e)throw new Error(`Treatment charge per UOM for commodity ${t} is not a valid`);if(!e[be])throw new Error(`Treatment charge per UOM for commodity ${t} does not have a valid unit symbol, please contact Navarch for assistance`)}function gt(e,t){if(!e)throw new Error(`Penalty per UOM for commodity ${t} is not a valid`);if(!e[be])throw new Error(`Penalty per UOM for commodity ${t} does not have a valid unit symbol, please contact Navarch for assistance`)}}});const g={key:0},$={key:1};w.render=function(e,t,a,o,n,_){const p=r("v-button"),y=r("v-notice");return i(),l(s,null,[d(' <input :value="value" @input="handleChange($event.target.value)" /> '),d(" create a button only interface for Directus"),e.value?(i(),l("div",$,[c(p,{class:"margin-top-16px",onClick:t[1]||(t[1]=()=>e.viewInvoice())},{default:u((()=>[f("View Invoice ")])),_:1})])):(i(),l("div",g,[c(p,{class:"margin-top-16px",onClick:t[0]||(t[0]=()=>e.generateInvoice()),loading:e.isGeneraingDoc},{default:u((()=>[f("Generate Invoice")])),_:1},8,["loading"]),e.failureReason?(i(),m(y,{key:0},{default:u((()=>[f(h(e.failureReason),1)])),_:1})):d("v-if",!0)]))],2112)},w.__file="src/interface.vue";var E=t({id:"invoice_generator_button",name:"Generate Invoice Button",icon:"receipt_long",description:"This is a custom interface for Navarch's Invoice Generator Button.",component:w,options:null,types:["json"],group:"standard"});export{E as default};
