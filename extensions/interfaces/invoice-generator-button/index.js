import{useApi as e,defineInterface as t}from"@directus/extensions-sdk";import{defineComponent as a,ref as o,inject as n,resolveComponent as r,openBlock as i,createElementBlock as l,Fragment as s,createCommentVNode as d,createVNode as c,withCtx as u,createTextVNode as f,createBlock as m,toDisplayString as h}from"vue";var p=(e=>(e.BRACKET="Brackets",e.MIN_DEDUCTION="Minimum Deduction",e.MAX_CAP="Maximum Cap",e))(p||{}),y=(e=>(e.PERCENTAGE="Percentage",e.FRACTIONAL="Fractional",e))(y||{}),v=(e=>(e.WET_WEIGHT="wet_weight",e.MOISTURE="moisture",e.DRY_WEIGHT="dry_weight",e))(v||{}),_=(e=>(e.METHOD="method",e.WET_WEIGHT_UOM="wet_weight_uom",e.MOISTURE_UOM="moisture_uom",e.DRY_WEIGHT_UOM="dry_weight_uom",e))(_||{}),w=a({props:{value:{type:Object,default:null}},emits:["input"],setup(t,{emit:a}){const r=o(""),i=o(!1),l=o(!1),s=e(),d=n("values",o({}));function c(e){if(console.log("[evaluateWeightData]"),0===e.length)return;const t=f(e,v.DRY_WEIGHT),a=f(e,v.WET_WEIGHT);return{method:u(e,_.METHOD),lots:e,dry_weight_uom:u(e,_.DRY_WEIGHT_UOM),wet_weight_uom:u(e,_.WET_WEIGHT_UOM),dry_weight:t,wet_weight:a,moisture:(a-t)/a*100}}function u(e,t){if(console.log("[getFirstValueAsSharedValue]"),0!==e.length)return console.log(`lots[0][${t.toString()}]=${e[0][t.toString()]}`),e[0][t.toString()]}function f(e,t){return console.log("[evaluateAggregateValue]"),e.reduce(((e,a)=>{var o;return e+(null!=(o=a[t.toString()])?o:0)}),0)}function m(e){return null==e}function h(e,t=2,a=!0){if(console.log("[formatNumber]"),isNaN(e)||null===e)return"-";const o=Math.round(e*Math.pow(10,t))/Math.pow(10,t),[n,r]=o.toString().split("."),i=n.replace(/\B(?=(\d{3})+(?!\d))/g,",");if(!r&&!a)return i;return`${i}.${(null!=r?r:"").padEnd(t,"0")}`}function w(e){if(console.log("[parseNumber]"),!e)return 0;const t=parseFloat(e.replace(/,/g,""));return console.log(`[parseNumber] number: ${e} to ${t}`),t}function g(e,t,a){var o,n,r;if(console.log("[findBracket]"),1===e.length){if(t>=(null!=(o=e[0].lower_threshold)?o:0)&&(null===e[0].upper_threshold||void 0===e[0].upper_threshold||t<e[0].upper_threshold))return e[0];throw new Error(`Evaluated monetary value $${t} does not fall within the only ${a.type} bracket with range ${null!=(n=e[0].lower_threshold)?n:0} - ${null!=(r=e[0].upper_threshold)?r:"âˆž"}`)}return e.find((e=>{var a,o;const n=t>(null!=(a=e.lower_threshold)?a:0)&&(null===e.upper_threshold||void 0===e.upper_threshold||t<e.upper_threshold)||e.lower_threshold_inclusive&&t===(null!=(o=e.lower_threshold)?o:0)||e.upper_threshold_inclusive&&t===e.upper_threshold;return console.log(`[findBracket] value=${t} for bracket: ${JSON.stringify(e)}? match=${!!n}`),n}))}function $(e,t){var a,o,n,r,i,l,s;console.log("[evaluateFinalValueFromBrackets]");const d=(e-(null!=(a=t.initial_adjustment)?a:0)*(null!=(o=t.initial_adjustment_conversion_factor)?o:1))*(null!=(n=t.rate)?n:0)*(t.rate_type===y.PERCENTAGE?.01:1)+(null!=(r=t.final_adjustment)?r:0)*(null!=(i=t.final_adjustment_conversion_factor)?i:1);switch(t.bracket_type){case p.MIN_DEDUCTION:if(null===t.comparator||void 0===t.comparator)throw new Error("Minimum deduction not found");const a=t.comparator*(null!=(l=t.comparator_conversion_factor)?l:1);return e-d<a?e-a:d;case p.MAX_CAP:if(null===t.comparator||void 0===t.comparator)throw new Error("Maximum cap not found");const o=t.comparator*(null!=(s=t.comparator_conversion_factor)?s:1);return d>o?o:d;case p.BRACKET:return d;default:throw new Error(`bracket type ${t.bracket_type} is not supported`)}}async function E(e,t,a,o){var n,r,i,l,s,d,c,u;if(console.log("[evaluatePayableAssay]"),!a||0===a.length)return{};const f=g(a,e,{commodityCode:o,type:"Payable Assay"});if(!f)throw new Error(`Bracket not found for value ${e}, please ensure the brackets for all commodities defined in the contract cover all range of possible values for payable assays`);let m,v,_=1;f.initial_adjustment_uom&&void 0!==f.initial_adjustment_uom&&null!==f.initial_adjustment_uom&&f.initial_adjustment_uom!==t&&(_=await k(f.initial_adjustment_uom,t),m=U(f.initial_adjustment_uom,t));let w,E=1;f.bracket_type===p.MAX_CAP?(v=null!=(n=f.maximum_cap)?n:0,void 0!==f.maximum_cap_uom&&null!==f.maximum_cap_uom&&f.maximum_cap_uom!==t&&(E=await k(f.maximum_cap_uom,t),w=U(f.maximum_cap_uom,t))):f.bracket_type===p.MIN_DEDUCTION&&(v=null!=(r=f.minimum_deduction)?r:0,void 0!==f.minimum_deduction_uom&&null!==f.minimum_deduction_uom&&f.minimum_deduction_uom!==t&&(E=await k(f.minimum_deduction_uom,t),w=U(f.minimum_deduction_uom,t)));const b=$(e,{bracket_type:f.bracket_type,rate:null!=(i=f.rate)?i:1,rate_type:null!=(l=f.rate_type)?l:y.FRACTIONAL,initial_adjustment:null!=(s=f.initial_adjustment)?s:0,initial_adjustment_conversion_factor:_,comparator:v,comparator_conversion_factor:E});let D="";const C=void 0!==f.initial_adjustment&&null!==f.initial_adjustment;if(f.bracket_type===p.BRACKET)D=`${C?"(":""}${h(e,4)}${null!=t?t:""}${C?` - ${h(f.initial_adjustment,4)}${null!=(d=f.initial_adjustment_uom)?d:`${null!=t?t:""}`}`:""}${C&&1!==_?` * ${h(_,4)}${m}`:""}${C?")":""} * ${h(f.rate,4)}${f.rate_type===y.PERCENTAGE?"/100":`/${h(1,4)}`}`;else if(f.bracket_type===p.MIN_DEDUCTION){D=b===e-v*E?`${h(e,4)}${null!=t?t:""} - ${h(v,4)}${null!=t?t:""}${1!==E?` * ${h(E,4)}${w}`:""}`:`${C?"(":""}${h(e,4)}${null!=t?t:""}${C?` - ${h(f.initial_adjustment,4)}${null!=(c=f.initial_adjustment_uom)?c:`${null!=t?t:""}`}`:""}${C&&1!==_?` * ${h(_,4)}${m}`:""}${C?")":""} * ${h(f.rate,4)}${f.rate_type===y.PERCENTAGE?"/100":`/${h(1,4)}`}`}else{if(f.bracket_type!==p.MAX_CAP)throw new Error(`[buildPayableAssayExpression] unknown bracket method: ${f.bracket_type}`);D=b===v*E?`${h(v,4)}${null!=t?t:""}${1!==E?` * ${h(E,4)}${w}`:""}`:`${C?"(":""}${h(e,4)}${null!=t?t:""}${C?` - ${h(f.initial_adjustment,4)}${null!=(u=f.initial_adjustment_uom)?u:`${null!=t?t:""}`}`:""}${C&&1!==_?` * ${h(_,4)}${m}`:""}${C?")":""} * ${h(f.rate,4)}${f.rate_type===y.PERCENTAGE?"/100":`/${h(1,4)}`}`}return{payableAssay:b,expression:D}}console.log("[main] formValues=",d);const b="above the lower threshold, plus",D="below the upper threshold, minus";function C(e,t,a,o,n){var r,i,l,s;if(console.log("[evaluateCharge]"),!a||!a.length)return;const d=g(a,e,{commodityCode:o,type:n});if(!d)throw new Error(`Bracket not found for value ${e}, please ensure the brackets for all commodities defined in the contract cover all range of possible values for ${n}`);let c=0,u=1;if(d.use_btc)u=0,c=0;else if(u=null!=(r=d.rate)?r:1,d.for_every_unit===b)c=null!=(i=d.lower_threshold)?i:0;else{if(d.for_every_unit!==D)throw new Error(`[evaluateCharge] unknown for_every_unit: ${d.for_every_unit}`);c=null!=(l=d.upper_threshold)?l:0}const f={bracket_type:p.BRACKET,rate:u,rate_type:y.FRACTIONAL,initial_adjustment:c,final_adjustment:null!=(s=d.base_treatment_charge)?s:0};return console.log(`[evaluateCharge] bracketForEvaluation: ${JSON.stringify(f)}`),{finalValue:$(e,f),baseTreatmentCharge:d.base_treatment_charge}}function A(e,t,a,o,n){var r,i,l;if(console.log("[evaluatePenalty]"),!t||!t.length)return{};const s=g(t,e,{commodityCode:n,type:"Penalty"});if(!s)throw new Error(`[evaluatePenalty] Bracket not found for value ${e}, please ensure the brackets for all commodities defined in the contract cover all range of possible values for penalty`);let d=0,c=1;if(s.no_penalty)c=0,d=0;else if(c=null!=(r=s.rate)?r:1,s.for_every_unit===b)d=null!=(i=s.lower_threshold)?i:0;else{if(s.for_every_unit!==D)throw new Error(`[evaluatePenalty] unknown for_every_unit: ${s.for_every_unit}`);d=null!=(l=s.upper_threshold)?l:0}const u={bracket_type:p.BRACKET,rate:c,rate_type:y.FRACTIONAL,initial_adjustment:d,final_adjustment:0};console.log(`[evaluatePenalty] bracketForEvaluation: ${JSON.stringify(u)}`);const f=$(e,u),m=null!=u.initial_adjustment;let v="";return v=s.rate&&0!==s.rate?`${m?"(":""}${h(e,4)}${m?` - ${h(d,4)})`:""} / ${h(1,4)} * ${null!=a?a:""} ${h(c,4)}/${null!=o?o:""}`:"No penalty",{penalty:f,expression:v,bracket:s}}function N(e){return e.toLowerCase().split(" ").map((e=>e.charAt(0).toUpperCase()+e.slice(1))).join(" ")}function I(e){const t=e.getDate(),a=e.getMonth(),o=e.getFullYear();return`${t} ${["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"][a]} ${o}`}function P(e,t=!0){const a=e.getMonth()+1,o=e.getDate();return`${e.getFullYear()}${t?"-":" "}${a<10?"0":""}${a}${t?"-":" "}${o<10?"0":""}${o}`}function O(e,t,a=!1){const o=new Date(e.valueOf());let n=t-(a?1:0);for(;n>0;)o.setDate(o.getDate()-1),0!==o.getDay()&&6!==o.getDay()&&(n-=1);return o.getHours()>=12&&o.setDate(o.getDate()+1),o}function S(e,t){const a=new Date(e.valueOf());return a.setMonth(a.getMonth()+t,1),a}function T(e,t){const a=new Date(e.valueOf());return a.setMonth(a.getMonth()+t+1,0),a}async function M(e,t){if(e===t)return 1;const a=await s.get(`/items/${Ae}?filter[${Ne}]=${e}`,{params:{fields:[Se]}});if(0===a.data.data.length||null===a.data.data[0][Se]||void 0===a.data.data[0][Se])throw new Error(`[getWeightUnitConversionValue] failed to get conversion value for source weight unit ${e}. Ensure that the symbol is correct and is a weight unit symbol`);const o=await s.get(`/items/${Ae}?filter[${Ne}]=${t}`,{params:{fields:[Se]}});if(0===o.data.data.length||null===o.data.data[0][Se]||void 0===o.data.data[0][Se])throw new Error(`[getWeightUnitConversionValue] failed to get conversion value for the target weight unit ${t}. Ensure that the symbol is correct and is a weight unit symbol`);const n=parseFloat(a.data.data[0][Se]);if(isNaN(n))throw new Error(`[getWeightUnitConversionValue] source weight unit ${e} conversion value=${n} is not a number`);const r=parseFloat(o.data.data[0][Se]);if(isNaN(r))throw new Error(`[getWeightUnitConversionValue] target weight unit ${t} conversion value=${r} is not a number`);return n/r}async function k(e,t){if(null==e||null==t)return 1;if(e===t)return 1;const a=await s.get(`/items/${Te}?filter[${Me}]=${e}`,{params:{fields:[ke]}});if(0===a.data.data.length||void 0===a.data.data[0][ke]||null===a.data.data[0][ke])throw new Error(`[getAssayUnitConversionValue] failed to get conversion value for source weight unit ${e}. Ensure that the symbol is correct and is a weight unit symbol`);const o=await s.get(`/items/${Te}?filter[${Me}]=${t}`,{params:{fields:[ke]}});if(0===o.data.data.length||void 0===o.data.data[0][ke]||null===o.data.data[0][ke])throw new Error(`[getAssayUnitConversionValue] failed to get conversion value for the target weight unit ${t}. Ensure that the symbol is correct and is a weight unit symbol`);const n=parseFloat(a.data.data[0][ke]);if(isNaN(n))throw new Error(`[getAssayUnitConversionValue] source weight unit ${e} conversion value=${n} is not a number`);console.log(`[getAssayUnitConversionValue] source unit conversion value=${n}`);const r=parseFloat(o.data.data[0][ke]);if(isNaN(r))throw new Error(`[getAssayUnitConversionValue] target weight unit ${e} conversion value=${r} is not a number`);return console.log(`[getAssayUnitConversionValue] target unit conversion value=${r}`),console.log("[getAssayUnitConversionValue] returning "+n/r),n/r}function U(e,t){if(void 0===e||void 0===t||null===e||null===t)return;const a=e.split("/"),o=t.split("/");if(a.length>2||o.length>2)throw new Error(`[getConversionUnit] sourceUnit=${e} and targetUnit=${t} must be in the format of 'unit1/unit2', an extra '/' was found`);if(1===a.length&&1===o.length)return`${o[0]}/${a[0]}`;if(1===a.length){const e=o[0]===a[0]?"":`${o[1]}(${a[1]})`,t=o[1];return""===t?e:`${e}/${t}`}if(1===o.length){const e=a[1],t=a[0]===o[0]?"":`${a[1]}(${o[0]})`;return""===t?e:`${e}/${t}`}{const e=a[0]===o[0],t=a[1]===o[1],n=e||""===a[0],r=e||""===o[0],i=t||""===a[1],l=t||""===o[1],s=!i&&!r,d=!n&&!l,c=`${i?"":a[1]}${s?"(":""}${r?"":`${o[0]}`}${s?")":""}`,u=`${n?"":a[0]}${d?"(":""}${l?"":`${o[1]}`}${d?")":""}`;return""===u?c:`${c}/${u}`}}async function F(e,t,a){const o=await s.get(`/items/${Ae}?filter[${Ie}]=${t}`,{params:{fields:[Ne]}});if(!o.data.data||!o.data.data[0]||!o.data.data[0][Ne])throw new Error(`[getConversionValuesAndUnitsForPayableMetalCalculation] Dry weight uom not found for symbol ${t}`);const n=o.data.data[0][Ne];if("%"===a){if(n===e)return{};const t=U(n,e);if(!t)throw new Error(`[getConversionValuesAndUnitsForPayableMetalCalculation] no conversion unit found for dry weight unit ${n} and target weight unit ${e}`);return{finalConversion:{conversionFactor:await M(n,e),conversionUom:t}}}let r=a.split("/");if(1==r.length){const e=await async function(e){const t=await s.get(`/items/${Te}`,{params:{fields:[Me,Ue],filter:{[Ue]:{_nnull:!0},[Me]:{_eq:e}}}});if(200!==t.status||!t.data||0===t.data.data.length)throw new Error("[getAssayUnitComposition] no assay units found with composition");return t.data.data[0][Ue]}(a);if(!e)throw new Error(`[getConversionValuesAndUnitsForPayableMetalCalculation] assay unit ${a} does not have a composition`);r=e.split("/")}if(r.length>2||0===r.length)throw new Error(`[getConversionValuesAndUnitsForPayableMetalCalculation] assay unit ${a} is not in the format of 'unit1/unit2'`);const i=r[0],l=r[1],d={};if(l!==n){const e=U(n,l);if(!e)throw new Error(`[getConversionValuesAndUnitsForPayableMetalCalculation] no conversion unit found for dry weight unit ${n} and assay unit denominator unit ${l}`);d.initialConversion={conversionFactor:await M(n,l),conversionUom:e}}if(i!==e){const t=U(i,e);if(!t)throw new Error(`[getConversionValuesAndUnitsForPayableMetalCalculation] no conversion unit found for target weight unit ${e} and assay unit numerator unit ${i}`);d.finalConversion={conversionFactor:await M(i,e),conversionUom:t}}return d}const R="foreign_key",j="lot_number",V="method",x="contract",q="counterparty",B="assay_results",J="weight_result",G="actual_arrival_date",W="bl_date",L="estimated_shipment_date",H="qp_selection",K="vessel",Q="origin",Y="destination",X="shipment_code",z="adjustments",Z="parcel_finalisation_date",ee="assay_uom",te="contract_currency",ae="invoice_type",oe="pay_percent",ne="pa_days",re="pa_day_type",ie="pa_ref_day",le="pp_days",se="pp_day_type",de="pp_ref_day",ce="commodity",ue="payable_commodity",fe="price_per_uom",me="related_commodity_in_contract",he="lower_threshold",pe="lower_threshold_inclusive",ye="upper_threshold",ve="upper_threshold_inclusive",_e="rate",we="navarch_treatment_charge_bracket",ge="base_treatment_charge",$e="use_btc",Ee="for_every_unit",be="name",De="code",Ce="code",Ae="navarch_unit",Ne="symbol",Ie="dry_symbol",Pe="dry_unit",Oe="wet_unit",Se="conversionToGram",Te="navarch_assay_unit",Me="unit",ke="conversion_to_ppb",Ue="composition",Fe="name",Re="navarch_address_id",je="name",Ve="logo",xe="line_1",qe="line_2",Be="city",Je="state",Ge="country",We="zip",Le="phone_code",He="phone_number",Ke="signatory_name",Qe="signatory_title",Ye="remittance_details",Xe="signature",ze="navarch_country",Ze="name",et="phone_code",tt="line_1",at="line_2",ot="city",nt="state",rt="country",it="zip",lt="name",st="navarch_world_port",dt="port_name",ct="country",ut="navarch_commodity_price",ft="price_pm",mt="average_price",ht="date",pt="name",yt="navarch_invoices",vt="parcel",_t="invoice",wt="document_type",gt="revision_invoice",$t="invoice_type",Et="invoice_date";async function bt(){const e=await s.get(`/folders?filter[name][_eq]=${encodeURI("Invoices")}`);return 200===e.status&&e.data&&e.data.data?0===e.data.data.length?await async function(){return(await s.post("/folders",{name:"Invoices"})).data.data.id}():e.data.data[0].id:null}function Dt(e){const a=null!=e?e:t.value.doc_name;console.log(`[viewPdf] doc ID: ${a}`),window.open(`/assets/${a}?access_token=9TKZlOUjs29Svyop45nyyyN02lYPlX_x`)}return{isGeneraingDoc:i,invoiceUrl:d.value,generateInvoice:async function(){var e,t,o,n,l,u,f,m,p,y,v,_,g,$,b,D,P,O,S,T,M,k,U,Se,Te,Me,ke,Ue,ut,ft,mt,ht,kt,Ut,Ft,Rt,jt,Vt,xt,qt;r.value="";try{i.value=!0,console.log("[generateInvoice] formValues=",d);const Bt=d.value[vt];if(!Bt)return r.value="Parcel not selected for invoice document generation",void(i.value=!1);const Jt=d.value[Et]?new Date(d.value[Et]):new Date,Gt=d.value[$t],Wt=await s.get(`/items/navarch_parcel/${Bt}`,{params:{fields:[B,J,x,q,G,W,L,H,K,Q,Y,X,z]}});console.log(`parcelResponce.data.data=${JSON.stringify(Wt.data.data)}`),function(e){if(!e)throw new Error("Parcel data not found, please ensure the selected parcel still exists");if(!e[x])throw new Error("The selected parcel does not have a contract, please ensure that the contract field for the parcel is not empty");if(!e[q])throw new Error("The selected parcel does not have a counterparty, please ensure that the counterparty field for the parcel is not empty");if(!e[B])throw new Error("The selected parcel does not have assay results");if(!e[J])throw new Error("The selected parcel does not have weight results");if(!e[Q])throw new Error("The selected parcel does not have an origin port");if(!e[Y])throw new Error("The selected parcel does not have a destination port");if(!e[X])throw new Error("The selected parcel does not have a shipment code")}(Wt.data.data);const Lt=Wt.data.data[B],Ht=Wt.data.data[J],Kt=Wt.data.data[x],Qt=await s.get(`/items/navarch_contract_payment_information?filter[related_contract]=${Kt}`,{params:{fields:[ae,oe,ne,re,ie,le,se,de]}});if(Qt.data.data&&0===Qt.data.data.length)return r.value="No invoice type found for the contract",void(i.value=!1);const Yt=Qt.data.data.find((e=>e[ae]===Gt));if(!Yt)return r.value=`Cannot find payment information for ${Gt} in the contract, please ensure that data for it has been entered and saved`,void(i.value=!1);const Xt=await s.get(`/items/navarch_weight_lot?filter[${R}]=${Ht}&sort[]=${j}`,{params:{fields:["id","dry_weight","wet_weight",V,"moisture","wet_weight_uom","dry_weight_uom"]}});console.log(`weightLotResponse.data.data=${JSON.stringify(Xt.data.data)}`),function(e){if(!e||0===e.length)throw new Error("No weight lots found for the selected parcel")}(Xt.data.data);const zt=function(e){console.log("[evaluateWeights]");const t={};for(const a of e)t[a.method]||(console.log(`adding method ${a.method} to weightData object`),t[a.method]=[]),console.log(`adding lot ${a.id} to weightData.${a.method} array`),t[a.method.toString()].push(a);const a=[];for(const e of Object.keys(t)){if(!t[e]){console.log(`method=${e} does not exist in weightData object`);continue}console.log(`adding lots and other values to weights for method=${e}`);const o=c(t[e]);o&&a.push(o)}return a}(Xt.data.data),Zt=d.value.weight_method;let ea=zt.find((e=>e.method===Zt));if(ea||(ea=zt.find((e=>"Outturn"===e.method))),ea||(ea=zt.find((e=>"Inturn Final"===e.method))),ea||(ea=zt.find((e=>"Inturn"===e.method))),ea||(ea=zt.find((e=>"Estimated"===e.method))),ea||(ea=zt.find((e=>"Planned"===e.method))),!ea)throw new Error("No weight lot data found for all weight methods. Please ensure weight lot data has been entered in the selected parcel.");if(void 0===ea.dry_weight||null===ea.dry_weight||void 0===ea.wet_weight||null===ea.wet_weight||void 0===ea.moisture||null===ea.moisture||void 0===ea.dry_weight_uom||null===ea.dry_weight_uom||void 0===ea.wet_weight_uom||null===ea.wet_weight_uom||void 0===ea.method||null===ea.method)throw new Error("One of the fields for weight lots is undefined");const ta=await s.get(`/items/${Ae}?filter[${Ie}]=${ea.dry_weight_uom}`,{params:{fields:[Pe]}}),aa=await s.get(`/items/${Ae}?filter[wet_symbol]=${ea.wet_weight_uom}`,{params:{fields:[Oe]}});if(!ta.data.data||!ta.data.data[0]||!ta.data.data[0][Pe])throw new Error(`Dry weight uom not found for symbol ${ea.dry_weight_uom}`);if(!aa.data.data||!aa.data.data[0]||!aa.data.data[0][Oe])throw new Error(`Wet weight uom not found for symbol ${ea.wet_weight_uom}`);const oa=ta.data.data[0][Pe],na=0===oa.indexOf("dry")?oa:`dry ${oa}`,ra=aa.data.data[0][Oe],ia=0===ra.indexOf("wet")?ra:`wet ${ra}`,la=await s.get(`/items/navarch_assay_lot?filter[${R}]=${Lt}&sort[]=${j}`,{params:{fields:["id","commodity",V,"dry_weight","dry_weight_uom","buyer_assay","seller_assay","final_assay","lot_number",ee]}});console.log(`assayLotResponse.data.data=${JSON.stringify(la.data.data)}`),function(e){if(!e||0===e.length)throw new Error("No assay lots found for the selected parcel")}(la.data.data);const sa=function(e){var t;console.log("[evaluateAnalyticalAssay]");const a={};for(const t of e)a[t.method]||(a[t.method]={}),a[t.method][t.commodity]||(a[t.method][t.commodity]=[]),null!==t.lot_number?(1===a[t.method][t.commodity].length&&null===a[t.method][t.commodity][0].lot_number&&(a[t.method][t.commodity]=[]),a[t.method][t.commodity].push(t)):null===t.lot_number&&0===a[t.method][t.commodity].length&&a[t.method][t.commodity].push(t);console.log(`[evaluateAnalyticalAssay] group: ${JSON.stringify(a)}}`);const o={};for(const e in a){console.log(`[evaluateAnalyticalAssay] methodKey: ${e}, group[methodKey]: ${JSON.stringify(a[e])}`);for(const n in a[e]){console.log(`[evaluateAnalyticalAssay] commodityKey: ${n}, group[methodKey][commodityKey]: ${JSON.stringify(a[e][n])}`),o[e]=null!=(t=o[e])?t:{},o[e][n]={};const i=a[e][n].reduce(((e,t)=>e+t.dry_weight),0);if(console.log(`[evaluateAnalyticalAssay] totalDryWeight: ${i} from ${JSON.stringify(a[e][n])}`),0===i||isNaN(i))throw r.value=`Please provide dry weight for ${n} commodity in ${e} method, total dry weight cannot be ${i}`,new Error("[evaluateAnalyticalAssay] totalDryWeight is 0");console.log(`[evaluateAnalyticalAssay] totalDryWeight: ${i}`),o[e][n].analytical_assay=a[e][n].reduce(((t,a)=>{var o,i;const l=null!=(i=a.final_assay)?i:null!=(o=a.seller_assay)?o:a.buyer_assay;if(null==l)throw r.value=`Please provide Final, Seller or Buyer assay value for ${n} commodity in ${e} method`,new Error("[evaluateAnalyticalAssay] assay value is not defined for assay lot");const s=t+l*a.dry_weight;return console.log(`[evaluateAnalyticalAssay] evaluated analytical assay: ${s} for method=${e}, commodity=${n}; with values accumulator=${t}, assayValue=${l}, dryWeight=${a.dry_weight}`),s}),0)/i,console.log(`[evaluateAnalyticalAssay] analytical assay: ${o[e][n].analytical_assay}`),a[e][n].length>0&&(o[e][n][ee]=a[e][n][0][ee])}}return console.log(`[evaluateAnalyticalAssay] analyticalAssay: ${JSON.stringify(o)}`),o}(la.data.data),da=d.value.assay_method;let ca;if(da&&(ca=sa[da.toString()]),ca||(ca=sa.Outturn),ca||(ca=sa["Inturn Final"]),ca||(ca=sa.Inturn),ca||(ca=sa.Estimated),ca||(ca=sa.Planned),!ca)throw new Error("No assay lot data found for all assay methods. Please ensure assay lot data has been entered in the selected parcel.");console.log(`WEIGHT: ${JSON.stringify(ea)}`),console.log(`ASSAYS: ${JSON.stringify(ca)}`);const ua=await s.get(`/items/navarch_contract/${Kt}`,{params:{fields:[te]}});!function(e){if(!e)throw new Error("Contract data not found, please ensure the selected contract still exists");if(!e[te])throw new Error("The selected contract does not have a set currency, please ensure that the currency field for the contract is not empty")}(ua.data.data);const fa=await s.get(`/items/navarch_currency/${ua.data.data.contract_currency}`,{params:{fields:[Ce]}});!function(e){if(!e)throw new Error("Currency data not found, please ensure the selected currency still exists");if(!e[Ce])throw new Error("The selected currency in the contract is not valid")}(fa.data.data);const ma=fa.data.data.code,ha=await s.get(`/items/navarch_commodity_in_contract?filter[contract]=${Kt}`,{params:{fields:["id",ce,"primary_commodity",ue,"price_method","quotational_periods","payable_assay_rates","penalty_rates","penalty_per_uom",fe,"treatment_charge_per_uom"]}});!function(e){if(!e||0===e.length)throw new Error("No commodity data found in selected contract for parcel");if(!e.every((e=>e[ce])))throw new Error("The selected contract has an undefined commodity, please ensure that the 'Commodity' field for all commodites in the contract is not empty");if(!e.every((e=>!e[ue]||e[fe])))throw new Error("The selected contract has an undefined base price Uom for commodity, please ensure that the 'Base Price Uom' field for all commodites in the contract is not empty")}(ha.data.data),console.log(`\tcommodityInContractResponse: ${JSON.stringify(ha.data.data)}`);const pa=[],ya=[];let va="";for(const{id:a,commodity:r,primary_commodity:i,price_method:d,quotational_periods:c,price_per_uom:w,penalty_per_uom:N,treatment_charge_per_uom:R}of ha.data.data){const j=await s.get(`/items/navarch_commodity/${r}`,{params:{fields:[be,De]}});if(Pt(j.data.data,r),!ca[j.data.data.code]){console.log(`[generateInvoice] no analytical assay for commodity ${j.data.data.code} found, skipping...`);continue}if(i&&(va=j.data.data[be]),null!==c){const r=c;console.log(`\tquotationalPeriods: ${JSON.stringify(r)}`);const i=Array.isArray(r)?r.find((e=>e.default)):null;if(!i)throw new Error(`No default quotational period found for commodity ${j.data.data.code}`);const A=r.filter((e=>!e.default)).map((e=>`${e.qp_period} ${e.qp_code}`)),N=[`${i.qp_period} ${i.qp_code}`,...A].join(", ");console.log(`[generateInvoice] evaluate payable assay for ${j.data.data.code} with an analytical assay=${null==(e=ca[j.data.data.code])?void 0:e.analytical_assay}`);const V=await s.get(`/items/navarch_payable_assay_bracket?filter[${me}]=${a}`,{params:{fields:["bracket_type",he,pe,ye,ve,_e,"rate_type","initial_adjustment","initial_adjustment_uom","minimum_deduction","minimum_deduction_uom","maximum_cap","maximum_cap_uom"]}}),{payableAssay:x,expression:q}=await E(null==(t=ca[j.data.data.code])?void 0:t.analytical_assay,null==(o=ca[j.data.data.code])?void 0:o.assay_uom,V.data.data,j.data.data[be]);let B=null,J=null;if("Final"!==Gt){const e=await Ct(Wt.data.data[H][j.data.data.code],Wt.data.data,d,(async()=>At(Yt,Wt.data.data,Gt)));if(null===e)throw new Error(`[generateInvoice] Provisional pricing dates not found for commodity ${j.data.data.code}`);if(null===e.provisionalPricingStartDate||!(e.provisionalPricingStartDate instanceof Date))throw new Error(`[generateInvoice] Invalid provisional pricing start date for commodity ${j.data.data.code} of invoice type ${Gt}`);if(B=e.provisionalPricingStartDate,null===e.provisionalPricingEndDate||!(e.provisionalPricingEndDate instanceof Date))throw new Error(`[generateInvoice] Invalid provisional pricing end date for commodity ${j.data.data.code} of invoice type ${Gt}`);J=e.provisionalPricingEndDate}else{const e=await Ct(Wt.data.data[H][j.data.data.code],Wt.data.data,d,(async()=>Nt(i,Wt.data.data)),!0);if(null===e)throw new Error(`[generateInvoice] Provisional pricing dates not found for commodity ${j.data.data.code}`);if(null===e.provisionalPricingStartDate||!(e.provisionalPricingStartDate instanceof Date))throw new Error(`[generateInvoice] Invalid provisional pricing start date for commodity ${j.data.data.code} of invoice type ${Gt}`);if(B=e.provisionalPricingStartDate,null===e.provisionalPricingEndDate||!(e.provisionalPricingEndDate instanceof Date))throw new Error(`[generateInvoice] Invalid provisional pricing end date for commodity ${j.data.data.code} of invoice type ${Gt}`);J=e.provisionalPricingEndDate}console.log(`[generateInvoice] provisional pricing date range: ${B.toString()} - ${J.toString()}`);const G=await It(j.data.data.code,d,B,J);let W;const L=await s.get(`/items/${we}?filter[related_contract_commodity_tc]=${a}`,{params:{fields:[he,pe,ye,ve,ge,$e,Ee,_e]}});let K,Q;if(void 0!==L.data.data&&null!==L.data.data&&L.data.data.length>0&&(W=await C(G,null==(n=ca[j.data.data.code])||n.assay_uom,L.data.data,j.data.data[be],"Treatment Charge")),W){if(!R)throw new Error(`Charge Rate UOM is not defined for commodity ${j.data.data[be]}`);const e=await s.get(`/items/${Ae}/${R}`,{params:{fields:[Ne]}});St(e.data.data,j.data.data[be]),K=e.data.data[Ne]}const Y=await s.get(`/items/${we}?filter[related_contract_commodity_rc]=${a}`,{params:{fields:[he,pe,ye,ve,ge,$e,Ee,_e]}});if(void 0!==Y.data.data&&null!==Y.data.data&&Y.data.data.length>0&&(Q=await C(G,null==(l=ca[j.data.data.code])||l.assay_uom,Y.data.data,j.data.data[be],"Refining Charge")),Q){if(!R)throw new Error(`Charge Rate UOM is not defined for commodity ${j.data.data[be]}`);const e=await s.get(`/items/${Ae}/${R}`,{params:{fields:[Ne]}});St(e.data.data,j.data.data[be]),K=e.data.data[Ne]}const X=await s.get(`/items/${Ae}/${w}`,{params:{fields:[Ne]}});Ot(X.data.data,j.data.data[be]);const z=X.data.data[Ne],Z=await F(z,ea.dry_weight_uom,null==(u=ca[j.data.data.code])?void 0:u.assay_uom);console.log(`[generateInvoice] payableMetalConversion for commodity ${j.data.data.name}: ${JSON.stringify(Z)}`),Z.initialConversion=1===(null==(f=Z.initialConversion)?void 0:f.conversionFactor)?void 0:Z.initialConversion,Z.finalConversion=1===(null==(m=Z.finalConversion)?void 0:m.conversionFactor)?void 0:Z.finalConversion;const ee=await s.get(`/items/navarch_price_method/${d}`,{params:{fields:[pt]}});Mt(ee.data.data,d,j.data.data[be]),pa.push({commodity:j.data.data.name,analytical_assay:h(null==(p=ca[j.data.data.code])?void 0:p.analytical_assay,4),deduction_expression:q,payable_assay:h(x,4),assay_uom:null==(y=ca[j.data.data.code])?void 0:y.assay_uom,payable_metal:h(ea.dry_weight*(null!=(_=null==(v=Z.initialConversion)?void 0:v.conversionFactor)?_:1)*(null!=x?x:1)*(null!=($=null==(g=Z.finalConversion)?void 0:g.conversionFactor)?$:1)*("%"!==(null==(b=ca[j.data.data.code])?void 0:b.assay_uom)?1:.01),4),payable_metal_expression:`${h(ea.dry_weight,4)}${ea.dry_weight_uom}${Z.initialConversion?` * ${h(Z.initialConversion.conversionFactor,4)}${Z.initialConversion.conversionUom}`:""} * ${h(null!=x?x:1,4)}${"%"!==(null==(D=ca[j.data.data.code])?void 0:D.assay_uom)?`${null==(P=ca[j.data.data.code])?void 0:P.assay_uom}`:" / 100"}${Z.finalConversion?` * ${h(Z.finalConversion.conversionFactor,4)}${Z.finalConversion.conversionUom}`:""}`,payable_metal_uom:z,qp:N,qp_start_date:I(B),qp_end_date:I(J),price_method:ee.data.data[pt],price_rate:h(G,4),price_per_uom:z,price:h(ea.dry_weight*(null!=(S=null==(O=Z.initialConversion)?void 0:O.conversionFactor)?S:1)*(null!=x?x:1)*(null!=(M=null==(T=Z.finalConversion)?void 0:T.conversionFactor)?M:1)*("%"!==(null==(k=ca[j.data.data.code])?void 0:k.assay_uom)?1:.01)*G),treatment_charge:W?{rate:h(W.baseTreatmentCharge,4),discount:h((null!=(U=W.baseTreatmentCharge)?U:0)-(null!=(Se=W.finalValue)?Se:0),4),final_rate:h(W.finalValue,4),per_uom:K,final_amount:h(ea.dry_weight*(null!=(Te=W.finalValue)?Te:1))}:void 0,refining_charge:Q?{rate:h(Q.baseTreatmentCharge,4),discount:h((null!=(Me=Q.baseTreatmentCharge)?Me:0)-(null!=(ke=Q.finalValue)?ke:0),4),final_rate:h(Q.finalValue,4),per_uom:K,final_amount:h(ea.dry_weight*(null!=(Ue=Q.finalValue)?Ue:1))}:void 0,final_total:h(ea.dry_weight*(null!=(ft=null==(ut=Z.initialConversion)?void 0:ut.conversionFactor)?ft:1)*(null!=x?x:1)*(null!=(ht=null==(mt=Z.finalConversion)?void 0:mt.conversionFactor)?ht:1)*("%"!==(null==(kt=ca[j.data.data.code])?void 0:kt.assay_uom)?1:.01)*G-(W?1:0)*(ea.dry_weight*(null!=(Ut=null==W?void 0:W.finalValue)?Ut:1))-(Q?1:0)*(ea.dry_weight*(null!=(Ft=null==Q?void 0:Q.finalValue)?Ft:1)))})}const V=await s.get(`/items/navarch_penalty_bracket?filter[${me}]=${a}`,{params:{fields:[he,pe,ye,ve,"no_penalty","for_every_unit",_e]}});if(V.data.data.length>0){if(null===N)throw new Error(`[generateInvoice] penalty_per_uom is null for ${j.data.data.code}`);const e=await s.get(`/items/${Ae}/${N}`,{params:{fields:[Ne]}});Tt(e.data.data,j.data.data[be]);const t=e.data.data[Ne],{penalty:a,expression:o,bracket:n}=await A(null==(Rt=ca[j.data.data.code])?void 0:Rt.analytical_assay,V.data.data,ma,t,j.data.data[be]);console.log(`[generateInvoice] evaluate penalty for ${j.data.data.code} with an analytical assay=${null==(jt=ca[j.data.data.code])?void 0:jt.analytical_assay}, penaltyRate=${null==n?void 0:n.rate}, finalPenaltyRate=${a}, expression='${o}'`),ya.push({commodity:j.data.data.name,analytical_assay:h(null==(Vt=ca[j.data.data.code])?void 0:Vt.analytical_assay,4),deduction_expression:o,assay_uom:null==(xt=ca[j.data.data.code])?void 0:xt.assay_uom,penalty_rate:h(null==n?void 0:n.rate,4),penalty_per_uom:t,final_penalty_rate:h(a,4),final_penalty:h((null!=a?a:1)*ea.dry_weight)})}}console.log(`[generateInvoice] COMMODITIES: ${JSON.stringify(pa)}`),console.log(`[generateInvoice] PENALTIES: ${JSON.stringify(ya)}`);const _a=pa.reduce(((e,t)=>e+w(t.price)),0),wa=pa.reduce(((e,t)=>{var a;return e+w(null==(a=t.treatment_charge)?void 0:a.final_amount)}),0),ga=pa.reduce(((e,t)=>{var a;return e+w(null==(a=t.refining_charge)?void 0:a.final_amount)}),0),$a=ya.reduce(((e,t)=>e+w(t.final_penalty)),0);console.log(`[generateInvoice] TOTAL_REVENUE=${_a}, TOTAL_TREATMENT_CHARGE=${wa}, TOTAL_REFINING_CHARGE=${ga}, TOTAL_PENALTIES=${$a}`);let Ea,ba=0;const Da=!!Wt.data.data[z];Da&&(ba=Wt.data.data[z].reduce(((e,t)=>e+t.amount),0),Ea={adjustments:Wt.data.data[z].map((e=>({description:e.description,amount:h(e.amount)}))),total_adjustments:h(ba)});const Ca=Yt[oe],Aa=_a-wa-ga-$a+ba,Na=null!=Ca?Aa*Ca/100:void 0,Ia=await s.get(`/items/navarch_counterparty/${Wt.data.data[q]}`,{params:{fields:[Fe]}});!function(e){if(console.log("[validateCounterparty]"),!e)throw new Error("Counterparty for parcel not found");if(!e[Fe])throw new Error("No name defined for counterparty of the selected parcel")}(Ia.data.data);const Pa=await s.get(`/items/navarch_counterparty_navarch_address?filter[navarch_counterparty_id]=${Wt.data.data[q]}`,{params:{fields:[Re]}});!function(e){if(console.log("[validateCounterpartyAddress]"),!e||0===e.length)throw new Error("Counterparty address for parcel not found");if(!e[0][Re])throw new Error("No address defined for counterparty of the selected parcel")}(Pa.data.data);const Oa=Pa.data.data[0][Re],Sa=await s.get(`/items/navarch_address/${Oa}`,{params:{fields:[tt,at,ot,nt,rt,it]}});!function(e){if(!e)throw new Error("Buyer address for parcel not found");if(!e[tt])throw new Error("No address line 1 defined for buyer address of the selected parcel");if(!e[rt])throw new Error("No country defined for buyer address of the selected parcel")}(Sa.data.data);const Ta=Sa.data.data[tt],Ma=Sa.data.data[at]?`,\n${Sa.data.data[at]}`:"",ka=Sa.data.data[ot]?`,\n${Sa.data.data[ot]}`:"",Ua=Sa.data.data[nt]?`,\n${Sa.data.data[nt]}`:"",Fa=await s.get(`/items/${ze}/${Sa.data.data[rt]}`,{params:{fields:[Ze]}});!function(e){if(!e)throw new Error("Something went wrong when getting the buyer's based country")}(Fa.data.data);const Ra=Fa.data.data[Ze]?`, ${Fa.data.data[Ze]}`:"",ja=`${Ta}${Ma}${ka}${Sa.data.data[it]?` ${Sa.data.data[it]}`:""}${Ua}${Ra}`,Va=Wt.data.data[K];let xa;Va&&(xa=await s.get(`/items/navarch_vessel/${Va}`,{params:{fields:[lt]}}),function(e){if(console.log("[validateVessel]"),!e)throw new Error("Vessel for parcel not found");if(!e[lt])throw new Error("No name defined for vessel of the selected parcel")}(xa.data.data));const qa=(await s.get("/items/navarch_company",{params:{fields:[je,Ve,xe,qe,Be,Je,We,Ge,Le,He,Ke,Qe,Ye,Xe]}})).data.data;!function(e){if(console.log("[validateCompanyData]"),!e)throw new Error("Company data not found");if(!e[je])throw new Error("Please set company name in Directories > Company");if(!e[Le])throw new Error("Please set company phone code in Directories > Company");if(!e[xe])throw new Error("Please set company address line 1 in Directories > Company");if(!e[Ge])throw new Error("Please set the country the company is based in Directories > Company");if(!e[He])throw new Error("Please set the company phone number in Directories > Company");if(!e[Ke])throw new Error("Please set the company signatory name in Directories > Company");if(!e[Qe])throw new Error("Please set the company signatory title in Directories > Company");if(!e[Ye])throw new Error("Please set the company remittance details in Directories > Company");if(!e[Xe])throw new Error("Please set the company signature in Directories > Company")}(qa);const Ba=qa[je],Ja=await s.get(`/items/${ze}/${qa[Le]}`,{params:{fields:[et]}});!function(e){if(!e)throw new Error("Company phone code not found, please ensure phone code selected for Directories > Company is valid");if(!e[et])throw new Error("Company country phone code not found, please contact Navarch support for assistance")}(Ja.data.data);const Ga=Ja.data.data[et],Wa=qa[He],La=qa[xe],Ha=qa[qe]?`,\n${qa[qe]}`:"",Ka=qa[Be]?`,\n${qa[Be]}`:"",Qa=qa[Je]?`,\n${qa[Je]}`:"",Ya=await s.get(`/items/${ze}/${qa[Ge]}`,{params:{fields:[Ze]}});!function(e){if(!e)throw new Error("Country not found, please ensure country selected for Directories > Company is valid");if(!e[Ze])throw new Error("Country name not found, please contact Navarch support for assistance")}(Ya.data.data);const Xa=Ya.data.data[Ze]?`, ${Ya.data.data[Ze]}`:"",za=`${La}${Ha}${Ka}${qa[We]?` ${qa[We]}`:""}${Qa}${Xa}`,Za=await s.get(`/items/${st}/${Wt.data.data[Q]}`,{params:{fields:[dt,ct]}});!function(e){if(!e)throw new Error("Origin port for parcel not found");if(!e[dt])throw new Error("No name defined for origin port of the selected parcel");if(!e[ct])throw new Error("No country defined for origin port of the selected parcel")}(Za.data.data);const eo=await s.get(`/items/${st}/${Wt.data.data[Y]}`,{params:{fields:[dt,ct]}});!function(e){if(!e)throw new Error("Destination port for parcel not found");if(!e[dt])throw new Error("No name defined for destination port of the selected parcel");if(!e[ct])throw new Error("No country defined for destination port of the selected parcel")}(eo.data.data);let to=(await s.get(`/items/${yt}?filter[${vt}]=${Bt}`,{params:{fields:["id",_t]}})).data.data.reduce(((e,t)=>e+(t[_t]?1:0)),0)+1,ao=Bt;const oo=to.toString().padStart(2,"0"),no=`${Wt.data.data[X]} (#${oo})`,ro=ao.toString().padStart(2,"0"),io={invoice_type:Gt,days:Yt[ne],day_type:Yt[re],ref_day:"Final"===Gt?"Parcel Finalisation":Yt[ie]};if(!io)throw new Error(`Contract does not have a payment advice for invoice type ${Gt}`);let lo,so="";switch(io.ref_day){case"Arrival Date":so="Actual Arrival Date from the Parcel form",lo=Wt.data.data[G];break;case"B/L Date":so="B/L Date from the Parcel form",lo=Wt.data.data[W];break;case"Invoice Date":so="Invoice Date from the Invoice form",lo=d.value[Et];break;case"Estimated Shipment Date":so="Estimated Shipment Date from the Parcel form",lo=Wt.data.data[L];break;case"Parcel Finalisation":if(void 0===Wt.data.data[Z]||null===Wt.data.data[Z])throw new Error("[generateInvoice] Parcel has not been finalised, please fill in the the parcel finalisation date in the parcel form.");so="Parcel Finalisation Date from the Parcel form",lo=Wt.data.data[Z];break;default:throw new Error(`Invalid reference day for payment advice: ${io.ref_day}; please contact Navarch for support`)}if(null==lo)throw new Error(`Reference day for payment advice ${so} is empty in parcel`);const co=new Date(lo),uo=parseInt(io.days),fo=io.day_type;let mo;switch(fo){case"Business Day(s)":mo=function(e,t,a=!1){const o=new Date(e.valueOf());let n=t-(a?1:0);for(;n>0;)o.setDate(o.getDate()+1),0!==o.getDay()&&6!==o.getDay()&&(n-=1);return o.getHours()>=12&&o.setDate(o.getDate()+1),o}(co,uo,!0);break;case"Calendar Day(s)":mo=new Date(co.valueOf()),mo.getHours()>=12?mo.setDate(mo.getDate()+uo+1):mo.setDate(mo.getDate()+uo);break;default:throw new Error(`[generateInvoice] Invalid day_type for payment advice ${fo}`)}console.log(`[generateInvoice] payment advice due date: ${mo.toString()}`);const ho=I(mo);let po,yo,vo,_o;if(d.value[gt]){const e=await s.get(`/items/${yt}/${d.value[gt]}`,{params:{fields:[vt,_t,$t,wt]}});if(console.log(`[generateInvoice] revisionParcelResponse: ${JSON.stringify(e.data)}`),200!==e.status||!e.data.data)throw new Error(`[generateInvoice] Failed to get invoice ${d.value[gt]}`);if(e.data.data[vt]!==Bt)throw new Error(`[generateInvoice] Parcel ID mismatch between this invoice with parcel ${Bt}, and the revision invoice ${d.value[gt]} with parcel id ${e.data.data[vt]}`);if(!e.data.data[_t])throw new Error(`[generateInvoice] No invoice pdf has been generated yet for invoice ${d.value[gt]}`);if(!e.data.data[$t])throw new Error(`[generateInvoice] No invoice type found for the revision invoice ${d.value[gt]}`);vo=e.data.data[$t],_o=e.data.data[wt];const t=e.data.data[_t];if(function(e){if(!e)throw new Error("Revision invoice data not found");if(!e.invoice_number)throw new Error("Revision invoice data does not have an invoice number in generated document");if(!e.balance_in_sellers_favor)throw new Error("Revision invoice data does not have a valid 'Balance in Sellers Favor' in generated document")}(t),console.log(`[generateInvoice] revisionInvoiceData: ${JSON.stringify(t)}`),po=t.invoice_number,!po||""===po)throw new Error(`[generateInvoice] Could not find invoice number in revision invoice ${d.value[gt]}`);const a=t.balance_in_sellers_favor.replace(/,/g,"");if(yo=parseFloat(a),!yo||isNaN(yo))throw new Error(`[generateInvoice] Total payment=${t.balance_in_sellers_favor} found is not convertible to monetary amount for revision invoice ${d.value[gt]}`)}const wo=null!=Na?Na-(null!=yo?yo:0):void 0,go={signatoryName:qa[Ke],signatoryTitle:qa[Qe],signature:qa[Xe],company:Ba},$o={folder_id:await bt(),company_logo:null!=(qt=qa[Ve])?qt:void 0,seller:Ba,seller_address:za,seller_phone_number:`+${Ga} ${Wa}`,signatory:go,remittance:qa[Ye],buyer:Ia.data.data[Fe],buyer_address:ja,shipment_code:Wt.data.data[X],vessel:xa?xa.data.data[lt]:"N/A",bl_date:Wt.data.data[W]?I(new Date(Wt.data.data[W])):"N/A",invoice_type:Gt,invoice_date:I(Jt),revision:po&&yo?_o:void 0,invoice_number:no,parcel:`${Wt.data.data[X]} (#${ro})`,port_of_loading:`${Za.data.data[dt]}, ${Za.data.data[ct]}`,port_of_discharge:`${eo.data.data[dt]}, ${eo.data.data[ct]}`,primary_commodity:`${va} Concentrates`,due_date:ho,wet_weight:h(ea.wet_weight,4),wet_weight_uom:ea.wet_weight_uom,wet_weight_uom_name:N(ia),moisture:h(ea.moisture,4),moisture_uom:"%",dry_weight:h(ea.dry_weight,4),dry_weight_uom:ea.dry_weight_uom,dry_weight_uom_name:N(na),total_revenue:h(_a),total_deductions:h($a+wa+ga),currency:ma,commodities:pa,penalties:{penalties:ya,total_penalties:h($a)},adjustments:Da?Ea:void 0,invoice_value:h(Aa),payable_percentage:h(Ca),payable_amount:h(Na),payment_received_source:po&&yo&&_o?`${vo}.${_o}.${po}`:void 0,payment_received:po&&yo?h(yo):void 0,balance_in_sellers_favor:h(wo)};console.log(`[generateInvoice] invoice request body: ${JSON.stringify($o)}`);const Eo=await s.post("/generate/invoice",$o);if(200!==Eo.status)return console.log(`[generateInvoice] invoice response status: ${Eo.status}`),r.value=Eo.data,void(i.value=!1);const bo=await async function(e){if(!e)throw console.error("[uploadGeneratedDoc] fileData is empty"),new Error("A failure occured while trying to upload the generated document, no file data found. Please try again.");const t=function(e){console.log("[convertJsonToFormData] json=",JSON.stringify(e));const t=new FormData;for(let a in e)"file"!==a&&t.append(a,e[a]);const a=e.file,o=function(e,t){const a=atob(e),o=new ArrayBuffer(a.length),n=new Uint8Array(o);for(let e=0;e<a.length;e++)n[e]=a.charCodeAt(e);const r=new Blob([n],{type:t});return r}(a,"application/pdf");return t.append("file",o,e.filename_download),t}(e),a=await s.post("/files",t,{headers:{"Content-Type":"multipart/form-data"}});if(200!==a.status)throw console.error(`[uploadGeneratedDoc] uploadedFileData status: ${a.status}`),new Error("A failure occured while trying to upload the generated document. Please try again.");return a.data.data.id}(Eo.data);a("input",{...$o,doc_name:bo}),console.log(`[generateInvoice] invoice response: ${JSON.stringify(d.value)}`),i.value=!1,Dt(bo)}catch(e){return i.value=!1,console.log(`generating invoice went wrong due to: ${e}`),void(r.value=e)}},viewPdf:Dt,isCopying:l,copy:async function(){l.value=!0;const{id:e,user_created:t,date_created:a,user_updated:o,date_updated:n,invoice:i,...c}=d.value;console.log(`[invoice::copy] requestBody=${JSON.stringify(c)}`);const u=await s.post("/items/navarch_invoices",c);if(200!==u.status)return console.log(`[invoice::copy] copy response status: ${u.status}`),void(r.value=`Failed to duplicate invoice with status ${u.status}`);l.value=!1,window.open(`/admin/content/navarch_invoices/${u.data.data.id}`)},failureReason:r};async function Ct(e,t,a,o,n=!1){const r=await async function(e,t,a,o){if(o&&!e.declared)return null;const n=null==e?void 0:e.qp_selected;if(!n)return null;const r=n.split(" "),i={qp_period:parseInt(r[0]),qp_code:r[1]};let l,d,c,u;switch(i.qp_code){case"MAMA":l=G,d="Actual Arrival Date";break;case"MOSS":l=L,d="Estimated Shipment Date";break;case"MOS":case"MOAS":l=W,d="B/L Date";break;default:throw new Error(`Unsupported QP code ${i.qp_code} in the contract commodities, please ensure all commodity QP codes are MAMA, MOS, MOSS, or MOAS`)}const f=new Date(t[l]);if(null==f)throw new Error(`[generateInvoice] Invalid reference day for ${d} from ${i.qp_code}`);if(c=S(f,i.qp_period),c.valueOf()>Date.now())return null;if(u=T(f,i.qp_period),u.valueOf()>Date.now())return null;if(u.valueOf()<=Date.now()){0===u.getDay()?u=O(u,2,!0):6===u.getDay()&&(u=O(u,1,!0));const e=await s.get(`/items/${ut}`,{params:{filter:{_and:[{date:{_eq:P(u)}},{price_method:{_eq:a}}]},fields:[ft,mt]}});if(!e.data.data||0===e.data.data.length)return null}return{provisionalPricingStartDate:c,provisionalPricingEndDate:u}}(e,t,a,n);return r||await o()}async function At(e,t,a){let o,n,r;const i={invoice_type:a,days:e[le],day_type:e[se],ref_day:e[de]};if(!i)throw new Error(`[generateInvoice] No provisional pricing found for invoice type ${a}`);let l;switch(i.ref_day){case"Arrival Date":l=t[G],o="Actual Arrival Date from the Parcel form";break;case"B/L Date":l=t[W],o="B/L Date from the Parcel form";break;case"Invoice Date":l=d.value[Et],o="Invoice Date from the Invoice form";break;case"Estimated Shipment Date":l=t[L],o="Estimated Shipment Date from the Parcel form";break;default:throw new Error(`Invalid reference day for invoice pricing: ${i.ref_day}; please contact Navarch for support`)}if(null==l)throw new Error(`Reference day for invoice pricing ${o} is empty`);r=new Date(l);const s=parseInt(i.days),c=i.day_type;switch(c){case"Business Day(s)":n=O(r,s,!0);break;case"Calendar Day(s)":n=new Date(r.valueOf()),n.setDate(n.getDate()-s);break;default:throw new Error(`Invalid day type ${c} for ${a} Invoice in the contract, please ensure it is either Calendar Day(s) or Business Day(s)`)}if(n.valueOf()>Date.now())throw new Error(`Start date for provisional pricing ${n} (${o}) for ${a} Invoice has not occurred yet`);if(r.valueOf()>Date.now())throw new Error(`End date for provisional pricing ${r} (${o}) for ${a} Invoice has not occurred yet`);return{provisionalPricingStartDate:n,provisionalPricingEndDate:r}}async function Nt(e,t){let a,o,n,r;switch(e.qp_code){case"MAMA":r=G,a="Actual Arrival Date";break;case"MOSS":r=L,a="Estimated Shipment Date";break;case"MOS":case"MOAS":r=W,a="B/L Date";break;default:throw new Error(`Unsupported QP code ${e.qp_code} in the contract commodities, please ensure all commodity QP codes are MAMA, MOS, MOSS, or MOAS`)}const i=new Date(t[r]);if(null==i)throw new Error(`[generateInvoice] Invalid reference day for ${a} from ${e.qp_code}`);if(o=S(i,e.qp_period),o.valueOf()>Date.now())throw new Error(`[generateInvoice] Start date for provisional pricing ${o} (${a}) based on default QP has not occurred yet`);if(n=T(i,e.qp_period),n.valueOf()>Date.now())throw new Error(`[generateInvoice] End date for provisional pricing ${n} (${a}) based on default QP has not occurred yet`);return{provisionalPricingStartDate:o,provisionalPricingEndDate:n}}async function It(e,t,a,o,n=1){if(m(e))throw new Error("Commodity is not defined for price calcualtion");if(m(t))throw new Error(`Price method for commodity ${e} is not defined for price calcualtion`);if(m(a))throw new Error(`Start date is not defined for price calcualtion with ${t} has not been properly defined, please ensure that contract QP is properly defined`);if(m(o))throw new Error(`End date is not defined for price calcualtion with ${t} has not been properly defined, please ensure that contract QP is properly defined`);const r=await s.get(`/items/${ut}?filter[_and][0][price_method][_eq]=${t}&filter[_and][0][currency][_eq]=${n}&filter[_and][1][date][_between][0]=${P(a)}&filter[_and][1][date][_between][1]=${P(o)}`,{params:{fields:[ft,mt,ht,"price_method"]}});if(!r||!r.data||!r.data.data)throw new Error(`[getCommodityAvgPrice] Failed to get commodity prices for commodity ${e} between ${P(a)} and ${P(o)}`);if(0===r.data.data.length)throw new Error(`No commodity prices found for commodity ${e} between ${P(a)} and ${P(o)}`);return r.data.data.reduce(((e,a)=>{if(!a[mt]&&!a[ft])throw new Error(`Commodity for ${t} on the date of ${a[ht]} does not have a price, please contact Navarch for assistance`);let o;if(null!==a[mt]&&(o=Number(a[mt])),null===a[ft])throw new Error(`The commodity price for Price Method #${t} for the date of ${a[ht]} is not a valid number, please contact Navarch for assistance`);return o=Number(a[ft]),e+o}),0)/r.data.data.length}function Pt(e,t){var a,o;if(console.log("[validateCommodityData]"),!e)throw new Error("commodity data response is null");if(!e[be])throw new Error(`Commodity name for commodity ${null!=(a=e[De])?a:t} is undefined, please contact Navarch for assistance`);if(!e[De])throw new Error(`Commodity code for commodity ${null!=(o=e[be])?o:t} is not defined, please contact Navarch for assistance`)}function Ot(e,t){if(!e)throw new Error(`Price per UOM for commodity ${t} is not a valid`);if(!e[Ne])throw new Error(`Price per UOM for commodity ${t} does not have a valid unit symbol, please contact Navarch for assistance`)}function St(e,t){if(!e)throw new Error(`Charge per UOM for commodity ${t} is not a valid`);if(!e[Ne])throw new Error(`Charge per UOM for commodity ${t} does not have a valid unit symbol, please contact Navarch for assistance`)}function Tt(e,t){if(!e)throw new Error(`Penalty per UOM for commodity ${t} is not a valid`);if(!e[Ne])throw new Error(`Penalty per UOM for commodity ${t} does not have a valid unit symbol, please contact Navarch for assistance`)}function Mt(e,t,a){if(!e)throw new Error(`Price method ${t} for commodity ${a} is not defined, please contact Navarch for assistance`);if(!e[pt])throw new Error(`Price method ${t} for commodity ${a} has no name, please contact Navarch for assistance`)}}});const g={key:0},$={key:1};var E=[],b=[];!function(e,t){if(e&&"undefined"!=typeof document){var a,o=!0===t.prepend?"prepend":"append",n=!0===t.singleTag,r="string"==typeof t.container?document.querySelector(t.container):document.getElementsByTagName("head")[0];if(n){var i=E.indexOf(r);-1===i&&(i=E.push(r)-1,b[i]={}),a=b[i]&&b[i][o]?b[i][o]:b[i][o]=l()}else a=l();65279===e.charCodeAt(0)&&(e=e.substring(1)),a.styleSheet?a.styleSheet.cssText+=e:a.appendChild(document.createTextNode(e))}function l(){var e=document.createElement("style");if(e.setAttribute("type","text/css"),t.attributes)for(var a=Object.keys(t.attributes),n=0;n<a.length;n++)e.setAttribute(a[n],t.attributes[a[n]]);var i="prepend"===o?"afterbegin":"beforeend";return r.insertAdjacentElement(i,e),e}}(".margin-top-16px[data-v-64969d30] {\n  margin-top: 16px;\n}",{}),w.render=function(e,t,a,o,n,p){const y=r("v-button"),v=r("v-notice");return i(),l(s,null,[d(' <input :value="value" @input="handleChange($event.target.value)" /> '),d(" create a button only interface for Directus"),e.value?(i(),l("div",$,[c(y,{onClick:t[1]||(t[1]=()=>e.viewPdf())},{default:u((()=>[f("View Invoice ")])),_:1})])):(i(),l("div",g,[c(y,{onClick:t[0]||(t[0]=()=>e.generateInvoice()),loading:e.isGeneraingDoc},{default:u((()=>[f("Generate Invoice")])),_:1},8,["loading"]),e.failureReason?(i(),m(v,{key:0},{default:u((()=>[f(h(e.failureReason),1)])),_:1})):d("v-if",!0)])),c(y,{class:"margin-top-16px",onClick:t[2]||(t[2]=()=>e.copy()),loading:e.isCopying},{default:u((()=>[f("Copy")])),_:1},8,["loading"])],64)},w.__scopeId="data-v-64969d30",w.__file="src/interface.vue";var D=t({id:"invoice_generator_button",name:"Generate Invoice Button",icon:"receipt_long",description:"This is a custom interface for Navarch's Invoice Generator Button.",component:w,options:null,types:["json"],group:"standard"});export{D as default};
