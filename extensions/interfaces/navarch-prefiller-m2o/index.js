import{useApi as e,useStores as t,useExtensions as l}from"@directus/extensions-sdk";import{defineComponent as n,inject as i,ref as o,toRef as a,watch as r,openBlock as s,createElementBlock as u,createBlock as c,resolveDynamicComponent as d,mergeProps as p,createElementVNode as f,toDisplayString as m}from"vue";var v=n({props:{value:{type:String,default:null},currentCollection:{type:String,default:null},listenedField:{type:[String],default:null}},emits:["input"],setup(n,{attrs:s,emit:u}){const c=i("values",o({})),{listenedField:d,currentCollection:p}=n,f=a(n,"value");console.log(`prefiller::current collection: ${p}`),console.log(`prefiller::listened field: ${d}`);const m=d[0].split(".");let v="",g="";m.length>=2&&(v=m[0],g=m[1]);const y=e(),{useRelationsStore:h}=t(),$=h().getRelationForField(p,v).related_collection;r((()=>c.value[v]),(async e=>{console.log("prefiller::id watchedValue: "+e),null!=e&&null==f.value&&(console.log(`prefiller::fetching ${g} from ${$}`),async function(e,t,l){return console.log(`prefiller::fetching ${JSON.stringify(e)} from ${t} in getItems with id ${l}`),(await y.get(`/items/${t}/${l}?${e.map((e=>`fields[]=${e}`)).join("&")}`)).data.data}([g],$,e).then((async e=>{let t=e[g];null!=t&&t!==f.value&&u("input",t)})))}));const{interfaces:C}=l(),{component:_}=C.value.find((e=>"select-dropdown-m2o"===e.id));return{values:c,attrs:s,DropdownM2OComponent:_,handleChange:function(e){u("input",e)}}}});v.render=function(e,t,l,n,i,o){return s(),u("div",null,[(s(),c(d(e.DropdownM2OComponent),p(e.attrs,{value:e.value,onInput:e.handleChange}),null,16,["value","onInput"])),f("div",null,"Contract: "+m(e.values.contract),1),f("div",null,"CounterpartyV2: "+m(e.values.counterparty_v2),1),f("div",null,"Counterparty: "+m(e.values.counterparty),1),f("div",null,"Estimated Arrival Date: "+m(e.values.estimate_arrival_date),1),f("div",null,"Assay Lots Foreign Key: "+m(e.values.assay_results),1),f("div",null,"Weight Lots Foreign Key: "+m(e.values.weight_result),1)])},v.__file="src/interface.vue";var g={id:"navarch-prefilling-select-dropdown-m2o",name:" Navarch Prefilling M2O Extension",description:"Functions like the default Directus M2O interface but can be prefilled with a default value in response to another field in the same collection",icon:"arrow_right_alt",component:v,types:["uuid","string","text","integer","bigInteger"],relational:!0,localTypes:["m2o"],group:"relational",options:({relations:e,collection:t})=>{var l;const n=null==(l=e.m2o)?void 0:l.related_collection;return[{field:"template",name:"$t:interfaces.select-dropdown-m2o.display_template",meta:{interface:"system-display-template",options:{collectionName:n}}},{field:"listenedField",name:"Field to Watch",meta:{interface:"system-fields",options:{collectionName:t}}},{field:"currentCollection",name:"Current Collection Name",meta:{interface:"input"}},{field:"filter",name:"$t:filter",type:"json",meta:{interface:"system-filter",options:{collectionName:n}}}]},recommendedDisplays:["related-values"]};export{g as default};
