import{useApi as e,defineInterface as t}from"@directus/extensions-sdk";import{defineComponent as a,ref as n,inject as o,resolveComponent as i,openBlock as r,createElementBlock as s,Fragment as d,createCommentVNode as l,createVNode as c,withCtx as u,createTextVNode as g,createBlock as m,toDisplayString as _}from"vue";var p=a({props:{value:{type:Object,default:null}},emits:["input"],setup(t,{emit:a}){const i=n(""),r=n(!1),s=n(!1),d=e(),l=o("values",n({})),c="foreign_key",u="lot_number",g="method",m="contract",_="counterparty",p="assay_results",y="weight_result",f="bl_date",h="vessel",v="origin",w="destination",$="commodity",b="final_assay",A="assay_uom",C="name",S="name",x="name",N="logo",k="line_1",D="line_2",O="city",P="state",W="country",T="zip",E="phone_code",G="phone_number",I="signatory_name",J="signatory_title",j="signature",F="navarch_country",R="name",V="phone_code",B="navarch_world_port",M="port_name",q="country",z="commodity",U="navarch_commodity",Y="name";return{isGeneraingDoc:r,failureReason:i,generatePdf:async function(){var e,t;i.value="",r.value=!0;try{const n=l.value.parcel,o=await d.get(`/items/navarch_parcel/${n}`,{params:{fields:[p,y,m,_,"actual_arrival_date",f,"estimated_shipment_date",h,v,w]}}),s=o.data.data[p],X=o.data.data[y],Z=await d.get(`/items/navarch_assay_lot?filter[${c}]=${s}&filter[${g}]=Inturn&filter[${u}][_null]=true`,{params:{fields:[$,b,A]}});if(0===Z.data.data.length)throw new Error(`No Inturn composite assay found for parcel #${n}`);const ee=Z.data.data.map((e=>e.commodity)).filter(((e,t,a)=>a.indexOf(e)===t));console.log(`commodities: ${ee}`);const te=await d.get(`/items/${U}`,{params:{fields:["name","code"],filter:{code:{_in:ee}}}});console.log(`commodity mapping response: ${JSON.stringify(te.data.data)}`);const ae=te.data.data.reduce(((e,t)=>(e[t.code]=t.name,e)),{}),ne=Z.data.data.map((e=>({commodity_name:ae[e[$]],analytical_assay:e[b],assay_uom:e[A]}))),oe=function(e){if(console.log("[evaluateWeightData]"),0===e.length)throw new Error("No weight lots found");const t=L(e,"dry_weight"),a=L(e,"wet_weight");return{dry_weight_uom:Q(e,"dry_weight_uom"),wet_weight_uom:Q(e,"wet_weight_uom"),dry_weight:t,wet_weight:a,moisture:(a-t)/a*100}}((await d.get(`/items/navarch_weight_lot?filter[${c}]=${X}&filter[${g}]=Inturn&sort[]=${u}`,{params:{fields:["dry_weight","wet_weight","wet_weight_uom","dry_weight_uom"]}})).data.data),ie=o.data.data[h];let re;ie&&(re=await d.get(`/items/navarch_vessel/${ie}`,{params:{fields:[S]}}));const se=(await d.get("/items/navarch_company",{params:{fields:[x,N,k,D,O,P,T,W,E,G,"email",I,J,j]}})).data.data,de=se[x],le=(await d.get(`/items/${F}/${se[E]}`,{params:{fields:[V]}})).data.data[V],ce=se[G],ue=se[k],ge=se[D]?`,\n${se[D]}`:"",me=se[O]?`,\n${se[O]}`:"",_e=se[P]?`,\n${se[P]}`:"",pe=await d.get(`/items/${F}/${se[W]}`,{params:{fields:[R]}}),ye=pe.data.data[R]?`, ${pe.data.data[R]}`:"",fe=`${ue}${ge}${me}${se[T]?` ${se[T]}`:""}${_e}${ye}`,he={signatoryName:se[I],signatoryTitle:se[J],signature:se[j],company:de},ve=await d.get(`/items/navarch_counterparty/${o.data.data[_]}`,{params:{fields:[C]}}),we=await d.get(`/items/${B}/${o.data.data[v]}`,{params:{fields:[M,q]}}),$e=await d.get(`/items/${B}/${o.data.data[w]}`,{params:{fields:[M,q]}}),be=o.data.data[m],Ae=(await d.get(`/items/navarch_commodity_in_contract?filter[${m}]=${be}&filter[primary_commodity]=true`,{params:{fields:[z]}})).data.data[0][z],Ce=null!=(e=(await d.get(`/items/${U}/${Ae}`,{params:{fields:[Y]}})).data.data[Y])?e:"",Se={invoice_type:l.value.invoice_type,company_logo:null!=(t=se[N])?t:void 0,seller:de,seller_address:fe,seller_phone_number:`+${le} ${ce}`,buyer:ve.data.data[C],vessel:re?re.data.data[S]:"N/A",contract_ref:`${o.data.data[m]}`,bl_date:K(new Date(o.data.data[f])),port_of_loading:`${we.data.data[M]}, ${we.data.data[q]}`,port_of_discharge:`${$e.data.data[M]}, ${$e.data.data[q]}`,commodity_name:Ce,wet_weight:oe.wet_weight,wet_weight_uom:oe.wet_weight_uom,dry_weight:oe.dry_weight,dry_weight_uom:oe.dry_weight_uom,moisture:oe.moisture,moisture_uom:"%",assays:ne,signatory:he},xe=await d.post("/generate/weight-and-assay-cert",Se);if(200!==xe.status)return console.log(`[generateProvWeightAndAssay] invoice response status: ${xe.status}`),i.value=xe.data,void(r.value=!1);const Ne=xe.data;a("input",{...Se,doc_name:Ne}),r.value=!1,H(Ne)}catch(e){console.error("[generateProvWeightAndAssay] error=",e),i.value=e,r.value=!1}},isCopying:s,copy:async function(){s.value=!0;const{id:e,user_created:t,date_created:a,user_updated:n,date_updated:o,weight_and_assay_cert:r,...c}=l.value;console.log(`[weight & assay::copy] requestBody=${JSON.stringify(c)}`);const u=await d.post("/items/navarch_weight_and_assay_cert",c);if(200!==u.status)return console.log(`[weight & assay::copy] copy response status: ${u.status}`),void(i.value=`Failed to duplicate weight & assay with status ${u.status}`);s.value=!1,window.open(`/admin/content/navarch_weight_and_assay_cert/${u.data.data.id}`)},viewPdf:H};function H(e){const a=null!=e?e:t.value.doc_name;console.log(`[viewPdf] doc name: ${a}`);const n=`/display-doc?docname=${encodeURIComponent(`${a}.pdf`)}`;window.open(n)}function K(e){const t=e.getDate(),a=e.getMonth(),n=e.getFullYear();return`${t} ${["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"][a]} ${n}`}function L(e,t){return console.log("[evaluateAggregateValue]"),e.reduce(((e,a)=>{var n;return e+(null!=(n=a[t.toString()])?n:0)}),0)}function Q(e,t){if(console.log("[getFirstValueAsSharedValue]"),0!==e.length)return console.log(`lots[0][${t.toString()}]=${e[0][t.toString()]}`),e[0][t.toString()]}}});const y={key:0},f={key:1};var h=[],v=[];!function(e,t){if(e&&"undefined"!=typeof document){var a,n=!0===t.prepend?"prepend":"append",o=!0===t.singleTag,i="string"==typeof t.container?document.querySelector(t.container):document.getElementsByTagName("head")[0];if(o){var r=h.indexOf(i);-1===r&&(r=h.push(i)-1,v[r]={}),a=v[r]&&v[r][n]?v[r][n]:v[r][n]=s()}else a=s();65279===e.charCodeAt(0)&&(e=e.substring(1)),a.styleSheet?a.styleSheet.cssText+=e:a.appendChild(document.createTextNode(e))}function s(){var e=document.createElement("style");if(e.setAttribute("type","text/css"),t.attributes)for(var a=Object.keys(t.attributes),o=0;o<a.length;o++)e.setAttribute(a[o],t.attributes[a[o]]);var r="prepend"===n?"afterbegin":"beforeend";return i.insertAdjacentElement(r,e),e}}(".margin-top-16px[data-v-64969d30] {\n  margin-top: 16px;\n}",{}),p.render=function(e,t,a,n,o,p){const h=i("v-button"),v=i("v-notice");return r(),s(d,null,[l(' <input :value="value" @input="handleChange($event.target.value)" /> '),l(" create a button only interface for Directus"),e.value?(r(),s("div",f,[c(h,{onClick:t[1]||(t[1]=()=>e.viewPdf())},{default:u((()=>[g("View Weight & Assay Cert ")])),_:1})])):(r(),s("div",y,[c(h,{onClick:t[0]||(t[0]=()=>e.generatePdf()),loading:e.isGeneraingDoc},{default:u((()=>[g("Generate Weight & Assay Cert")])),_:1},8,["loading"]),e.failureReason?(r(),m(v,{key:0},{default:u((()=>[g(_(e.failureReason),1)])),_:1})):l("v-if",!0)])),c(h,{class:"margin-top-16px",onClick:t[2]||(t[2]=()=>e.copy()),loading:e.isCopying},{default:u((()=>[g("Copy")])),_:1},8,["loading"])],64)},p.__scopeId="data-v-64969d30",p.__file="src/interface.vue";var w=t({id:"navarch-weight-n-assay-generator",name:"Weight & Assay Cert Generator",icon:"receipt_long",description:"This is a custom interface for Navarch's Weight & Assay Certificate Generator Button.",component:p,options:null,types:["json"],group:"standard"});export{w as default};
