import{useApi as e,defineInterface as t}from"@directus/extensions-sdk";import{defineComponent as a,ref as n,inject as i,resolveComponent as o,openBlock as r,createElementBlock as s,Fragment as d,createCommentVNode as l,createVNode as c,withCtx as u,createTextVNode as g,createBlock as m,toDisplayString as _}from"vue";var p=a({props:{value:{type:Object,default:null}},emits:["input"],setup(t,{emit:a}){const o=n(""),r=n(!1),s=n(!1),d=e(),l=i("values",n({})),c="foreign_key",u="lot_number",g="method",m="contract",_="counterparty",p="assay_results",y="weight_result",f="bl_date",h="vessel",v="origin",w="destination",$="commodity",b="final_assay",A="assay_uom",C="name",S="name",x="name",k="line_1",N="line_2",D="city",O="state",P="country",W="zip",T="phone_code",j="phone_number",G="signatory_name",J="signatory_title",E="signature",F="navarch_country",I="name",R="phone_code",V="navarch_world_port",B="port_name",M="country",q="commodity",z="navarch_commodity",U="name";return{isGeneraingDoc:r,failureReason:o,generatePdf:async function(){var e;o.value="",r.value=!0;try{const t=l.value.parcel,n=await d.get(`/items/navarch_parcel/${t}`,{params:{fields:[p,y,m,_,"actual_arrival_date",f,"estimated_shipment_date",h,v,w]}}),i=n.data.data[p],s=n.data.data[y],Q=await d.get(`/items/navarch_assay_lot?filter[${c}]=${i}&filter[${g}]=Inturn&filter[${u}][_null]=true`,{params:{fields:[$,b,A]}}),X=Q.data.data.map((e=>e.commodity)).filter(((e,t,a)=>a.indexOf(e)===t)),Z=X.map(((e,t)=>`filter[_or][${t}][code]=${e}`)).join("&"),ee=await d.get(`/items/${z}?${Z}`,{params:{fields:["name","code"]}});console.log(`commodity mapping response: ${JSON.stringify(ee.data.data)}`);const te=ee.data.data.reduce(((e,t)=>(e[t.code]=t.name,e)),{}),ae=Q.data.data.map((e=>({commodity_name:te[e[$]],analytical_assay:e[b],assay_uom:e[A]}))),ne=function(e){if(console.log("[evaluateWeightData]"),0===e.length)throw new Error("No weight lots found");const t=K(e,"dry_weight"),a=K(e,"wet_weight");return{dry_weight_uom:L(e,"dry_weight_uom"),wet_weight_uom:L(e,"wet_weight_uom"),dry_weight:t,wet_weight:a,moisture:(a-t)/a*100}}((await d.get(`/items/navarch_weight_lot?filter[${c}]=${s}&filter[${g}]=Inturn&sort[]=${u}`,{params:{fields:["dry_weight","wet_weight","wet_weight_uom","dry_weight_uom"]}})).data.data),ie=n.data.data[h];let oe;ie&&(oe=await d.get(`/items/navarch_vessel/${ie}`,{params:{fields:[S]}}));const re=(await d.get("/items/navarch_company",{params:{fields:[x,k,N,D,O,W,P,T,j,"email",G,J,E]}})).data.data,se=re[x],de=(await d.get(`/items/${F}/${re[T]}`,{params:{fields:[R]}})).data.data[R],le=re[j],ce=re[k],ue=re[N]?`,\n${re[N]}`:"",ge=re[D]?`,\n${re[D]}`:"",me=re[O]?`,\n${re[O]}`:"",_e=await d.get(`/items/${F}/${re[P]}`,{params:{fields:[I]}}),pe=_e.data.data[I]?`, ${_e.data.data[I]}`:"",ye=`${ce}${ue}${ge}${re[W]?` ${re[W]}`:""}${me}${pe}`,fe={signatoryName:re[G],signatoryTitle:re[J],signature:re[E],company:se},he=await d.get(`/items/navarch_counterparty/${n.data.data[_]}`,{params:{fields:[C]}}),ve=await d.get(`/items/${V}/${n.data.data[v]}`,{params:{fields:[B,M]}}),we=await d.get(`/items/${V}/${n.data.data[w]}`,{params:{fields:[B,M]}}),$e=n.data.data[m],be=(await d.get(`/items/navarch_commodity_in_contract?filter[${m}]=${$e}&filter[primary_commodity]=true`,{params:{fields:[q]}})).data.data[0][q],Ae=null!=(e=(await d.get(`/items/${z}/${be}`,{params:{fields:[U]}})).data.data[U])?e:"",Ce={invoice_type:l.value.invoice_type,seller:se,seller_address:ye,seller_phone_number:`+${de} ${le}`,buyer:he.data.data[C],vessel:oe?oe.data.data[S]:"N/A",contract_ref:`${n.data.data[m]}`,bl_date:H(new Date(n.data.data[f])),port_of_loading:`${ve.data.data[B]}, ${ve.data.data[M]}`,port_of_discharge:`${we.data.data[B]}, ${we.data.data[M]}`,commodity_name:Ae,wet_weight:ne.wet_weight,wet_weight_uom:ne.wet_weight_uom,dry_weight:ne.dry_weight,dry_weight_uom:ne.dry_weight_uom,moisture:ne.moisture,moisture_uom:"%",assays:ae,signatory:fe},Se=await d.post("/generate/weight-and-assay-cert",Ce);if(200!==Se.status)return console.log(`[generateProvWeightAndAssay] invoice response status: ${Se.status}`),o.value=Se.data,void(r.value=!1);const xe=Se.data;a("input",{...Ce,doc_name:xe}),r.value=!1,Y(xe)}catch(e){console.error("[generateProvWeightAndAssay] error=",e),o.value=e,r.value=!1}},isCopying:s,copy:async function(){s.value=!0;const{id:e,user_created:t,date_created:a,user_updated:n,date_updated:i,weight_and_assay_cert:r,...c}=l.value;console.log(`[weight & assay::copy] requestBody=${JSON.stringify(c)}`);const u=await d.post("/items/navarch_weight_and_assay_cert",c);if(200!==u.status)return console.log(`[weight & assay::copy] copy response status: ${u.status}`),void(o.value=`Failed to duplicate weight & assay with status ${u.status}`);s.value=!1,window.open(`/admin/content/navarch_weight_and_assay_cert/${u.data.data.id}`)},viewPdf:Y};function Y(e){const a=null!=e?e:t.value.doc_name;console.log(`[viewPdf] doc name: ${a}`);const n=`/display-doc?docname=${encodeURIComponent(`${a}.pdf`)}`;window.open(n)}function H(e){const t=e.getDate(),a=e.getMonth(),n=e.getFullYear();return`${t} ${["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"][a]} ${n}`}function K(e,t){return console.log("[evaluateAggregateValue]"),e.reduce(((e,a)=>{var n;return e+(null!=(n=a[t.toString()])?n:0)}),0)}function L(e,t){if(console.log("[getFirstValueAsSharedValue]"),0!==e.length)return console.log(`lots[0][${t.toString()}]=${e[0][t.toString()]}`),e[0][t.toString()]}}});const y={key:0},f={key:1};var h=[],v=[];!function(e,t){if(e&&"undefined"!=typeof document){var a,n=!0===t.prepend?"prepend":"append",i=!0===t.singleTag,o="string"==typeof t.container?document.querySelector(t.container):document.getElementsByTagName("head")[0];if(i){var r=h.indexOf(o);-1===r&&(r=h.push(o)-1,v[r]={}),a=v[r]&&v[r][n]?v[r][n]:v[r][n]=s()}else a=s();65279===e.charCodeAt(0)&&(e=e.substring(1)),a.styleSheet?a.styleSheet.cssText+=e:a.appendChild(document.createTextNode(e))}function s(){var e=document.createElement("style");if(e.setAttribute("type","text/css"),t.attributes)for(var a=Object.keys(t.attributes),i=0;i<a.length;i++)e.setAttribute(a[i],t.attributes[a[i]]);var r="prepend"===n?"afterbegin":"beforeend";return o.insertAdjacentElement(r,e),e}}(".margin-top-16px[data-v-64969d30] {\n  margin-top: 16px;\n}",{}),p.render=function(e,t,a,n,i,p){const h=o("v-button"),v=o("v-notice");return r(),s(d,null,[l(' <input :value="value" @input="handleChange($event.target.value)" /> '),l(" create a button only interface for Directus"),e.value?(r(),s("div",f,[c(h,{onClick:t[1]||(t[1]=()=>e.viewPdf())},{default:u((()=>[g("View Weight & Assay Cert ")])),_:1})])):(r(),s("div",y,[c(h,{onClick:t[0]||(t[0]=()=>e.generatePdf()),loading:e.isGeneraingDoc},{default:u((()=>[g("Generate Weight & Assay Cert")])),_:1},8,["loading"]),e.failureReason?(r(),m(v,{key:0},{default:u((()=>[g(_(e.failureReason),1)])),_:1})):l("v-if",!0)])),c(h,{class:"margin-top-16px",onClick:t[2]||(t[2]=()=>e.copy()),loading:e.isCopying},{default:u((()=>[g("Copy")])),_:1},8,["loading"])],64)},p.__scopeId="data-v-64969d30",p.__file="src/interface.vue";var w=t({id:"navarch-weight-n-assay-generator",name:"Weight & Assay Cert Generator",icon:"receipt_long",description:"This is a custom interface for Navarch's Weight & Assay Certificate Generator Button.",component:p,options:null,types:["json"],group:"standard"});export{w as default};
