import{defineInterface as e}from"@directus/extensions-sdk";import{defineComponent as t,inject as a,ref as n,watch as i,resolveComponent as u,openBlock as l,createBlock as r,withCtx as o,createTextVNode as s,toDisplayString as c}from"vue";var m=(e=>(e.ASSAY="assay",e.CHARGE="charge",e.PENALTY="penalty",e))(m||{}),f=(e=>(e.ABOVE="above the lower threshold, plus",e.BELOW="below the upper threshold, minus",e))(f||{}),y=(e=>(e.BRACKET="Bracket",e.MAX_CAP="Maximum Cap",e.MIN_DEDUCTION="Minimum Deduction",e))(y||{}),h=(e=>(e.PERCENTAGE="Percentage",e.FRACTIONAL="Fractional",e))(h||{}),v=t({props:{value:{type:String,default:null},formType:{type:String,default:null}},emits:["input"],setup(e,{emit:t}){const u=a("values",n({})),l=n("fill in all necessary information for a description to be generated");e.formType;const r="lower_threshold",o="lower_threshold_inclusive",s="upper_threshold",c="upper_threshold_inclusive",v="bracket_type",$="rate",p="rate_type",d="initial_adjustment",A="initial_adjustment_uom",_="minimum_deduction",g="minimum_deduction_uom",E="maximum_cap",w="maximum_cap_uom",C="base_treatment_charge",N="use_btc",P="escalator_reference",b="for_every_unit",T="rate",D="no_penalty",S="escalator_reference",R="rate",U=[r,o,s,c];let k=[];switch(e.formType){case"assay":k=U.concat([v,$,p,d,A,_,g,E,w]);break;case"charge":k=U.concat([C,N,P,b,T]);break;case"penalty":k=U.concat([D,S,"for_every_unit",R])}k.forEach((e=>{i((()=>u.value[e]),B)}));const x=n(""),M=n("");function B(){switch(e.formType){case m.ASSAY:x.value=G(u.value[r],!!u.value[o],u.value[s],!!u.value[c],"Commodity Analytical Assay"),M.value=function(e,t,a,n,i,u,l,r,o){switch(e){case y.BRACKET:if(O(t)&&I(n))return`Pay ${t}${a===h.PERCENTAGE?"%":""} of the amount`;if(O(n,t))return`Deduct ${n}${null!=i?i:" assay unit(s)"} from the Commodity Analytical Assay, then pay ${t}${a===h.PERCENTAGE?"%":""} of the amount`;case y.MAX_CAP:if(O(t,r)&&I(n))return`Pay ${t}${a===h.PERCENTAGE?"%":""} of the amount with a maximum cap of ${r}${null!=o?o:" assay unit(s)"}`;if(O(t,r,n))return`Deduct ${n}${null!=i?i:" assay unit(s)"} from the Commodity Analytical Assay, then pay ${t}${a===h.PERCENTAGE?"%":""} of the amount with a maximum cap of ${r}${null!=o?o:" assay unit(s)"}`;case y.MIN_DEDUCTION:if(O(t,u)&&I(n))return`Pay ${t}${a===h.PERCENTAGE?"%":""} of the amount with a minimum deduction of ${u}${null!=l?l:" assay unit(s)"}`;if(O(t,u,n))return`Deduct ${n}${null!=i?i:" assay unit(s)"} from the Commodity Analytical Assay, then pay ${t}${a===h.PERCENTAGE?"%":""} of the amount with a minimum deduction of ${u}${null!=l?l:" assay unit(s)"}`}return null}(u.value[v],u.value[$],u.value[p],u.value[d],u.value[A],u.value[_],u.value[g],u.value[E],u.value[w]),null!==x.value&&null!==M.value&&t("input",`${M.value}${x.value}`);break;case m.CHARGE:M.value=function(e,t,a,n,i,u,l,r,o){if(u){if(O(i))return`${L(i)} USD/(weight unit)${G(e,t,a,n,"Commodity Price Rate")}`}else if(I(l)&&(l=100),r===f.ABOVE){if(O(e,o,l))return`Plus ${L(o)} USD/(weight unit) to ${L(i)} USD/(weight unit) for every ${L(l)}USD/(weight unit) above ${e} USD/(weight unit)`}else if(r===f.BELOW&&O(a,o,l))return`Deduct ${L(o)} USD/(weight unit) from ${L(i)} USD/(weight unit) for every ${L(l)}USD/(weight unit) below ${a} USD/(weight unit)`;return null}(u.value[r],!!u.value[o],u.value[s],!!u.value[c],u.value[C],u.value[N],u.value[P],u.value[b],u.value[T]),null!==M.value&&t("input",`${M.value}`);break;case m.PENALTY:console.log(`Penalty form inputs=${JSON.stringify(u.value)}`),M.value=function(e,t,a,n,i,u,l){if(i)return`No penalty applied${G(e,t,a,n,"Commodity Analaytical Assay")}`;if(I(u)&&(u=100),O(e,l,u)&&I(a))return`Penalty of ${L(l)} USD/(weight unit) for every ${L(u)} assay unit above ${e} assay unit(s)`;if(O(e,a,l,u))return`Penalty of ${L(l)} USD/(weight unit) for every ${L(u)} assay unit between ${e} assay unit(s)${t?" (incl.)":""} and ${a} assay unit(s)${n?" (incl.)":""}`;return null}(u.value[r],!!u.value[o],u.value[s],!!u.value[c],u.value[D],u.value[S],u.value[R]),null!==M.value&&t("input",`${M.value}`)}}return{handleChange:function(e){t("input",e)},tipMessage:l};function G(e,t,a,n,i){let u=null;return 0===e&&I(a)?u="":0===e&&O(a)?u=` when the ${i} is less than ${a} assay unit(s)${n?" (incl.)":""}`:O(e,a)?u=` when the ${i} is between ${e} assay unit(s)${t?" (incl.)":""} and ${a}${n?" (incl.)":""}`:O(e)&&I(a)&&(u=` when the ${i} is greater than ${e} assay unit(s)${t?" (incl.)":""}`),u}function O(...e){return e.every((e=>null!=e&&!isNaN(e)))}function I(e){return null==e||isNaN(e)}function L(e,t=2,a=!0){if(console.log(`[formatNumber] with number value=${e}`),isNaN(e)||null===e)return"-";const n=Math.round(e*Math.pow(10,t))/Math.pow(10,t),[i,u]=n.toString().split(".");if(!i)return"";const l=i.replace(/\B(?=(\d{3})+(?!\d))/g,",");if(!u&&!a)return l;return`${l}.${(null!=u?u:"").padEnd(t,"0")}`}}});v.render=function(e,t,a,n,i,m){const f=u("v-notice");return l(),r(f,{icon:"description"},{default:o((()=>[s(c(e.value??"Note: fill in all necessary information for a description to be generated"),1)])),_:1})},v.__file="src/interface.vue";var $=e({id:"navarch-bracket-description",name:"Navarch Bracket Description",icon:"data_info_alert",description:"To describe bracket for Penalty, Refining Charge, Treatment Charge, & Payable Rates",component:v,options:()=>[{field:"formType",name:"Form Type",type:"string",meta:{interface:"select-dropdown",options:{allowNone:!1,choices:[{text:"Payable Assay Rate",value:"assay"},{text:"Treatment/Refining Charge",value:"charge"},{text:"Penalty Rate",value:"penalty"}]}}}],types:["string"]});export{$ as default};
