import{defineInterface as e}from"@directus/extensions-sdk";import{defineComponent as t,inject as a,ref as n,watch as i,resolveComponent as u,openBlock as l,createBlock as r,withCtx as o,createTextVNode as s,toDisplayString as c}from"vue";var f=(e=>(e.ASSAY="assay",e.CHARGE="charge",e.PENALTY="penalty",e))(f||{}),m=(e=>(e.ABOVE="above the lower threshold, plus",e.BELOW="below the upper threshold, minus",e))(m||{}),y=(e=>(e.BRACKET="Bracket",e.MAX_CAP="Maximum Cap",e.MIN_DEDUCTION="Minimum Deduction",e))(y||{}),$=(e=>(e.PERCENTAGE="Percentage",e.FRACTIONAL="Fractional",e))($||{}),h=t({props:{value:{type:String,default:null},formType:{type:String,default:null}},emits:["input"],setup(e,{emit:t}){const u=a("values",n({})),l=n("fill in all necessary information for a description to be generated");e.formType;const r="lower_threshold",o="lower_threshold_inclusive",s="upper_threshold",c="upper_threshold_inclusive",h="bracket_type",v="rate",p="rate_type",d="initial_adjustment",A="initial_adjustment_uom",_="minimum_deduction",g="minimum_deduction_uom",E="maximum_cap",w="maximum_cap_uom",C="base_treatment_charge",b="base_charge_adjustment",N="use_btc",P="escalator_reference",T="for_every_unit",D="rate",R="no_penalty",S="escalator_reference",U="rate",M=[r,o,s,c];let k=[];switch(e.formType){case"assay":k=M.concat([h,v,p,d,A,_,g,E,w]);break;case"charge":k=M.concat([C,b,N,P,T,D]);break;case"penalty":k=M.concat([R,S,"for_every_unit",U])}k.forEach((e=>{i((()=>u.value[e]),G)}));const x=n(""),B=n("");function G(){switch(e.formType){case f.ASSAY:x.value=O(u.value[r],!!u.value[o],u.value[s],!!u.value[c],"Commodity Analytical Assay"),B.value=function(e,t,a,n,i,u,l,r,o){switch(e){case y.BRACKET:if(I(t)&&L(n))return`Pay ${t}${a===$.PERCENTAGE?"%":""} of the amount`;if(I(n,t))return`Deduct ${n}${null!=i?i:" assay unit(s)"} from the Commodity Analytical Assay, then pay ${t}${a===$.PERCENTAGE?"%":""} of the amount`;case y.MAX_CAP:if(I(t,r)&&L(n))return`Pay ${t}${a===$.PERCENTAGE?"%":""} of the amount with a maximum cap of ${r}${null!=o?o:" assay unit(s)"}`;if(I(t,r,n))return`Deduct ${n}${null!=i?i:" assay unit(s)"} from the Commodity Analytical Assay, then pay ${t}${a===$.PERCENTAGE?"%":""} of the amount with a maximum cap of ${r}${null!=o?o:" assay unit(s)"}`;case y.MIN_DEDUCTION:if(I(t,u)&&L(n))return`Pay ${t}${a===$.PERCENTAGE?"%":""} of the amount with a minimum deduction of ${u}${null!=l?l:" assay unit(s)"}`;if(I(t,u,n))return`Deduct ${n}${null!=i?i:" assay unit(s)"} from the Commodity Analytical Assay, then pay ${t}${a===$.PERCENTAGE?"%":""} of the amount with a minimum deduction of ${u}${null!=l?l:" assay unit(s)"}`}return null}(u.value[h],u.value[v],u.value[p],u.value[d],u.value[A],u.value[_],u.value[g],u.value[E],u.value[w]),null!==x.value&&null!==B.value&&t("input",`${B.value}${x.value}`);break;case f.CHARGE:B.value=function(e,t,a,n,i,u,l,r,o,s){const c=u?u>0?` plus ${W(u)} USD/(weight unit)`:` minus ${W(Math.abs(u))} USD/(weight unit)`:"";if(l){if(I(i))return`${W(i)} USD/(weight unit)${c} ${O(e,t,a,n,"Commodity Price Rate")}`}else if(L(r)&&(r=100),o===m.ABOVE){if(I(e,s,r))return`With a base rate of ${W(i)} USD/(weight unit)${c}, plus ${W(s)} USD/(weight unit) for every ${W(r)} reference unit above ${e} reference unit`}else if(o===m.BELOW&&I(a,s,r))return`With a base rate of ${W(i)} USD/(weight unit)${c}, deduct ${W(s)} USD/(weight unit) for every ${W(r)} reference unit below ${a} reference unit`;return null}(u.value[r],!!u.value[o],u.value[s],!!u.value[c],u.value[C],u.value[b],u.value[N],u.value[P],u.value[T],u.value[D]),null!==B.value&&t("input",`${B.value}`);break;case f.PENALTY:console.log(`Penalty form inputs=${JSON.stringify(u.value)}`),B.value=function(e,t,a,n,i,u,l){if(i)return`No penalty applied${O(e,t,a,n,"Commodity Analytical Assay")}`;if(L(u)&&(u=100),I(e,l,u)&&L(a))return`Penalty of ${W(l)} USD/(weight unit) for every ${W(u)} assay unit above ${e} assay unit(s)`;if(I(e,a,l,u))return`Penalty of ${W(l)} USD/(weight unit) for every ${W(u)} assay unit between ${e} assay unit(s)${t?" (incl.)":""} and ${a} assay unit(s)${n?" (incl.)":""}`;return null}(u.value[r],!!u.value[o],u.value[s],!!u.value[c],u.value[R],u.value[S],u.value[U]),null!==B.value&&t("input",`${B.value}`)}}return{handleChange:function(e){t("input",e)},tipMessage:l};function O(e,t,a,n,i){let u=null;const l="Commodity Analytical Assay"===i?"assay unit(s)":"USD/(weight unit)";return 0===e&&L(a)?u="":0===e&&I(a)?u=` when the ${i} is less than ${a} ${l}${n?" (incl.)":""}`:I(e,a)?u=` when the ${i} is between ${e} ${l}${t?" (incl.)":""} and ${a} ${l}${n?" (incl.)":""}`:I(e)&&L(a)&&(u=` when the ${i} is greater than ${e} ${l}${t?" (incl.)":""}`),u}function I(...e){return e.every((e=>null!=e&&!isNaN(e)))}function L(e){return null==e||isNaN(e)}function W(e,t=2,a=!0){if(console.log(`[formatNumber] with number value=${e}`),isNaN(e)||null===e)return"-";const n=Math.round(e*Math.pow(10,t))/Math.pow(10,t),[i,u]=n.toString().split(".");if(!i)return"";const l=i.replace(/\B(?=(\d{3})+(?!\d))/g,",");if(!u&&!a)return l;return`${l}.${(null!=u?u:"").padEnd(t,"0")}`}}});h.render=function(e,t,a,n,i,f){const m=u("v-notice");return l(),r(m,{icon:"description"},{default:o((()=>[s(c(e.value??"Note: fill in all necessary information for a description to be generated"),1)])),_:1})},h.__file="src/interface.vue";var v=e({id:"navarch-bracket-description",name:"Navarch Bracket Description",icon:"data_info_alert",description:"To describe bracket for Penalty, Refining Charge, Treatment Charge, & Payable Rates",component:h,options:()=>[{field:"formType",name:"Form Type",type:"string",meta:{interface:"select-dropdown",options:{allowNone:!1,choices:[{text:"Payable Assay Rate",value:"assay"},{text:"Treatment/Refining Charge",value:"charge"},{text:"Penalty Rate",value:"penalty"}]}}}],types:["string"]});export{v as default};
