import{useApi as e,defineInterface as a}from"@directus/extensions-sdk";import{defineComponent as t,ref as n,inject as o,resolveComponent as i,openBlock as r,createElementBlock as l,Fragment as s,createCommentVNode as c,createVNode as d,withCtx as u,createTextVNode as v,createBlock as p,toDisplayString as f}from"vue";var g=(e=>(e[e.Advance=0]="Advance",e[e["Second Advance"]=1]="Second Advance",e[e["Third Advance"]=2]="Third Advance",e[e["Fourth Advance"]=3]="Fourth Advance",e[e.Provisional=4]="Provisional",e[e["Second Provisional"]=5]="Second Provisional",e[e["Third Provisional"]=6]="Third Provisional",e[e["Fourth Provisional"]=7]="Fourth Provisional",e[e.Final=8]="Final",e))(g||{}),m=t({props:{value:{type:Object,default:null}},emits:["input"],setup(a,{emit:t}){const i=n(""),r=n(!1),l=n(""),s=n(""),c=e(),d=o("values",n({})),u="id",v="navarch_invoices",p="id",f="parcel",m="invoice_type",y="invoice",h="navarch_parcel",$="invoice_date",_="contract",w="mine",D="name",b="code",P="codename",F="navarch_unit",E="symbol",C="conversionToGram";return{isGeneraingDoc:r,failureReason:i,generatePdf:async function(){var e;i.value="",r.value=!0;try{const a=d.value.start_date,n=d.value.end_date,o=d.value.filter_date,_=d.value.invoice_type;if(!a)return i.value="Start date not selected",void(r.value=!1);if(!n)return i.value="End date not selected",void(r.value=!1);if(!o)return i.value="Filter date not selected",void(r.value=!1);if(!_)return i.value="Invoice type not selected",void(r.value=!1);let w="";switch(o){case"Arrival Date":w="actual_arrival_date";break;case"Invoice Date":w=$;break;case"B/L Date":w="bl_date";break;case"Parcel Finalisation Date":w="parcel_finalisation_date";break;default:return i.value="Invalid filter date",void(r.value=!1)}const F=await c.get(`/items/${h}?filter[_and][0][_and][0][${w}][_between][0]=${a}&filter[_and][0][_and][0][${w}][_between][1]=${n}&filter[_and][0][_and][1][${$}][_nnull]=true&sort=${"First Issued Invoice"===_?"":"-"}${$}`,{params:{fields:[u,$]}});if(200!==F.status)return console.error(`[generateLoadportDisportComparisonDoc] parcelResponce status: ${F.status}`),i.value="Failed to fetch parcels",void(r.value=!1);if(0===F.data.data.length)return i.value=`No parcels found within the selected date range of ${a} to ${n} with a non-null Invoice Date`,void(r.value=!1);const E=F.data.data[0][u],C=(await c.get(`/items/${v}?filter[${f}]=${E}&filter[_and][0][${y}][_nnull]=true`,{params:{fields:[p,m,y]}})).data.data.map((e=>e[m]));let S=null;if("First Issued Invoice"===_)S=C.reduce(((e,a)=>(console.debug(`[generateLoadportDisportComparisonDoc] prev=${e}, curr=${g[a]}`),g[a]<e?g[a]:e)),0);else{if("Latest Issued Invoice"!==_)return i.value="Invalid invoice type",void(r.value=!1);S=C.reduce(((e,a)=>(console.debug(`[generateLoadportDisportComparisonDoc] prev=${e}, curr=${g[a]}`),g[a]>e?g[a]:e)),0)}if(null===S)return i.value=`No invoices found for parcel with id ${E} with an issued invoice type of ${_}`,void(r.value=!1);const T=F.data.data.map((e=>e[u])),U=`/items/${v}?filter[_and][0][${f}][_in]=${T.join(",")}&filter[_and][1][${m}]=${g[S]}&filter[_and][1][${y}][_nnull]=true&sort=-date_updated`.replace(/ /g,"%20"),L=await c.get(U,{params:{fields:[p,f,m,y]}});if(console.log(`[generatePenaltyElementsDoc] invoice ids fetched=${L.data.data.map((e=>e[p])).join(", ")}`),200!==L.status)return console.error(`[generateLoadportDisportComparisonDoc] invoicesResponse status: ${L.status}`),i.value="Failed to fetch invoices",void(r.value=!1);if(0===L.data.data.length)return i.value=`No invoices found for parcels with invoice type ${g[S]}`,void(r.value=!1);const V=L.data.data.filter(((e,a,t)=>{const n=`${e[f]}_${e[m]}`;return a===t.findIndex((e=>`${e[f]}_${e[m]}`===n))})),W=V.reduce(((e,a)=>{const t=a[y];""===l.value&&(l.value=t.dry_weight_uom);const n=t.penalties;if(!n||!n.penalties||0===n.penalties.length)return e;""===s.value&&(console.debug(`[generatePenaltyElementsDoc] penalties=${JSON.stringify(n)}`),s.value=`${t.currency}/${n.penalties[0].penalty_per_uom}`);const o=n.penalties.map((e=>e.commodity));return[...e,...o]}),[]).filter(((e,a,t)=>t.indexOf(e)===a));console.log(`[generatePenaltyElementsDoc] penalty commodities=${W.join(", ")}`);const j=W.map(((e,a)=>`filter[_or][${a}][${D}]=${e}`)).join("&").replace(/ /g,"%20"),x=await c.get(`/items/navarch_commodity?${j}`,{params:{fields:[D,b,"id"]}});console.log(`commodity mapping response: ${JSON.stringify(x.data.data)}`);const G=x.data.data.reduce(((e,a)=>(e[a[D]]={code:a[b],id:a.id},e)),{}),R=[];for(const e of V){const a=e[y].penalties;if(!a||!a.penalties)continue;const t=a.penalties,n=(await c.get(`/items/navarch_counterparty?filter[name]=${e[y].buyer}`,{params:{fields:[P]}})).data.data[0][P],o=e[y].dry_weight.replace(/,/g,""),i=await k(e[y].dry_weight_uom,l.value);console.log(`[generatePenaltyElementsDoc] dry weight conversion factor=${i}`),R.push({id:e[f],name:e[y].shipment_code,vessel:e[y].vessel,invoice_type:e.invoice_type,dry_weight:parseFloat(o)*i,penalties:await Promise.all(t.map((async a=>await N(a,n,e[f],G))))})}const J=V[0][y].currency,O={start_date:A(new Date(a)),end_date:A(new Date(n)),filter_date:o,invoice_type:_,parcels:R,dry_weight_uom:null==(e=l.value)?void 0:e.toUpperCase(),penalty_rate_uom:s.value,currency:J},M=await c.post("/generate/penalty-elements",O);if(200!==M.status)return console.log(`[generateLoadportDisportComparisonDoc] response status: ${M.status}`),i.value=M.data,void(r.value=!1);const B=M.data;t("input",{...O,doc_name:B}),r.value=!1,I(B)}catch(e){console.error("[generatePenaltyElements] error=",e),i.value=e,r.value=!1}},viewPdf:I};function I(e){const t=null!=e?e:a.value.doc_name;console.log(`[viewPdf] doc name: ${t}`);const n=`/display-doc?filepath=${encodeURIComponent(`/data/uploads/${t}.pdf`)}`;window.open(n)}async function N(e,a,t,n){const o=(await c.get(`/items/${h}/${t}`,{params:{fields:[_]}})).data.data[_];if(!o)throw new Error(`[generatePenalty] no contract found for parcel with id ${t}`);const i=await c.get(`/items/navarch_contract/${o}`,{params:{fields:[w]}});if(!i.data.data[w])throw new Error(`No mine found for contract with id ${o}`);const r=s.value.split("/")[1],l=await k(e.penalty_per_uom,r);return{mine:i.data.data[w],commodity_code:n[e.commodity].code,counterparty:a,assay:parseFloat(e.analytical_assay.replace(/,/g,"")),assay_uom:e.assay_uom,penalty_rate:parseFloat(e.final_penalty_rate.replace(/,/g,""))/l,penalty_amount:parseFloat(e.final_penalty.replace(/,/g,""))}}function A(e){const a=e.getDay(),t=e.getDate(),n=e.getMonth(),o=e.getFullYear();return`${["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"][a]}, ${["January","February","March","April","May","June","July","August","September","October","November","December"][n]} ${t}, ${o}`}async function k(e,a){if(e===a)return 1;const t=await c.get(`/items/${F}?filter[${E}]=${e}`,{params:{fields:[C]}});if(0===t.data.data.length||null===t.data.data[0][C]||void 0===t.data.data[0][C])throw new Error(`[getWeightUnitConversionValue] failed to get conversion value for source weight unit ${e}. Ensure that the symbol is correct and is a weight unit symbol`);const n=await c.get(`/items/${F}?filter[${E}]=${a}`,{params:{fields:[C]}});if(0===n.data.data.length||null===n.data.data[0][C]||void 0===n.data.data[0][C])throw new Error(`[getWeightUnitConversionValue] failed to get conversion value for the target weight unit ${a}. Ensure that the symbol is correct and is a weight unit symbol`);const o=parseFloat(t.data.data[0][C]);if(isNaN(o))throw new Error(`[getWeightUnitConversionValue] source weight unit ${e} conversion value=${o} is not a number`);const i=parseFloat(n.data.data[0][C]);if(isNaN(i))throw new Error(`[getWeightUnitConversionValue] target weight unit ${a} conversion value=${i} is not a number`);return console.log(`[getWeightUnitConversionValue] source weight unit=${e}, target weight unit=${a}, source weight unit conversion=${o}, target weight unit conversion=${i}`),console.log("[getWeightUnitConversionValue] conversion factor="+o/i),o/i}}});const y={key:0},h={key:1};m.render=function(e,a,t,n,o,g){const m=i("v-button"),$=i("v-notice");return r(),l(s,null,[c(' <input :value="value" @input="handleChange($event.target.value)" /> '),c(" create a button only interface for Directus"),e.value?(r(),l("div",h,[d(m,{class:"margin-top-16px",onClick:a[1]||(a[1]=()=>e.viewPdf())},{default:u((()=>[v("View Penalty Elements Doc ")])),_:1})])):(r(),l("div",y,[d(m,{class:"margin-top-16px",onClick:a[0]||(a[0]=()=>e.generatePdf()),loading:e.isGeneraingDoc},{default:u((()=>[v("Generate Penalty Elements Doc")])),_:1},8,["loading"]),e.failureReason?(r(),p($,{key:0},{default:u((()=>[v(f(e.failureReason),1)])),_:1})):c("v-if",!0)]))],2112)},m.__file="src/interface.vue";var $=a({id:"navarch-penalty-elements-generator",name:"Penalty Elements Doc Generator",icon:"receipt_long",description:"This is a custom interface for Navarch's Penalty Elements Document Generator Button.",component:m,options:null,types:["json"],group:"standard"});export{$ as default};
