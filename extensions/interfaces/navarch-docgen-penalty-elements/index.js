import{useApi as e,defineInterface as t}from"@directus/extensions-sdk";import{defineComponent as a,ref as n,inject as o,resolveComponent as i,openBlock as r,createElementBlock as s,Fragment as l,createCommentVNode as c,createVNode as d,withCtx as u,createTextVNode as p,createBlock as v,toDisplayString as g}from"vue";var m=(e=>(e[e.Advance=0]="Advance",e[e["Second Advance"]=1]="Second Advance",e[e["Third Advance"]=2]="Third Advance",e[e["Fourth Advance"]=3]="Fourth Advance",e[e.Provisional=4]="Provisional",e[e["Second Provisional"]=5]="Second Provisional",e[e["Third Provisional"]=6]="Third Provisional",e[e["Fourth Provisional"]=7]="Fourth Provisional",e[e.Final=8]="Final",e))(m||{}),f=a({props:{value:{type:Object,default:null}},emits:["input"],setup(t,{emit:a}){const i=n(""),r=n(!1),s=n(!1),l=n(""),c=n(""),d=e(),u=o("values",n({})),p="navarch_invoices",v="parcel",g="invoice_type",f="invoice_date",y="invoice",h="navarch_parcel",_="contract",w="mine",$="name",b="code",D="codename",P="navarch_unit",E="symbol",F="conversionToGram";return{isGeneraingDoc:r,failureReason:i,generatePdf:async function(){var e;i.value="",r.value=!0;try{const t=u.value.start_date,n=u.value.end_date,o=u.value.filter_date,s=u.value.invoice_type;if(!t)return i.value="Start date not selected",void(r.value=!1);if(!n)return i.value="End date not selected",void(r.value=!1);if(!o)return i.value="Filter date not selected",void(r.value=!1);if(!s)return i.value="Invoice type not selected",void(r.value=!1);let _="";switch(o){case"Arrival Date":_="actual_arrival_date";break;case"Invoice Date":_=f;break;case"B/L Date":_="bl_date";break;case"Parcel Finalisation Date":_="parcel_finalisation_date";break;default:return i.value="Invalid filter date",void(r.value=!1)}console.log(`[generatePenaltyElementsDoc] filter date=${_}`);const w={[y]:{_nnull:!0}};if(_===f)w[f]={_between:[t,n]};else{const e=await d.get(`/items/${h}`,{params:{filter:{_and:[{[_]:{_between:[t,n]}}]},fields:["id"]}});if(200!==e.status)return console.error(`[generateLoadportDisportComparisonDoc] parcelResponce status: ${e.status}`),i.value="Failed to fetch parcels",void(r.value=!1);if(0===e.data.data.length)return i.value=`No parcels found within the selected date range of ${t} to ${n} with a non-null Invoice Date`,void(r.value=!1);const a=e.data.data[0].id;w[v]={_in:a}}const P=(await d.get(`/items/${p}`,{params:{filter:w,fields:[v,g]}})).data.data.map((e=>({parcel:e[v],invoiceType:e[g]}))).reduce(((e,t)=>(e[t.parcel]||(e[t.parcel]=[]),e[t.parcel].push(t.invoiceType),e)),{});let E={};if("First Issued Invoice"===s)E=Object.keys(P).reduce(((e,t)=>{const a=P[t].reduce(((e,t)=>m[t]<e?m[t]:e),8);return e[t]=m[a],e}),{});else{if("Latest Issued Invoice"!==s)return i.value="Invalid invoice type",void(r.value=!1);E=Object.keys(P).reduce(((e,t)=>{const a=P[t].reduce(((e,t)=>m[t]>e?m[t]:e),0);return e[t]=m[a],e}),{})}console.log(`[generatePenaltyElementsDoc] invoice type parcel combo=${JSON.stringify(E)}`);const F={_or:Object.keys(E).map((e=>({_and:[{[v]:{_eq:e}},{[g]:{_eq:E[e]}},{[y]:{_nnull:!0}}]})))};console.log(`[generatePenaltyElementsDoc] invoice data filter=${JSON.stringify(F)}`);const A=await d.get(`/items/${p}`,{params:{filter:F,fields:["id",v,g,y]}});if(console.log(`[generatePenaltyElementsDoc] invoice ids fetched=${A.data.data.map((e=>e.id)).join(", ")}`),200!==A.status)return console.error(`[generateLoadportDisportComparisonDoc] invoicesResponse status: ${A.status}`),i.value="Failed to fetch invoices",void(r.value=!1);if(0===A.data.data.length)return i.value="No invoices found for parcels within the selected date range",void(r.value=!1);const T=A.data.data.reduce(((e,t)=>{const a=t[y];""===l.value&&(l.value=a.dry_weight_uom);const n=a.penalties;if(!n||!n.penalties||0===n.penalties.length)return e;""===c.value&&(console.debug(`[generatePenaltyElementsDoc] penalties=${JSON.stringify(n)}`),c.value=`${a.currency}/${n.penalties[0].penalty_per_uom}`);const o=n.penalties.map((e=>e.commodity));return[...e,...o]}),[]).filter(((e,t,a)=>a.indexOf(e)===t));console.log(`[generatePenaltyElementsDoc] penalty commodities=${T.join(", ")}`);const O=T.map(((e,t)=>`filter[_or][${t}][${$}]=${e}`)).join("&").replace(/ /g,"%20"),I=await d.get(`/items/navarch_commodity?${O}`,{params:{fields:[$,b,"id"]}});console.log(`commodity mapping response: ${JSON.stringify(I.data.data)}`);const j=I.data.data.reduce(((e,t)=>(e[t[$]]={code:t[b],id:t.id},e)),{}),x=[];for(const e of A.data.data){const t=e[y].penalties;if(!t||!t.penalties)continue;const a=t.penalties,n=(await d.get(`/items/navarch_counterparty?filter[name]=${e[y].buyer}`,{params:{fields:[D]}})).data.data[0][D],o=e[y].dry_weight.replace(/,/g,""),i=await k(e[y].dry_weight_uom,l.value);console.log(`[generatePenaltyElementsDoc] dry weight conversion factor=${i}`),x.push({id:e[v],name:e[y].shipment_code,vessel:e[y].vessel,invoice_type:e.invoice_type,dry_weight:parseFloat(o)*i,penalties:await Promise.all(a.map((async t=>await N(t,n,e[v],j))))})}const J=A.data.data[0][y].currency,U={start_date:S(new Date(t)),end_date:S(new Date(n)),filter_date:o,invoice_type:s,parcels:x,dry_weight_uom:null==(e=l.value)?void 0:e.toUpperCase(),penalty_rate_uom:c.value,currency:J},V=await d.post("/generate/penalty-elements",U);if(200!==V.status)return console.log(`[generateLoadportDisportComparisonDoc] response status: ${V.status}`),i.value=V.data,void(r.value=!1);const W=V.data;a("input",{...U,doc_name:W}),r.value=!1,C(W)}catch(e){console.error("[generatePenaltyElements] error=",e),i.value=e,r.value=!1}},copy:async function(){s.value=!0;const{id:e,user_created:t,date_created:a,user_updated:n,date_updated:o,penalty_elements:r,...l}=u.value;console.log(`[penalty elements::copy] requestBody=${JSON.stringify(l)}`);const c=await d.post("/items/navarch_penalty_elements",l);if(200!==c.status)return console.log(`[penalty elements::copy] copy response status: ${c.status}`),void(i.value=`Failed to duplicate penalty elements with status ${c.status}`);s.value=!1,window.open(`/admin/content/navarch_penalty_elements/${c.data.data.id}`)},isCopying:s,viewPdf:C};function C(e){const a=null!=e?e:t.value.doc_name;console.log(`[viewPdf] doc name: ${a}`);const n=`/display-doc?filepath=${encodeURIComponent(`/data/uploads/${a}.pdf`)}`;window.open(n)}async function N(e,t,a,n){const o=(await d.get(`/items/${h}/${a}`,{params:{fields:[_]}})).data.data[_];if(!o)throw new Error(`[generatePenalty] no contract found for parcel with id ${a}`);const i=await d.get(`/items/navarch_contract/${o}`,{params:{fields:[w]}});if(!i.data.data[w])throw new Error(`No mine found for contract with id ${o}`);const r=c.value.split("/")[1],s=await k(e.penalty_per_uom,r);return{mine:i.data.data[w],commodity_code:n[e.commodity].code,counterparty:t,assay:parseFloat(e.analytical_assay.replace(/,/g,"")),assay_uom:e.assay_uom,penalty_rate:parseFloat(e.final_penalty_rate.replace(/,/g,""))/s,penalty_amount:parseFloat(e.final_penalty.replace(/,/g,""))}}function S(e){const t=e.getDay(),a=e.getDate(),n=e.getMonth(),o=e.getFullYear();return`${["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"][t]}, ${["January","February","March","April","May","June","July","August","September","October","November","December"][n]} ${a}, ${o}`}async function k(e,t){if(e===t)return 1;const a=await d.get(`/items/${P}?filter[${E}]=${e}`,{params:{fields:[F]}});if(0===a.data.data.length||null===a.data.data[0][F]||void 0===a.data.data[0][F])throw new Error(`[getWeightUnitConversionValue] failed to get conversion value for source weight unit ${e}. Ensure that the symbol is correct and is a weight unit symbol`);const n=await d.get(`/items/${P}?filter[${E}]=${t}`,{params:{fields:[F]}});if(0===n.data.data.length||null===n.data.data[0][F]||void 0===n.data.data[0][F])throw new Error(`[getWeightUnitConversionValue] failed to get conversion value for the target weight unit ${t}. Ensure that the symbol is correct and is a weight unit symbol`);const o=parseFloat(a.data.data[0][F]);if(isNaN(o))throw new Error(`[getWeightUnitConversionValue] source weight unit ${e} conversion value=${o} is not a number`);const i=parseFloat(n.data.data[0][F]);if(isNaN(i))throw new Error(`[getWeightUnitConversionValue] target weight unit ${t} conversion value=${i} is not a number`);return console.log(`[getWeightUnitConversionValue] source weight unit=${e}, target weight unit=${t}, source weight unit conversion=${o}, target weight unit conversion=${i}`),console.log("[getWeightUnitConversionValue] conversion factor="+o/i),o/i}}});const y={key:0},h={key:1};var _=[],w=[];!function(e,t){if(e&&"undefined"!=typeof document){var a,n=!0===t.prepend?"prepend":"append",o=!0===t.singleTag,i="string"==typeof t.container?document.querySelector(t.container):document.getElementsByTagName("head")[0];if(o){var r=_.indexOf(i);-1===r&&(r=_.push(i)-1,w[r]={}),a=w[r]&&w[r][n]?w[r][n]:w[r][n]=s()}else a=s();65279===e.charCodeAt(0)&&(e=e.substring(1)),a.styleSheet?a.styleSheet.cssText+=e:a.appendChild(document.createTextNode(e))}function s(){var e=document.createElement("style");if(e.setAttribute("type","text/css"),t.attributes)for(var a=Object.keys(t.attributes),o=0;o<a.length;o++)e.setAttribute(a[o],t.attributes[a[o]]);var r="prepend"===n?"afterbegin":"beforeend";return i.insertAdjacentElement(r,e),e}}(".margin-top-16px[data-v-64969d30] {\n  margin-top: 16px;\n}",{}),f.render=function(e,t,a,n,o,m){const f=i("v-button"),_=i("v-notice");return r(),s(l,null,[c(' <input :value="value" @input="handleChange($event.target.value)" /> '),c(" create a button only interface for Directus"),e.value?(r(),s("div",h,[d(f,{onClick:t[1]||(t[1]=()=>e.viewPdf())},{default:u((()=>[p("View Penalty Elements Doc ")])),_:1})])):(r(),s("div",y,[d(f,{onClick:t[0]||(t[0]=()=>e.generatePdf()),loading:e.isGeneraingDoc},{default:u((()=>[p("Generate Penalty Elements Doc")])),_:1},8,["loading"]),e.failureReason?(r(),v(_,{key:0},{default:u((()=>[p(g(e.failureReason),1)])),_:1})):c("v-if",!0)])),d(f,{class:"margin-top-16px",onClick:t[2]||(t[2]=()=>e.copy()),loading:e.isCopying},{default:u((()=>[p("Copy")])),_:1},8,["loading"])],64)},f.__scopeId="data-v-64969d30",f.__file="src/interface.vue";var $=t({id:"navarch-penalty-elements-generator",name:"Penalty Elements Doc Generator",icon:"receipt_long",description:"This is a custom interface for Navarch's Penalty Elements Document Generator Button.",component:f,options:null,types:["json"],group:"standard"});export{$ as default};
