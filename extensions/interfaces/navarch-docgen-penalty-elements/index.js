import{useApi as e,defineInterface as t}from"@directus/extensions-sdk";import{defineComponent as a,ref as n,inject as o,resolveComponent as i,openBlock as r,createElementBlock as s,Fragment as l,createCommentVNode as c,createVNode as d,withCtx as u,createTextVNode as v,createBlock as p,toDisplayString as f}from"vue";var m=(e=>(e[e.Advance=0]="Advance",e[e["Second Advance"]=1]="Second Advance",e[e["Third Advance"]=2]="Third Advance",e[e["Fourth Advance"]=3]="Fourth Advance",e[e.Provisional=4]="Provisional",e[e["Second Provisional"]=5]="Second Provisional",e[e["Third Provisional"]=6]="Third Provisional",e[e["Fourth Provisional"]=7]="Fourth Provisional",e[e.Final=8]="Final",e))(m||{}),g=a({props:{value:{type:Object,default:null}},emits:["input"],setup(t,{emit:a}){const i=n(""),r=n(""),s=n(""),l=e(),c=o("values",n({})),d="id",u="navarch_invoices",v="id",p="parcel",f="invoice_type",g="invoice",y="navarch_parcel",h="invoice_date",_="contract",$="mine",w="name",D="code",b="codename",P="navarch_unit",F="symbol",E="conversionToGram";return{failureReason:i,generatePdf:async function(){var e;try{const t=c.value.start_date,n=c.value.end_date,o=c.value.filter_date,_=c.value.invoice_type;if(!t)return void(i.value="Start date not selected");if(!n)return void(i.value="End date not selected");if(!o)return void(i.value="Filter date not selected");if(!_)return void(i.value="Invoice type not selected");let $="";switch(o){case"Arrival Date":$="actual_arrival_date";break;case"Shipment Date":$="actual_shipment_date";break;case"Invoice Date":$=h;break;case"B/L Date":$="bl_date";break;case"Parcel Finalisation Date":$="parcel_finalisation_date";break;default:return void(i.value="Invalid filter date")}const P=await l.get(`/items/${y}?filter[_and][0][_and][0][${$}][_between][0]=${t}&filter[_and][0][_and][0][${$}][_between][1]=${n}&filter[_and][0][_and][1][${h}][_nnull]=true&sort=${"First Issued Invoice"===_?"":"-"}${h}`,{params:{fields:[d,h]}});if(200!==P.status)return console.error(`[generateLoadportDisportComparisonDoc] parcelResponce status: ${P.status}`),void(i.value="Failed to fetch parcels");if(0===P.data.data.length)return void(i.value=`No parcels found within the selected date range of ${t} to ${n} with a non-null Invoice Date`);const F=P.data.data[0][d],E=(await l.get(`/items/${u}?filter[${p}]=${F}&filter[_and][0][${g}][_nnull]=true`,{params:{fields:[v,f,g]}})).data.data.map((e=>e[f]));let k=null;if("First Issued Invoice"===_)k=E.reduce(((e,t)=>(console.debug(`[generateLoadportDisportComparisonDoc] prev=${e}, curr=${m[t]}`),m[t]<e?m[t]:e)),0);else{if("Latest Issued Invoice"!==_)return void(i.value="Invalid invoice type");k=E.reduce(((e,t)=>(console.debug(`[generateLoadportDisportComparisonDoc] prev=${e}, curr=${m[t]}`),m[t]>e?m[t]:e)),0)}if(null===k)return void(i.value=`No invoices found for parcel with id ${F} with an issued invoice type of ${_}`);const A=P.data.data.map((e=>e[d])),S=`/items/${u}?filter[_and][0][${p}][_in]=${A.join(",")}&filter[_and][1][${f}]=${m[k]}&filter[_and][1][${g}][_nnull]=true&sort=-date_updated`.replace(/ /g,"%20"),T=await l.get(S,{params:{fields:[v,p,f,g]}});if(console.log(`[generatePenaltyElementsDoc] invoice ids fetched=${T.data.data.map((e=>e[v])).join(", ")}`),200!==T.status)return console.error(`[generateLoadportDisportComparisonDoc] invoicesResponse status: ${T.status}`),void(i.value="Failed to fetch invoices");if(0===T.data.data.length)return void(i.value=`No invoices found for parcels with invoice type ${m[k]}`);const U=T.data.data.filter(((e,t,a)=>{const n=`${e[p]}_${e[f]}`;return t===a.findIndex((e=>`${e[p]}_${e[f]}`===n))})),L=U.reduce(((e,t)=>{const a=t[g];""===r.value&&(r.value=a.dry_weight_uom);const n=a.penalties;if(!n||!n.penalties||0===n.penalties.length)return e;""===s.value&&(console.debug(`[generatePenaltyElementsDoc] penalties=${JSON.stringify(n)}`),s.value=`${a.currency}/${n.penalties[0].penalty_per_uom}`);const o=n.penalties.map((e=>e.commodity));return[...e,...o]}),[]).filter(((e,t,a)=>a.indexOf(e)===t));console.log(`[generatePenaltyElementsDoc] penalty commodities=${L.join(", ")}`);const V=L.map(((e,t)=>`filter[_or][${t}][${w}]=${e}`)).join("&").replace(/ /g,"%20"),W=await l.get(`/items/navarch_commodity?${V}`,{params:{fields:[w,D,"id"]}});console.log(`commodity mapping response: ${JSON.stringify(W.data.data)}`);const j=W.data.data.reduce(((e,t)=>(e[t[w]]={code:t[D],id:t.id},e)),{}),x=[];for(const e of U){const t=e[g].penalties;if(!t||!t.penalties)continue;const a=t.penalties,n=(await l.get(`/items/navarch_counterparty?filter[name]=${e[g].buyer}`,{params:{fields:[b]}})).data.data[0][b],o=e[g].dry_weight.replace(/,/g,""),i=await N(e[g].dry_weight_uom,r.value);console.log(`[generatePenaltyElementsDoc] dry weight conversion factor=${i}`),x.push({id:e[p],name:e[g].shipment_code,vessel:e[g].vessel,invoice_type:e.invoice_type,dry_weight:parseFloat(o)*i,penalties:await Promise.all(a.map((async t=>await C(t,n,e[p],j))))})}const R=U[0][g].currency,J={start_date:I(new Date(t)),end_date:I(new Date(n)),filter_date:o,invoice_type:_,parcels:x,dry_weight_uom:null==(e=r.value)?void 0:e.toUpperCase(),penalty_rate_uom:s.value,currency:R},O=await l.post("/generate/penalty-elements",J);if(200!==O.status)return console.log(`[generateLoadportDisportComparisonDoc] response status: ${O.status}`),void(i.value=O.data);const G=O.data;a("input",{...J,doc_name:G})}catch(e){console.error("[generatePenaltyElements] error=",e),i.value=e}},viewPdf:function(){const e=t.value.doc_name;console.log(`[viewPdf] doc name: ${e}`);const a=`/display-doc?filepath=${encodeURIComponent(`/data/uploads/${e}.pdf`)}`;window.open(a)}};async function C(e,t,a,n){const o=(await l.get(`/items/${y}/${a}`,{params:{fields:[_]}})).data.data[_];if(!o)throw new Error(`[generatePenalty] no contract found for parcel with id ${a}`);const i=await l.get(`/items/navarch_contract/${o}`,{params:{fields:[$]}});if(!i.data.data[$])throw new Error(`No mine found for contract with id ${o}`);const r=s.value.split("/")[1],c=await N(e.penalty_per_uom,r);return{mine:i.data.data[$],commodity_code:n[e.commodity].code,counterparty:t,assay:parseFloat(e.analytical_assay.replace(/,/g,"")),assay_uom:e.assay_uom,penalty_rate:parseFloat(e.final_penalty_rate.replace(/,/g,""))/c,penalty_amount:parseFloat(e.final_penalty.replace(/,/g,""))}}function I(e){const t=e.getDay(),a=e.getDate(),n=e.getMonth(),o=e.getFullYear();return`${["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"][t]}, ${["January","February","March","April","May","June","July","August","September","October","November","December"][n]} ${a}, ${o}`}async function N(e,t){if(e===t)return 1;const a=await l.get(`/items/${P}?filter[${F}]=${e}`,{params:{fields:[E]}});if(0===a.data.data.length||null===a.data.data[0][E]||void 0===a.data.data[0][E])throw new Error(`[getWeightUnitConversionValue] failed to get conversion value for source weight unit ${e}. Ensure that the symbol is correct and is a weight unit symbol`);const n=await l.get(`/items/${P}?filter[${F}]=${t}`,{params:{fields:[E]}});if(0===n.data.data.length||null===n.data.data[0][E]||void 0===n.data.data[0][E])throw new Error(`[getWeightUnitConversionValue] failed to get conversion value for the target weight unit ${t}. Ensure that the symbol is correct and is a weight unit symbol`);const o=parseFloat(a.data.data[0][E]);if(isNaN(o))throw new Error(`[getWeightUnitConversionValue] source weight unit ${e} conversion value=${o} is not a number`);const i=parseFloat(n.data.data[0][E]);if(isNaN(i))throw new Error(`[getWeightUnitConversionValue] target weight unit ${t} conversion value=${i} is not a number`);return console.log(`[getWeightUnitConversionValue] source weight unit=${e}, target weight unit=${t}, source weight unit conversion=${o}, target weight unit conversion=${i}`),console.log("[getWeightUnitConversionValue] conversion factor="+o/i),o/i}}});const y={key:0},h={key:1};g.render=function(e,t,a,n,o,m){const g=i("v-button"),_=i("v-notice");return r(),s(l,null,[c(' <input :value="value" @input="handleChange($event.target.value)" /> '),c(" create a button only interface for Directus"),e.value?(r(),s("div",h,[d(g,{class:"margin-top-16px",onClick:t[1]||(t[1]=()=>e.viewPdf())},{default:u((()=>[v("View Penalty Elements Doc ")])),_:1})])):(r(),s("div",y,[d(g,{class:"margin-top-16px",onClick:t[0]||(t[0]=()=>e.generatePdf())},{default:u((()=>[v("Generate Penalty Elements Doc")])),_:1}),e.failureReason?(r(),p(_,{key:0},{default:u((()=>[v(f(e.failureReason),1)])),_:1})):c("v-if",!0)]))],2112)},g.__file="src/interface.vue";var _=t({id:"navarch-penalty-elements-generator",name:"Penalty Elements Doc Generator",icon:"receipt_long",description:"This is a custom interface for Navarch's Penalty Elements Document Generator Button.",component:g,options:null,types:["json"],group:"standard"});export{_ as default};
