import{useApi as e,defineInterface as t}from"@directus/extensions-sdk";import{defineComponent as a,inject as n,ref as r,resolveComponent as o,resolveDirective as s,openBlock as i,createElementBlock as d,Fragment as l,createElementVNode as u,withDirectives as c,createBlock as p,withCtx as f,createTextVNode as v,toDisplayString as y,createCommentVNode as m}from"vue";const g="navarch_assay_report",h="avg",_={[h]:"",parcel:"Parcel",lot_number:"Lot Number",commodity:"Commodity",method:"Method",dry_weight:"Dry Weight",seller_assay:"Seller Assay",buyer_assay:"Buyer Assay",difference:"Difference",splitting_limit:"Splitting Limit",umpire_assay:"Umpire Assay",to_umpire:"To Umpire",umpire_name:"Umpire Name",losing_party:"Losing Party",final_assay:"Final Assay"},b="id",w="related_parcel",$="lot_number",A="method",D="shipment_code",x="actual_arrival_date",R="bl_date",k="commodity",N="dry_weight",C="dry_weight_uom",E="difference",S="splitting_limit",F="seller_assay",j="buyer_assay",I="umpire_assay",O="assay_uom",B="final_assay",L="parcel";function U(e){return null==e}function G(e,t=2,a=!0){if(isNaN(e)||null==e)return"-";const n=Math.round(e*Math.pow(10,t))/Math.pow(10,t),[r,o]=n.toString().split("."),s=r?r.replace(/\B(?=(\d{3})+(?!\d))/g,","):"0";if(!o&&!a)return s;return`${s}.${(null!=o?o:"").padEnd(t,"0")}`}var T=a({props:{value:{type:String,default:null}},emits:["input"],setup(t,{emit:a}){const o=e(),s=n("values",r({})),i=r(!1),d=r(!1),l=r(null),u=r(t.value);return{documentData:u,generateDocument:async function(){i.value=!0,l.value=null;try{const{filter_date:e,start_date:t,end_date:a}=s.value;if(!e||!t||!a)return l.value="Please provide valid dates for all fields.",void(i.value=!1);let n;if("invoice_date"===e){const r=await o.get("/items/navarch_invoices",{params:{fields:[L],filter:{[e]:{_between:[t,a]}},limit:-1}});if(200!==r.status)return void(l.value="Failed to fetch parcel data, please try again.");if(!r.data.data||0===r.data.data.length)return l.value="No invoices found with Invoice Dates that fall within the selected date range.",void(i.value=!1);n={[b]:{_in:r.data.data.map(e=>e[L])}}}else{const r=e===R||e===x;let o="INVALID_FIELD_NAME";switch(e){case R:o="estimated_shipment_date";break;case x:o="estimate_arrival_date"}n=r?{_or:[{[e]:{_between:[t,a]}},{_and:[{[e]:{_null:!0}},{[o]:{_between:[t,a]}}]}]}:{[e]:{_between:[t,a]}}}const r=await o.get("/items/navarch_parcel",{params:{fields:[b,D],filter:n,limit:-1}});if(200!==r.status)return void(l.value="Failed to fetch parcel data, please try again.");if(!r.data.data||0===r.data.data.length)return l.value="No parcels found that falls in the provided date range for the selected filter date.",void(i.value=!1);console.log(`[navarch-docgen-assayreport::generateDocument] ${r.data.data.length} parcels found with ${e} in the selected date range.`);const d=await o.get("/items/navarch_assay_lot",{params:{fields:[w,$,k,A,N,C,O,F,j,E,S,"to_umpire",I,"umpire_name","losing_party",B],filter:{[w]:{_in:r.data.data.map(e=>e[b])}},sort:[w,k,$],limit:-1}});if(200!==d.status)return void(l.value="Failed to fetch assay data, please try again.");if(!d.data.data||0===d.data.data.length)return l.value="No assay data found for the parcels in the provided date range for the selected filter date.",void(i.value=!1);const p=r.data.data.reduce((e,t)=>(e[t[b]]=t[D],e),{}),f=function(e){if(!Array.isArray(e)||0===e.length)return console.warn(`[navarch-docgen-assayreport::cleanUpAssayData] No assay data found or invalid format. Data=${JSON.stringify(e)}`),[];return e.map(e=>{var t,a;const n={};for(const r in e){if(r===N){const a=G(e[N],4,!0),r=e[N]&&null!=(t=e[C])?t:"";n[N]=`${a}${r}`;continue}if(r===F||r===j||r===I||r===B||r===E||r===S){const t=G(e[r],4,!0),o=e[r]&&null!=(a=e[O])?a:"";n[r]=`${t}${o}`;continue}r!==C&&r!==O&&(U(e[r])?n[r]="":n[r]=e[r])}return""===n[$]&&(n[h]="Average"),n})}(function(e){const t=e.reduce((e,t)=>{const a=t[w];return e[a]?e[a].push(t):e[a]=[t],e},{});let a;for(const e in t){const n=t[e];if(n.find(e=>"Outturn"===e[A]))a="Outturn";else if(n.find(e=>"Inturn Final"===e[A]))a="Inturn Final";else if(n.find(e=>"Inturn"===e[A]))a="Inturn";else if(n.find(e=>"Planned"===e[A]))a="Planned";else{if(!n.find(e=>"Estimated"===e[A]))throw new Error(`Unknown assay method found: ${n[0][A]}`);a="Estimated"}t[e]=n.filter(e=>e[A]===a),a=void 0}return Object.values(t).flat()}(d.data.data).map(e=>{const{related_parcel:t,...a}=e;return{[h]:"",parcel:p[t],...a}}));if(u.value=f,s.value[b]){const{id:e,user_created:t,date_created:a,user_updated:n,date_updated:r,...i}=s.value,d=await o.patch(`/items/${g}/${e}`,{...i,assay_report:u.value});if(200!==d.status)return console.log(`[navarch-docgen-assayreport::generateDocument] update response status: ${d.status}`),void(l.value=`Failed to update assay report with status ${d.status}`)}else{const e=await o.post(`/items/${g}`,{...s.value,assay_report:u.value});if(200!==e.status)return console.log(`[navarch-docgen-assayreport::generateDocument] create response status: ${e.status}`),void(l.value=`Failed to create assay report with status ${e.status}`);const{id:t}=e.data.data;window.open(`/admin/content/${g}/${t}`)}c(f)}catch(e){console.error("[navarch-docgen-assayreport::generateDocument] Error generating document:",e),l.value=`Error generating document: ${e}`}finally{i.value=!1}},downloadDoc:c,copy:async function(){d.value=!0;const{id:e,user_created:t,date_created:a,user_updated:n,date_updated:r,assay:i,...u}=s.value;console.log(`[navarch-docgen-assayreport::copy] requestBody=${JSON.stringify(u)}`);const c=await o.post("/items/navarch_assay_report",u);if(200!==c.status)return console.log(`[navarch-docgen-assayreport::copy] copy response status: ${c.status}`),void(l.value=`Failed to duplicate assay report with status ${c.status}`);d.value=!1,window.open(`/admin/content/navarch_assay_report/${c.data.data.id}`)},clearDocument:function(){u.value=null,l.value=null,a("input",null)},isGeneraingDoc:i,isCopying:d,failureReason:l};function c(e){try{const t=function(e){const t=[],a=Object.keys(e[0]);t.push(a.map(e=>_[e]).join(","));for(const n of e){const e=a.map(e=>`"${String(n[e]).replace(/"/g,'\\"')}"`);t.push(e.join(","))}return t.join("\n")}(null!=e?e:u.value),a=s.value.start_date,n=s.value.end_date;!function(e,t){const a=new Blob([e],{type:"text/csv"}),n=URL.createObjectURL(a),r=document.createElement("a");r.href=n,r.download=`${t}.csv`,document.body.appendChild(r),r.click(),document.body.removeChild(r)}(t,`Assay Report - ${s.value.filter_date} - ${a} ~ ${n}`)}catch(e){console.error("Error downloading Assay Report:",e),l.value="Error downloading Assay Report: "+e}}}});const M={class:"margin-top-16px"};var P=[],q=[];!function(e,t){if(e&&"undefined"!=typeof document){var a,n=!0===t.prepend?"prepend":"append",r=!0===t.singleTag,o="string"==typeof t.container?document.querySelector(t.container):document.getElementsByTagName("head")[0];if(r){var s=P.indexOf(o);-1===s&&(s=P.push(o)-1,q[s]={}),a=q[s]&&q[s][n]?q[s][n]:q[s][n]=i()}else a=i();65279===e.charCodeAt(0)&&(e=e.substring(1)),a.styleSheet?a.styleSheet.cssText+=e:a.appendChild(document.createTextNode(e))}function i(){var e=document.createElement("style");if(e.setAttribute("type","text/css"),t.attributes)for(var a=Object.keys(t.attributes),r=0;r<a.length;r++)e.setAttribute(a[r],t.attributes[a[r]]);var s="prepend"===n?"afterbegin":"beforeend";return o.insertAdjacentElement(s,e),e}}(".margin-top-16px[data-v-64969d30] {\n  margin-top: 16px;\n}\n.margin-left-16px[data-v-64969d30] {\n  margin-left: 16px;\n}\n.secondary-button[data-v-64969d30] {\n  --v-button-background-color: var(--background-page);\n  --v-button-color: var(--primary);\n  border: 1px solid var(--primary);\n  border-radius: var(--border-radius);\n}\n.secondary-button[data-v-64969d30]:disabled {\n  border-radius: var(--border-radius);\n}\n.secondary-button[data-v-64969d30]:hover {\n  border-color: var(--v-button-background-color-hover);\n  --v-button-color: inherit;\n}",{}),T.render=function(e,t,a,n,r,g){const h=o("v-button"),_=o("v-notice"),b=s("tooltip");return i(),d(l,null,[u("div",M,[e.documentData?c((i(),p(h,{key:1,onClick:t[1]||(t[1]=()=>e.downloadDoc(e.documentData))},{default:f(()=>[v(" Download Assay Report ")]),_:1})),[[b,"Download the Assay Report."]]):c((i(),p(h,{key:0,onClick:t[0]||(t[0]=()=>e.generateDocument()),loading:e.isGeneraingDoc},{default:f(()=>[v(" Generate & Save Assay Report ")]),_:1},8,["loading"])),[[b,"Generate and saves the Assay Report based on the selected date range for the selected filter date. Valid dates must be provided for start and end dates."]]),c((i(),p(h,{class:"margin-left-16px secondary-button",onClick:t[2]||(t[2]=()=>e.copy()),loading:e.isCopying},{default:f(()=>[v("Copy")]),_:1},8,["loading"])),[[b,"Create a copy of this form with all the fields except the Assay Report. To regenerate another Assay Report with minor changes to the input data."]]),c((i(),p(h,{class:"margin-left-16px secondary-button",onClick:t[3]||(t[3]=()=>e.clearDocument())},{default:f(()=>[v("Clear")]),_:1})),[[b,"Clear the generated Assay Report (if already generated) to regenerate again."]])]),e.failureReason?(i(),p(_,{key:0,class:"margin-top-16px"},{default:f(()=>[v(y(e.failureReason),1)]),_:1})):m("v-if",!0)],64)},T.__scopeId="data-v-64969d30",T.__file="src/interface.vue";var J=t({id:"navarch-docgen-assayreport",name:"Navarch Assay Report Generator Button",icon:"receipt_long",description:"Navarch Assay Report Generator Button",component:T,options:null,types:["json"],group:"standard"});export{J as default};
