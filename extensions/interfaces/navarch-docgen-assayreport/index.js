import{useApi as e,defineInterface as a}from"@directus/extensions-sdk";import{defineComponent as t,inject as n,ref as r,resolveComponent as o,resolveDirective as s,openBlock as i,createElementBlock as d,Fragment as l,createElementVNode as u,withDirectives as c,createBlock as p,withCtx as f,createTextVNode as v,toDisplayString as y,createCommentVNode as m}from"vue";const g="navarch_assay_report",h="avg",_={[h]:"",parcel:"Parcel",lot_number:"Lot Number",commodity:"Commodity",method:"Method",dry_weight:"Dry Weight",dry_weight_uom:"Dry Weight UOM",assay_uom:"Assay UOM",seller_assay:"Seller Assay",buyer_assay:"Buyer Assay",difference:"Difference",splitting_limit:"Splitting Limit",umpire_assay:"Umpire Assay",to_umpire:"To Umpire",umpire_name:"Umpire Name",losing_party:"Losing Party",final_assay:"Final Assay"},b="id",w="related_parcel",A="lot_number",D="method",$="shipment_code",x="actual_arrival_date",R="bl_date",k="commodity",N="dry_weight",C="difference",E="splitting_limit",O="seller_assay",S="buyer_assay",F="umpire_assay",j="final_assay",I="parcel";function U(e){return null==e}function B(e,a=2,t=!0){if(isNaN(e)||null==e)return"-";const n=Math.round(e*Math.pow(10,a))/Math.pow(10,a),[r,o]=n.toString().split("."),s=r?r.replace(/\B(?=(\d{3})+(?!\d))/g,","):"0";if(!o&&!t)return s;return`${s}.${(null!=o?o:"").padEnd(a,"0")}`}var L=t({props:{value:{type:String,default:null}},emits:["input"],setup(a,{emit:t}){const o=e(),s=n("values",r({})),i=r(!1),d=r(!1),l=r(null),u=r(a.value);return{documentData:u,generateDocument:async function(){i.value=!0,l.value=null;try{const{filter_date:e,start_date:a,end_date:t}=s.value;if(!e||!a||!t)return l.value="Please provide valid dates for all fields.",void(i.value=!1);let n;if("invoice_date"===e){const r=await o.get("/items/navarch_invoices",{params:{fields:[I],filter:{[e]:{_between:[a,t]}},limit:-1}});if(200!==r.status)return void(l.value="Failed to fetch parcel data, please try again.");if(!r.data.data||0===r.data.data.length)return l.value="No invoices found with Invoice Dates that fall within the selected date range.",void(i.value=!1);n={[b]:{_in:r.data.data.map(e=>e[I])}}}else{const r=e===R||e===x;let o="INVALID_FIELD_NAME";switch(e){case R:o="estimated_shipment_date";break;case x:o="estimate_arrival_date"}n=r?{_or:[{[e]:{_between:[a,t]}},{_and:[{[e]:{_null:!0}},{[o]:{_between:[a,t]}}]}]}:{[e]:{_between:[a,t]}}}const r=await o.get("/items/navarch_parcel",{params:{fields:[b,$],filter:n,limit:-1}});if(200!==r.status)return void(l.value="Failed to fetch parcel data, please try again.");if(!r.data.data||0===r.data.data.length)return l.value="No parcels found that falls in the provided date range for the selected filter date.",void(i.value=!1);console.log(`[navarch-docgen-assayreport::generateDocument] ${r.data.data.length} parcels found with ${e} in the selected date range.`);const d=await o.get("/items/navarch_assay_lot",{params:{fields:[w,A,k,D,N,"dry_weight_uom","assay_uom",O,S,C,E,"to_umpire",F,"umpire_name","losing_party",j],filter:{[w]:{_in:r.data.data.map(e=>e[b])}},sort:[w,k,A],limit:-1}});if(200!==d.status)return void(l.value="Failed to fetch assay data, please try again.");if(!d.data.data||0===d.data.data.length)return l.value="No assay data found for the parcels in the provided date range for the selected filter date.",void(i.value=!1);const p=r.data.data.reduce((e,a)=>(e[a[b]]=a[$],e),{}),f=function(e){if(!Array.isArray(e)||0===e.length)return console.warn(`[navarch-docgen-assayreport::cleanUpAssayData] No assay data found or invalid format. Data=${JSON.stringify(e)}`),[];return e.map(e=>{const a={};for(const t in e)U(e[t])?a[t]="":a[t]=t!==N&&t!==O&&t!==S&&t!==C&&t!==E&&t!==F&&t!==j?e[t]:B(e[t],4,!0);return""===a[A]&&(a[h]="Average"),a})}(function(e){const a=e.reduce((e,a)=>{const t=a[w];return e[t]?e[t].push(a):e[t]=[a],e},{});let t;for(const e in a){const n=a[e];if(n.find(e=>"Outturn"===e[D]))t="Outturn";else if(n.find(e=>"Inturn Final"===e[D]))t="Inturn Final";else if(n.find(e=>"Inturn"===e[D]))t="Inturn";else if(n.find(e=>"Planned"===e[D]))t="Planned";else{if(!n.find(e=>"Estimated"===e[D]))throw new Error(`Unknown assay method found: ${n[0][D]}`);t="Estimated"}a[e]=n.filter(e=>e[D]===t),t=void 0}return Object.values(a).flat()}(d.data.data).map(e=>{const{related_parcel:a,...t}=e;return{[h]:"",parcel:p[a],...t}}));if(u.value=f,s.value[b]){const{id:e,user_created:a,date_created:t,user_updated:n,date_updated:r,...i}=s.value,d=await o.patch(`/items/${g}/${e}`,{...i,assay_report:u.value});if(200!==d.status)return console.log(`[navarch-docgen-assayreport::generateDocument] update response status: ${d.status}`),void(l.value=`Failed to update assay report with status ${d.status}`)}else{const e=await o.post(`/items/${g}`,{...s.value,assay_report:u.value});if(200!==e.status)return console.log(`[navarch-docgen-assayreport::generateDocument] create response status: ${e.status}`),void(l.value=`Failed to create assay report with status ${e.status}`);const{id:a}=e.data.data;window.open(`/admin/content/${g}/${a}`)}c(f)}catch(e){console.error("[navarch-docgen-assayreport::generateDocument] Error generating document:",e),l.value=`Error generating document: ${e}`}finally{i.value=!1}},downloadDoc:c,copy:async function(){d.value=!0;const{id:e,user_created:a,date_created:t,user_updated:n,date_updated:r,assay:i,...u}=s.value;console.log(`[navarch-docgen-assayreport::copy] requestBody=${JSON.stringify(u)}`);const c=await o.post("/items/navarch_assay_report",u);if(200!==c.status)return console.log(`[navarch-docgen-assayreport::copy] copy response status: ${c.status}`),void(l.value=`Failed to duplicate assay report with status ${c.status}`);d.value=!1,window.open(`/admin/content/navarch_assay_report/${c.data.data.id}`)},clearDocument:function(){u.value=null,l.value=null,t("input",null)},isGeneraingDoc:i,isCopying:d,failureReason:l};function c(e){try{const a=function(e){const a=[],t=Object.keys(e[0]);a.push(t.map(e=>_[e]).join(","));for(const n of e){const e=t.map(e=>`"${String(n[e]).replace(/"/g,'\\"')}"`);a.push(e.join(","))}return a.join("\n")}(null!=e?e:u.value),t=s.value.start_date,n=s.value.end_date;!function(e,a){const t=new Blob([e],{type:"text/csv"}),n=URL.createObjectURL(t),r=document.createElement("a");r.href=n,r.download=`${a}.csv`,document.body.appendChild(r),r.click(),document.body.removeChild(r)}(a,`Assay Report - ${s.value.filter_date} - ${t} ~ ${n}`)}catch(e){console.error("Error downloading Assay Report:",e),l.value="Error downloading Assay Report: "+e}}}});const M={class:"margin-top-16px"};var G=[],T=[];!function(e,a){if(e&&"undefined"!=typeof document){var t,n=!0===a.prepend?"prepend":"append",r=!0===a.singleTag,o="string"==typeof a.container?document.querySelector(a.container):document.getElementsByTagName("head")[0];if(r){var s=G.indexOf(o);-1===s&&(s=G.push(o)-1,T[s]={}),t=T[s]&&T[s][n]?T[s][n]:T[s][n]=i()}else t=i();65279===e.charCodeAt(0)&&(e=e.substring(1)),t.styleSheet?t.styleSheet.cssText+=e:t.appendChild(document.createTextNode(e))}function i(){var e=document.createElement("style");if(e.setAttribute("type","text/css"),a.attributes)for(var t=Object.keys(a.attributes),r=0;r<t.length;r++)e.setAttribute(t[r],a.attributes[t[r]]);var s="prepend"===n?"afterbegin":"beforeend";return o.insertAdjacentElement(s,e),e}}(".margin-top-16px[data-v-64969d30] {\n  margin-top: 16px;\n}\n.margin-left-16px[data-v-64969d30] {\n  margin-left: 16px;\n}\n.secondary-button[data-v-64969d30] {\n  --v-button-background-color: var(--background-page);\n  --v-button-color: var(--primary);\n  border: 1px solid var(--primary);\n  border-radius: var(--border-radius);\n}\n.secondary-button[data-v-64969d30]:disabled {\n  border-radius: var(--border-radius);\n}\n.secondary-button[data-v-64969d30]:hover {\n  border-color: var(--v-button-background-color-hover);\n  --v-button-color: inherit;\n}",{}),L.render=function(e,a,t,n,r,g){const h=o("v-button"),_=o("v-notice"),b=s("tooltip");return i(),d(l,null,[u("div",M,[e.documentData?c((i(),p(h,{key:1,onClick:a[1]||(a[1]=()=>e.downloadDoc(e.documentData))},{default:f(()=>[v(" Download Assay Report ")]),_:1})),[[b,"Download the Assay Report."]]):c((i(),p(h,{key:0,onClick:a[0]||(a[0]=()=>e.generateDocument()),loading:e.isGeneraingDoc},{default:f(()=>[v(" Generate & Save Assay Report ")]),_:1},8,["loading"])),[[b,"Generate and saves the Assay Report based on the selected date range for the selected filter date. Valid dates must be provided for start and end dates."]]),c((i(),p(h,{class:"margin-left-16px secondary-button",onClick:a[2]||(a[2]=()=>e.copy()),loading:e.isCopying},{default:f(()=>[v("Copy")]),_:1},8,["loading"])),[[b,"Create a copy of this form with all the fields except the Assay Report. To regenerate another Assay Report with minor changes to the input data."]]),c((i(),p(h,{class:"margin-left-16px secondary-button",onClick:a[3]||(a[3]=()=>e.clearDocument())},{default:f(()=>[v("Clear")]),_:1})),[[b,"Clear the generated Assay Report (if already generated) to regenerate again."]])]),e.failureReason?(i(),p(_,{key:0,class:"margin-top-16px"},{default:f(()=>[v(y(e.failureReason),1)]),_:1})):m("v-if",!0)],64)},L.__scopeId="data-v-64969d30",L.__file="src/interface.vue";var P=a({id:"navarch-docgen-assayreport",name:"Navarch Assay Report Generator Button",icon:"receipt_long",description:"Navarch Assay Report Generator Button",component:L,options:null,types:["json"],group:"standard"});export{P as default};
