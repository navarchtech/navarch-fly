import{useApi as e,defineInterface as a}from"@directus/extensions-sdk";import{defineComponent as t,ref as r,inject as n,resolveComponent as o,resolveDirective as c,openBlock as l,createElementBlock as i,Fragment as d,createElementVNode as f,createVNode as u,withDirectives as s,createBlock as h,withCtx as v,createTextVNode as p,toDisplayString as g,createCommentVNode as x}from"vue";const m="contract",y="contract_currency",_="local_currency",N="navarch_currency",b="code";var F=t({props:{value:{type:String,default:null}},emits:["input"],setup(a,{emit:t}){const o=r(a.value?Number(a.value):null),c=r(!1),l=r(null),i="navarch_forex_rate",d="date",f="exchange_rate",u="currency_source",s="currency_target",h=e(),v=n("values",r({}));return{forexRate:o,isFetchingForexData:c,failureReason:l,fetchForexRate:async function(){console.log("[navarch-prefiller-forexrate] fetchForexRate started"),c.value=!0,l.value=null;const e=v.value.invoice_date||null;if(!e)return console.log("[navarch-prefiller-forexrate] No date found in the Invoice Date field, cannot fetch forex rate."),void(c.value=!1);const a=v.value.parcel;if(!a)return console.log("[navarch-prefiller-forexrate] No Parcel ID found in the Invoice Parcel field, cannot fetch forex rate."),c.value=!1,void(l.value="No Parcel ID found in the Invoice Parcel field.");const r=await h.get(`/items/navarch_parcel/${a}`,{params:{fields:[m]}});if(!(r&&r.data&&r.data.data&&r.data.data[m]))return console.log("[navarch-prefiller-forexrate] No contract found for the Parcel, cannot fetch forex rate."),c.value=!1,void(l.value="Selected parcel does not have an associated contract.");const n=r.data.data[m],p=await h.get(`/items/navarch_contract/${n}`,{params:{fields:[y,_]}});if(!p||!p.data||!p.data.data)return console.log("[navarch-prefiller-forexrate] No contract found for the Parcel, cannot fetch forex rate."),c.value=!1,void(l.value="No contract found for the Parcel.");const g=p.data.data[_];if(!g)return console.log("[navarch-prefiller-forexrate] No local currency found in the contract."),c.value=!1,void(l.value="Please set a Local Currency in the Tax section of the associated contract.");const x=p.data.data[y];if(!x)return console.log("[navarch-prefiller-forexrate] No currency found in the contract."),c.value=!1,void(l.value="Please set a Contract Currency in the Finance section of the associated contract.");const F=await async function(e,a=391,t=1){console.log("[navarch-prefiller-forexrate] fetchForexRateForDate called with date:",e,"currencySource:",a,"currencyTarget:",t);const r=await h.get("/items/"+i,{params:{filter:{[d]:{_eq:e},[u]:{_eq:a},[s]:{_eq:t}},fields:[f,u,s]}});if(!r||!r.data||!r.data.data||0===r.data.data.length)return console.log("[navarch-prefiller-forexrate] No forex rate found for the given date and currencies."),null;return console.log("[navarch-prefiller-forexrate] Forex rate fetched successfully:",JSON.stringify(r.data.data[0])),r.data.data[0]}(e,g,x);if(!F||!F[f]){const a=await h.get(`/items/${N}/${g}`,{params:{fields:[b]}}),t=await h.get(`/items/${N}/${x}`,{params:{fields:[b]}}),r=a.data.data[b]&&t.data.data[b]?`${a.data.data[b]} to ${t.data.data[b]}`:"the selected currencies in the contract";return void(l.value=`No currency rate found for the date of ${e} for ${r}.`)}o.value=Number(F[f]),console.log("[navarch-prefiller-forexrate] Forex rate value fetched:",o.value),t("input",o.value),c.value=!1},handleChange:async function(e){console.log("[navarch-prefiller-forexrate] handleChange called with event:",JSON.stringify(e)),l.value=null,e.target&&e.target.value?(console.log("[navarch-prefiller-forexrate] handleChange emitting value:",e.target.value),t("input",e.target.value)):(console.log("[navarch-prefiller-forexrate] handleChange emitting null value"),t("input",null));console.log("[navarch-prefiller-forexrate] handleChange done")}}}});const C={class:"row"};var w=[],R=[];!function(e,a){if(e&&"undefined"!=typeof document){var t,r=!0===a.prepend?"prepend":"append",n=!0===a.singleTag,o="string"==typeof a.container?document.querySelector(a.container):document.getElementsByTagName("head")[0];if(n){var c=w.indexOf(o);-1===c&&(c=w.push(o)-1,R[c]={}),t=R[c]&&R[c][r]?R[c][r]:R[c][r]=l()}else t=l();65279===e.charCodeAt(0)&&(e=e.substring(1)),t.styleSheet?t.styleSheet.cssText+=e:t.appendChild(document.createTextNode(e))}function l(){var e=document.createElement("style");if(e.setAttribute("type","text/css"),a.attributes)for(var t=Object.keys(a.attributes),n=0;n<t.length;n++)e.setAttribute(t[n],a.attributes[t[n]]);var c="prepend"===r?"afterbegin":"beforeend";return o.insertAdjacentElement(c,e),e}}(".row[data-v-64969d30] {\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n}\n.refresh-forex-fetch-button[data-v-64969d30] {\n  margin-left: 16px;\n}\n.margin-top-16px[data-v-64969d30] {\n  margin-top: 16px;\n}",{}),F.render=function(e,a,t,r,n,m){const y=o("v-input"),_=o("v-icon"),N=o("v-button"),b=o("v-notice"),F=c("tooltip");return l(),i(d,null,[f("div",C,[u(y,{modelValue:e.forexRate,"onUpdate:modelValue":a[0]||(a[0]=a=>e.forexRate=a),type:"number",placeholder:"Enter Forex Rate",onInput:e.handleChange},null,8,["modelValue","onInput"]),s((l(),h(N,{class:"refresh-forex-fetch-button",icon:!0,onClick:e.fetchForexRate,loading:e.isFetchingForexData},{default:v(()=>[u(_,{name:"refresh"})]),_:1},8,["onClick","loading"])),[[F,"Fetch currency exchange rate for on the date of the Invoice Date"]])]),e.failureReason?(l(),h(b,{key:0,type:"danger",class:"margin-top-16px"},{default:v(()=>[p(g(e.failureReason),1)]),_:1})):x("v-if",!0)],64)},F.__scopeId="data-v-64969d30",F.__file="src/interface.vue";var I=a({id:"navarch-prefiller-forexrate",name:"Navarch Prefiller Foreign Exchange Rate Extension",icon:"currency_exchange",description:"Interface for pre-filling foreign exchange rates based on a selected currency and date.",component:F,types:["string"],options:null});export{I as default};
