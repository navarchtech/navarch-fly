import{useApi as a,defineInterface as t}from"@directus/extensions-sdk";import{defineComponent as e,ref as o,inject as n,resolveComponent as r,openBlock as d,createElementBlock as s,Fragment as i,createCommentVNode as c,createVNode as l,withCtx as h,createTextVNode as u,createBlock as f,toDisplayString as p}from"vue";var m=e({props:{value:{type:Object,default:null}},emits:["input"],setup(t,{emit:e}){const r=o(""),d=a(),s=n("values",o({})),i="foreign_key",c="lot_number",l="method",h="contract",u="shipment_code",f="counterparty",p="assay_results",m="weight_result",w="bl_date",y="vessel",g="origin",v="destination",_="commodity",$="final_assay",E="assay_uom",N="dry_weight",b="wet_weight",C="wet_weight_uom",S="dry_weight_uom",x="name",A="name",P="name",k="line_1",O="line_2",U="city",I="state",W="country",M="zip",D="phone_code",F="phone_number",J="signatory_name",R="signatory_title",j="navarch_country",G="name",T="phone_code",B="navarch_world_port",z="port_name",V="country",Y="name",q="code";return{failureReason:r,generatePdf:async function(){var a,t,o,n,Q,X,Z,aa;try{const ta=s.value.parcel,ea=await d.get(`/items/navarch_parcel/${ta}`,{params:{fields:["id",p,m,h,u,f,w,y,g,v]}});!function(a){if(!a||!a.data||!a.data.data)throw new Error("No parcel data found, please ensure the selected parcel still exists.");if(!a.data.data[p])throw new Error("No assay data found in selected parcel");if(!a.data.data[m])throw new Error("No weight data found in selected parcel");if(!a.data.data[h])throw new Error("No contract found in selected parcel");if(!a.data.data[u])throw new Error("No shipment code found in selected parcel");if(!a.data.data[f])throw new Error("No counterparty found in selected parcel");if(!a.data.data[w])throw new Error("No bill of lading date found in selected parcel");if(!a.data.data[g])throw new Error("No origin port found in selected parcel");if(!a.data.data[v])throw new Error("No destination port found in selected parcel")}(ea);const oa=ea.data.data[p],na=ea.data.data[m],ra=await d.get(`/items/navarch_assay_lot?filter[${i}]=${oa}&sort[]=${c}`,{params:{fields:[l,c,_,$,E]}});!function(a){if(!a||!a.data||!a.data.data||0===a.data.data.length)throw new Error("No assay lots data found, please ensure assay data has been entered for the selected parcel.");a.data.data.forEach((a=>{if(!a[l])throw new Error("Some assays in the selected parcel does not have a method value");if(!a[_])throw new Error("Some assays in the selected parcel does not have a commodity value");if(!a[$])throw new Error("Some assays in the selected parcel does not have a final assay value");if(!a[E])throw new Error("Some assays in the selected parcel does not have an assay uom value")}))}(ra);const da=ra.data.data.reduce(((a,t)=>{const e=t[l],o=a.find((a=>a[0][l]===e));return o?o.push(t):a.push([t]),a}),[]),sa=null!=(n=null!=(o=null!=(t=null!=(a=da.find((a=>"Outturn"===a[0][l])))?a:da.find((a=>"Inturn Final"===a[0][l])))?t:da.find((a=>"Inturn"===a[0][l])))?o:da.find((a=>"Estimated"===a[0][l])))?n:da.find((a=>"Planned"===a[0][l]));if(!sa)throw new Error("No assay lots with a valid method found in selected parcel");const ia=ra.data.data.map((a=>a.commodity)).filter(((a,t,e)=>e.indexOf(a)===t)),ca=ia.map(((a,t)=>`filter[_or][${t}][code]=${a}`)).join("&"),la=await d.get(`/items/navarch_commodity?${ca}`,{params:{fields:[Y,q]}});!function(a){if(!a||!a.data||!a.data.data||0===a.data.data.length)throw new Error("No commodity mapping data found, please contact Navarch for assistance.");a.data.data.forEach((a=>{if(!a[Y])throw new Error("Some commodities in the selected parcel does not have a name, please contact Navarch for assistance.");if(!a[q])throw new Error("Some commodities in the selected parcel does not have a code, please contact Navarch for assistance.")}))}(la),console.log(`commodity mapping response: ${JSON.stringify(la.data.data)}`);const ha=la.data.data.reduce(((a,t)=>(a[t.code]=t.name,a)),{}),ua=sa.map((a=>({lotNumber:a[c],commodityName:ha[a[_]],commodityCode:a[_],analyticalAssay:a[$],assayUom:a[E]}))),fa=ua.filter((a=>null!==a.lotNumber)),pa=ua.filter((a=>null===a.lotNumber&&void 0===fa.find((t=>t.commodityCode===a.commodityCode)))),ma=await d.get(`/items/navarch_weight_lot?filter[${i}]=${na}&filter[${l}]=Inturn&sort[]=${c}`,{params:{fields:[l,c,N,b,C,S]}});!function(a){if(!a||!a.data||!a.data.data||0===a.data.data.length)throw new Error("No weight lots data found, please ensure weight data has been entered for the selected parcel.");a.data.data.forEach((a=>{if(!a[l])throw new Error("Some weights in the selected parcel does not have a method");if(!a[b])throw new Error("Some weights in the selected parcel does not have a wet weight value");if(!a[C])throw new Error("Some weights in the selected parcel does not have a wet weight UOM");if(!a[N])throw new Error("Some weights in the selected parcel does not have a dry weight value");if(!a[S])throw new Error("Some weights in the selected parcel does not have a dry weight UOM")}))}(ma);const wa=ma.data.data.reduce(((a,t)=>{const e=t[l],o=a.find((a=>a[0][l]===e));return o?o.push(t):a.push([t]),a}),[]),ya=null!=(aa=null!=(Z=null!=(X=null!=(Q=wa.find((a=>"Outturn"===a[0][l])))?Q:wa.find((a=>"Inturn Final"===a[0][l])))?X:wa.find((a=>"Inturn"===a[0][l])))?Z:wa.find((a=>"Estimated"===a[0][l])))?aa:wa.find((a=>"Planned"===a[0][l]));if(!ya)throw new Error("No weight lots with a valid method found in selected parcel");const ga=ya.map((a=>{var t,e,o;return{lotNumber:a[c],wetWeight:a[b],wetWeightUom:a[C],moisture:((null!=(t=a[b])?t:0)-(null!=(e=a[N])?e:0))/(null!=(o=a[b])?o:1)*100,moistureUom:"%",dryWeight:a[N],dryWeightUom:a[S]}})),va=ea.data.data[y];let _a;va&&(_a=await d.get(`/items/navarch_vessel/${va}`,{params:{fields:[A]}}));const $a=await d.get("/items/navarch_company",{params:{fields:[P,k,O,U,I,M,W,D,F,J,R]}});!function(a){if(!a||!a.data||!a.data.data)throw new Error("No company data found, please ensure that company data has been entered.");if(!a.data.data[P])throw new Error("Company name not found.");if(!a.data.data[k])throw new Error("Please ensure that company address line 1 has been entered.");if(!a.data.data[W])throw new Error("Company base country not found.");if(!a.data.data[D])throw new Error("Company phone code not found.");if(!a.data.data[F])throw new Error("Company phone number not found.");if(!a.data.data[J])throw new Error("Company signatory name not found.");if(!a.data.data[R])throw new Error("Company signatory title not found.")}($a);const Ea=$a.data.data,Na=Ea[P],ba=await d.get(`/items/${j}/${Ea[D]}`,{params:{fields:[T]}});!function(a){if(!a||!a.data||!a.data.data)throw new Error("No company country phone code data found, please contact Navarch for assistance.");if(!a.data.data[T])throw new Error("Company-based country phone code not found, please contact Navarch for assistance.")}(ba);const Ca=ba.data.data[T],Sa=Ea[F],xa=Ea[k],Aa=Ea[O]?`,\n${Ea[O]}`:"",Pa=Ea[U]?`,\n${Ea[U]}`:"",ka=Ea[I]?`,\n${Ea[I]}`:"",Oa=await d.get(`/items/${j}/${Ea[W]}`,{params:{fields:[G]}});!function(a){if(!a||!a.data||!a.data.data)throw new Error("No company country base data found, please contact Navarch for assistance.");if(!a.data.data[G])throw new Error("Company-based country name not found, please contact Navarch for assistance.")}(Oa);const Ua=Oa.data.data[G]?`, ${Oa.data.data[G]}`:"",Ia=`${xa}${Aa}${Pa}${Ea[M]?` ${Ea[M]}`:""}${ka}${Ua}`,Wa={signatoryName:Ea[J],signatoryTitle:Ea[R],company:Na},Ma=await d.get(`/items/navarch_counterparty/${ea.data.data[f]}`,{params:{fields:[x]}});!function(a){if(!a||!a.data||!a.data.data)throw new Error("No counterparty data found, please ensure that counterparty data has been entered.");if(!a.data.data[x])throw new Error("Counterparty name not found, please ensure that the selected counterparty has a name.")}(Ma);const Da=await d.get(`/items/${B}/${ea.data.data[g]}`,{params:{fields:[z,V]}});H(Da,"origin");const Fa=await d.get(`/items/${B}/${ea.data.data[v]}`,{params:{fields:[z,V]}});H(Fa,"destination");const Ja={seller:Na,seller_address:Ia,seller_phone_number:`+${Ca} ${Sa}`,buyer:Ma.data.data[x],vessel:_a?_a.data.data[A]:"N/A",contract_ref:`${ea.data.data[h]}`,bl_date:L(new Date(ea.data.data[w])),parcel_ref:`${ea.data.data[u]} (#${ea.data.data.id})`,port_of_loading:`${Da.data.data[z]}, ${Da.data.data[V]}`,port_of_discharge:`${Fa.data.data[z]}, ${Fa.data.data[V]}`,weights:ga,assays:fa,composite_assays:pa,signatory:Wa},Ra=await d.post("/generate/assay-exchange",Ja);if(200!==Ra.status)return console.log(`[generateProvWeightAndAssay] invoice response status: ${Ra.status}`),void(r.value=Ra.data);const ja=Ra.data;e("input",{...Ja,doc_name:ja}),K(ja)}catch(a){console.error("[generateProvWeightAndAssay] error=",a),r.value=a}},viewPdf:K};function H(a,t){if(!a||!a.data||!a.data.data)throw new Error(`No ${t} port data found, please contact Navarch to check that the selected port is still valid.`);if(!a.data.data[z])throw new Error(`Port name for ${t} port not found, please contact Navarch to check that the selected port is still valid.`);if(!a.data.data[V])throw new Error("Port country for ${portType} port not found, please contact Navarch to check that the selected port is still valid.")}function K(a){const e=null!=a?a:t.value.doc_name;console.log(`[viewPdf] doc name: ${e}`);const o=`/display-doc?filepath=${encodeURIComponent(`/data/uploads/${e}.pdf`)}`;window.open(o)}function L(a){const t=a.getDate(),e=a.getMonth(),o=a.getFullYear();return`${t} ${["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"][e]} ${o}`}}});const w={key:0},y={key:1};m.render=function(a,t,e,o,n,m){const g=r("v-button"),v=r("v-notice");return d(),s(i,null,[c(' <input :value="value" @input="handleChange($event.target.value)" /> '),c(" create a button only interface for Directus"),a.value?(d(),s("div",y,[l(g,{class:"margin-top-16px",onClick:t[1]||(t[1]=()=>a.viewPdf())},{default:h((()=>[u("View Assay Exchange Cert ")])),_:1})])):(d(),s("div",w,[l(g,{class:"margin-top-16px",onClick:t[0]||(t[0]=()=>a.generatePdf())},{default:h((()=>[u("Generate Assay Exchange Cert")])),_:1}),a.failureReason?(d(),f(v,{key:0},{default:h((()=>[u(p(a.failureReason),1)])),_:1})):c("v-if",!0)]))],2112)},m.__file="src/interface.vue";var g=t({id:"navarch-docgen-assay-exchange",name:"Navarch Assay Exchange Cert Generator Button",icon:"receipt_long",description:"This is a custom interface for Navarch's Assay Exchange Cert Generator Button.",component:m,options:null,types:["json"],group:"standard"});export{g as default};
