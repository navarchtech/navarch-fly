import{useApi as a,defineInterface as e}from"@directus/extensions-sdk";import{defineComponent as t,ref as n,inject as o,resolveComponent as r,openBlock as d,createElementBlock as s,Fragment as i,createCommentVNode as c,createVNode as l,withCtx as u,createTextVNode as h,createBlock as f,toDisplayString as p}from"vue";var m=t({props:{value:{type:Object,default:null}},emits:["input"],setup(e,{emit:t}){const r=n(""),d=n(!1),s=n(!1),i=a(),c=o("values",n({})),l="foreign_key",u="lot_number",h="method",f="contract",p="shipment_code",m="counterparty",w="assay_results",y="weight_result",g="bl_date",v="vessel",_="origin",$="destination",E="commodity",N="seller_assay",b="assay_uom",C="dry_weight",x="wet_weight",S="wet_weight_uom",A="dry_weight_uom",k="name",P="name",O="name",I="line_1",T="line_2",U="city",D="state",W="country",j="zip",F="phone_code",G="phone_number",J="signatory_name",M="signatory_title",B="navarch_country",R="name",q="phone_code",z="navarch_world_port",V="port_name",Y="country",H="name",K="code";return{isGeneraingDoc:d,failureReason:r,generatePdf:async function(){var a,e,n,o,s,Z,aa,ea;r.value="",d.value=!0;try{const ta=c.value.parcel,na=await i.get(`/items/navarch_parcel/${ta}`,{params:{fields:["id",w,y,f,p,m,g,v,_,$]}});!function(a){if(!a||!a.data||!a.data.data)throw new Error("No parcel data found, please ensure the selected parcel still exists.");if(!a.data.data[w])throw new Error("No assay data found in selected parcel");if(!a.data.data[y])throw new Error("No weight data found in selected parcel");if(!a.data.data[f])throw new Error("No contract found in selected parcel");if(!a.data.data[p])throw new Error("No shipment code found in selected parcel");if(!a.data.data[m])throw new Error("No counterparty found in selected parcel");if(!a.data.data[g])throw new Error("No bill of lading date found in selected parcel");if(!a.data.data[_])throw new Error("No origin port found in selected parcel");if(!a.data.data[$])throw new Error("No destination port found in selected parcel")}(na);const oa=na.data.data[w],ra=na.data.data[y],da=await i.get(`/items/navarch_assay_lot?filter[${l}]=${oa}&sort[]=${u}`,{params:{fields:[h,u,E,N,b]}});!function(a){if(!a||!a.data||!a.data.data||0===a.data.data.length)throw new Error("No assay lots data found, please ensure assay data has been entered for the selected parcel.");a.data.data.forEach((a=>{if(!a[h])throw new Error("Some assays in the selected parcel does not have a method value");if(!a[E])throw new Error("Some assays in the selected parcel does not have a commodity value");if(!a[N])throw new Error("Some assays in the selected parcel does not have a final assay value");if(!a[b])throw new Error("Some assays in the selected parcel does not have an assay uom value")}))}(da);const sa=da.data.data.reduce(((a,e)=>{const t=e[h],n=a.find((a=>a[0][h]===t));return n?n.push(e):a.push([e]),a}),[]),ia=null!=(o=null!=(n=null!=(e=null!=(a=sa.find((a=>"Outturn"===a[0][h])))?a:sa.find((a=>"Inturn Final"===a[0][h])))?e:sa.find((a=>"Inturn"===a[0][h])))?n:sa.find((a=>"Estimated"===a[0][h])))?o:sa.find((a=>"Planned"===a[0][h]));if(!ia)throw new Error("No assay lots with a valid method found in selected parcel");const ca=da.data.data.map((a=>a.commodity)).filter(((a,e,t)=>t.indexOf(a)===e)),la=ca.map(((a,e)=>`filter[_or][${e}][code]=${a}`)).join("&"),ua=await i.get(`/items/navarch_commodity?${la}`,{params:{fields:[H,K]}});!function(a){if(!a||!a.data||!a.data.data||0===a.data.data.length)throw new Error("No commodity mapping data found, please contact Navarch for assistance.");a.data.data.forEach((a=>{if(!a[H])throw new Error("Some commodities in the selected parcel does not have a name, please contact Navarch for assistance.");if(!a[K])throw new Error("Some commodities in the selected parcel does not have a code, please contact Navarch for assistance.")}))}(ua),console.log(`commodity mapping response: ${JSON.stringify(ua.data.data)}`);const ha=ua.data.data.reduce(((a,e)=>(a[e.code]=e.name,a)),{}),fa=ia.map((a=>({lotNumber:a[u],commodityName:ha[a[E]],commodityCode:a[E],analyticalAssay:a[N],assayUom:a[b]}))),pa=fa.filter((a=>null!==a.lotNumber)),ma=fa.filter((a=>null===a.lotNumber&&void 0===pa.find((e=>e.commodityCode===a.commodityCode)))),wa=await i.get(`/items/navarch_weight_lot?filter[${l}]=${ra}&filter[${h}]=Inturn&sort[]=${u}`,{params:{fields:[h,u,C,x,S,A]}});!function(a){if(!a||!a.data||!a.data.data||0===a.data.data.length)throw new Error("No weight lots data found, please ensure weight data has been entered for the selected parcel.");a.data.data.forEach((a=>{if(!a[h])throw new Error("Some weights in the selected parcel does not have a method");if(!a[x])throw new Error("Some weights in the selected parcel does not have a wet weight value");if(!a[S])throw new Error("Some weights in the selected parcel does not have a wet weight UOM");if(!a[C])throw new Error("Some weights in the selected parcel does not have a dry weight value");if(!a[A])throw new Error("Some weights in the selected parcel does not have a dry weight UOM")}))}(wa);const ya=wa.data.data.reduce(((a,e)=>{const t=e[h],n=a.find((a=>a[0][h]===t));return n?n.push(e):a.push([e]),a}),[]),ga=null!=(ea=null!=(aa=null!=(Z=null!=(s=ya.find((a=>"Outturn"===a[0][h])))?s:ya.find((a=>"Inturn Final"===a[0][h])))?Z:ya.find((a=>"Inturn"===a[0][h])))?aa:ya.find((a=>"Estimated"===a[0][h])))?ea:ya.find((a=>"Planned"===a[0][h]));if(!ga)throw new Error("No weight lots with a valid method found in selected parcel");const va=ga.map((a=>{var e,t,n;return{lotNumber:a[u],wetWeight:a[x],wetWeightUom:a[S],moisture:((null!=(e=a[x])?e:0)-(null!=(t=a[C])?t:0))/(null!=(n=a[x])?n:1)*100,moistureUom:"%",dryWeight:a[C],dryWeightUom:a[A]}})),_a=na.data.data[v];let $a;_a&&($a=await i.get(`/items/navarch_vessel/${_a}`,{params:{fields:[P]}}));const Ea=await i.get("/items/navarch_company",{params:{fields:[O,I,T,U,D,j,W,F,G,J,M]}});!function(a){if(!a||!a.data||!a.data.data)throw new Error("No company data found, please ensure that company data has been entered.");if(!a.data.data[O])throw new Error("Company name not found.");if(!a.data.data[I])throw new Error("Please ensure that company address line 1 has been entered.");if(!a.data.data[W])throw new Error("Company base country not found.");if(!a.data.data[F])throw new Error("Company phone code not found.");if(!a.data.data[G])throw new Error("Company phone number not found.");if(!a.data.data[J])throw new Error("Company signatory name not found.");if(!a.data.data[M])throw new Error("Company signatory title not found.")}(Ea);const Na=Ea.data.data,ba=Na[O],Ca=await i.get(`/items/${B}/${Na[F]}`,{params:{fields:[q]}});!function(a){if(!a||!a.data||!a.data.data)throw new Error("No company country phone code data found, please contact Navarch for assistance.");if(!a.data.data[q])throw new Error("Company-based country phone code not found, please contact Navarch for assistance.")}(Ca);const xa=Ca.data.data[q],Sa=Na[G],Aa=Na[I],ka=Na[T]?`,\n${Na[T]}`:"",Pa=Na[U]?`,\n${Na[U]}`:"",Oa=Na[D]?`,\n${Na[D]}`:"",Ia=await i.get(`/items/${B}/${Na[W]}`,{params:{fields:[R]}});!function(a){if(!a||!a.data||!a.data.data)throw new Error("No company country base data found, please contact Navarch for assistance.");if(!a.data.data[R])throw new Error("Company-based country name not found, please contact Navarch for assistance.")}(Ia);const Ta=Ia.data.data[R]?`, ${Ia.data.data[R]}`:"",Ua=`${Aa}${ka}${Pa}${Na[j]?` ${Na[j]}`:""}${Oa}${Ta}`,Da={signatoryName:Na[J],signatoryTitle:Na[M],company:ba},Wa=await i.get(`/items/navarch_counterparty/${na.data.data[m]}`,{params:{fields:[k]}});!function(a){if(!a||!a.data||!a.data.data)throw new Error("No counterparty data found, please ensure that counterparty data has been entered.");if(!a.data.data[k])throw new Error("Counterparty name not found, please ensure that the selected counterparty has a name.")}(Wa);const ja=await i.get(`/items/${z}/${na.data.data[_]}`,{params:{fields:[V,Y]}});L(ja,"origin");const Fa=await i.get(`/items/${z}/${na.data.data[$]}`,{params:{fields:[V,Y]}});L(Fa,"destination");const Ga={seller:ba,seller_address:Ua,seller_phone_number:`+${xa} ${Sa}`,buyer:Wa.data.data[k],vessel:$a?$a.data.data[P]:"N/A",contract_ref:`${na.data.data[f]}`,bl_date:X(new Date(na.data.data[g])),parcel_ref:`${na.data.data[p]} (#${na.data.data.id})`,port_of_loading:`${ja.data.data[V]}, ${ja.data.data[Y]}`,port_of_discharge:`${Fa.data.data[V]}, ${Fa.data.data[Y]}`,weights:va,assays:pa,composite_assays:ma,signatory:Da},Ja=await i.post("/generate/assay-exchange",Ga);if(200!==Ja.status)return console.log(`[generateProvWeightAndAssay] invoice response status: ${Ja.status}`),d.value=!1,void(r.value="Something went wrong when generating assay exchange cert, please contact Navarch for assistance.");const Ma=Ja.data;t("input",{...Ga,doc_name:Ma}),d.value=!1,Q(Ma)}catch(a){console.error("[generateProvWeightAndAssay] error=",a),r.value=a,d.value=!1}},copy:async function(){s.value=!0;const{id:a,user_created:e,date_created:t,user_updated:n,date_updated:o,assay_exchange_cert:d,...l}=c.value;console.log(`[assay exchange::copy] requestBody=${JSON.stringify(l)}`);const u=await i.post("/items/navarch_assay_exchange",l);if(200!==u.status)return console.log(`[assay exchange::copy] copy response status: ${u.status}`),void(r.value=`Failed to duplicate assay exchange with status ${u.status}`);s.value=!1,window.open(`/admin/content/navarch_assay_exchange/${u.data.data.id}`)},isCopying:s,viewPdf:Q};function L(a,e){if(!a||!a.data||!a.data.data)throw new Error(`No ${e} port data found, please contact Navarch to check that the selected port is still valid.`);if(!a.data.data[V])throw new Error(`Port name for ${e} port not found, please contact Navarch to check that the selected port is still valid.`);if(!a.data.data[Y])throw new Error("Port country for ${portType} port not found, please contact Navarch to check that the selected port is still valid.")}function Q(a){const t=null!=a?a:e.value.doc_name;console.log(`[viewPdf] doc name: ${t}`);const n=`/display-doc?filepath=${encodeURIComponent(`/data/uploads/${t}.pdf`)}`;window.open(n)}function X(a){const e=a.getDate(),t=a.getMonth(),n=a.getFullYear();return`${e} ${["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"][t]} ${n}`}}});const w={key:0},y={key:1};var g=[],v=[];!function(a,e){if(a&&"undefined"!=typeof document){var t,n=!0===e.prepend?"prepend":"append",o=!0===e.singleTag,r="string"==typeof e.container?document.querySelector(e.container):document.getElementsByTagName("head")[0];if(o){var d=g.indexOf(r);-1===d&&(d=g.push(r)-1,v[d]={}),t=v[d]&&v[d][n]?v[d][n]:v[d][n]=s()}else t=s();65279===a.charCodeAt(0)&&(a=a.substring(1)),t.styleSheet?t.styleSheet.cssText+=a:t.appendChild(document.createTextNode(a))}function s(){var a=document.createElement("style");if(a.setAttribute("type","text/css"),e.attributes)for(var t=Object.keys(e.attributes),o=0;o<t.length;o++)a.setAttribute(t[o],e.attributes[t[o]]);var d="prepend"===n?"afterbegin":"beforeend";return r.insertAdjacentElement(d,a),a}}(".margin-top-16px[data-v-64969d30] {\n  margin-top: 16px;\n}",{}),m.render=function(a,e,t,n,o,m){const g=r("v-button"),v=r("v-notice");return d(),s(i,null,[c(' <input :value="value" @input="handleChange($event.target.value)" /> '),c(" create a button only interface for Directus"),a.value?(d(),s("div",y,[l(g,{onClick:e[1]||(e[1]=()=>a.viewPdf())},{default:u((()=>[h("View Assay Exchange Cert ")])),_:1})])):(d(),s("div",w,[l(g,{onClick:e[0]||(e[0]=()=>a.generatePdf()),loading:a.isGeneraingDoc},{default:u((()=>[h("Generate Assay Exchange Cert")])),_:1},8,["loading"]),a.failureReason?(d(),f(v,{key:0},{default:u((()=>[h(p(a.failureReason),1)])),_:1})):c("v-if",!0)])),l(g,{class:"margin-top-16px",onClick:e[2]||(e[2]=()=>a.copy()),loading:a.isCopying},{default:u((()=>[h("Copy")])),_:1},8,["loading"])],64)},m.__scopeId="data-v-64969d30",m.__file="src/interface.vue";var _=e({id:"navarch-docgen-assay-exchange",name:"Navarch Assay Exchange Cert Generator Button",icon:"receipt_long",description:"This is a custom interface for Navarch's Assay Exchange Cert Generator Button.",component:m,options:null,types:["json"],group:"standard"});export{_ as default};
