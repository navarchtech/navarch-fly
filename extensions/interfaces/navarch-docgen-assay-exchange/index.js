import{useApi as a,defineInterface as e}from"@directus/extensions-sdk";import{defineComponent as t,ref as n,inject as o,resolveComponent as r,openBlock as d,createElementBlock as s,Fragment as i,createCommentVNode as c,createVNode as l,withCtx as u,createTextVNode as h,createBlock as f,toDisplayString as p}from"vue";var m=t({props:{value:{type:Object,default:null}},emits:["input"],setup(e,{emit:t}){const r=n(""),d=n(!1),s=n(!1),i=a(),c=o("values",n({})),l="foreign_key",u="lot_number",h="method",f="contract",p="shipment_code",m="counterparty",w="assay_results",y="weight_result",g="bl_date",v="vessel",_="origin",$="destination",E="commodity",N="seller_assay",b="assay_uom",C="dry_weight",x="wet_weight",A="wet_weight_uom",S="dry_weight_uom",P="name",k="name",O="name",D="line_1",T="line_2",F="city",U="state",j="country",I="zip",J="phone_code",B="phone_number",G="signatory_name",W="signatory_title",M="signature",R="logo",q="navarch_country",Y="name",z="phone_code",K="navarch_world_port",V="port_name",X="country",Z="name",H="code";return{isGeneraingDoc:d,failureReason:r,generatePdf:async function(){var a,e,n,o,s,ea,ta,na,oa;r.value="",d.value=!0;try{const ra=c.value.parcel,da=await i.get(`/items/navarch_parcel/${ra}`,{params:{fields:["id",w,y,f,p,m,g,v,_,$]}});!function(a){if(!a||!a.data||!a.data.data)throw new Error("No parcel data found, please ensure the selected parcel still exists.");if(!a.data.data[w])throw new Error("No assay data found in selected parcel");if(!a.data.data[y])throw new Error("No weight data found in selected parcel");if(!a.data.data[f])throw new Error("No contract found in selected parcel");if(!a.data.data[p])throw new Error("No shipment code found in selected parcel");if(!a.data.data[m])throw new Error("No counterparty found in selected parcel");if(!a.data.data[g])throw new Error("No bill of lading date found in selected parcel");if(!a.data.data[_])throw new Error("No origin port found in selected parcel");if(!a.data.data[$])throw new Error("No destination port found in selected parcel")}(da);const sa=da.data.data[w],ia=da.data.data[y],ca=await i.get(`/items/navarch_assay_lot?filter[${l}]=${sa}&sort[]=${u}`,{params:{fields:[h,u,E,N,b]}});!function(a){if(!a||!a.data||!a.data.data||0===a.data.data.length)throw new Error("No assay lots data found, please ensure assay data has been entered for the selected parcel.");a.data.data.forEach((a=>{if(!a[h])throw new Error("Some assays in the selected parcel does not have a method value");if(!a[E])throw new Error("Some assays in the selected parcel does not have a commodity value");if(!a[N])throw new Error("Some assays in the selected parcel does not have a final assay value");if(!a[b])throw new Error("Some assays in the selected parcel does not have an assay uom value")}))}(ca);const la=ca.data.data.reduce(((a,e)=>{const t=e[h],n=a.find((a=>a[0][h]===t));return n?n.push(e):a.push([e]),a}),[]),ua=null!=(o=null!=(n=null!=(e=null!=(a=la.find((a=>"Outturn"===a[0][h])))?a:la.find((a=>"Inturn Final"===a[0][h])))?e:la.find((a=>"Inturn"===a[0][h])))?n:la.find((a=>"Estimated"===a[0][h])))?o:la.find((a=>"Planned"===a[0][h]));if(!ua)throw new Error("No assay lots with a valid method found in selected parcel");const ha=ca.data.data.map((a=>a.commodity)).filter(((a,e,t)=>t.indexOf(a)===e)),fa=ha.map(((a,e)=>`filter[_or][${e}][code]=${a}`)).join("&"),pa=await i.get(`/items/navarch_commodity?${fa}`,{params:{fields:[Z,H]}});!function(a){if(!a||!a.data||!a.data.data||0===a.data.data.length)throw new Error("No commodity mapping data found, please contact Navarch for assistance.");a.data.data.forEach((a=>{if(!a[Z])throw new Error("Some commodities in the selected parcel does not have a name, please contact Navarch for assistance.");if(!a[H])throw new Error("Some commodities in the selected parcel does not have a code, please contact Navarch for assistance.")}))}(pa),console.log(`commodity mapping response: ${JSON.stringify(pa.data.data)}`);const ma=pa.data.data.reduce(((a,e)=>(a[e.code]=e.name,a)),{}),wa=ua.map((a=>({lotNumber:a[u],commodityName:ma[a[E]],commodityCode:a[E],analyticalAssay:a[N],assayUom:a[b]}))),ya=wa.filter((a=>null!==a.lotNumber)),ga=wa.filter((a=>null===a.lotNumber&&void 0===ya.find((e=>e.commodityCode===a.commodityCode)))),va=await i.get(`/items/navarch_weight_lot?filter[${l}]=${ia}&filter[${h}]=Inturn&sort[]=${u}`,{params:{fields:[h,u,C,x,A,S]}});!function(a){if(!a||!a.data||!a.data.data||0===a.data.data.length)throw new Error("No weight lots data found, please ensure weight data has been entered for the selected parcel.");a.data.data.forEach((a=>{if(!a[h])throw new Error("Some weights in the selected parcel does not have a method");if(!a[x])throw new Error("Some weights in the selected parcel does not have a wet weight value");if(!a[A])throw new Error("Some weights in the selected parcel does not have a wet weight UOM");if(!a[C])throw new Error("Some weights in the selected parcel does not have a dry weight value");if(!a[S])throw new Error("Some weights in the selected parcel does not have a dry weight UOM")}))}(va);const _a=va.data.data.reduce(((a,e)=>{const t=e[h],n=a.find((a=>a[0][h]===t));return n?n.push(e):a.push([e]),a}),[]),$a=null!=(na=null!=(ta=null!=(ea=null!=(s=_a.find((a=>"Outturn"===a[0][h])))?s:_a.find((a=>"Inturn Final"===a[0][h])))?ea:_a.find((a=>"Inturn"===a[0][h])))?ta:_a.find((a=>"Estimated"===a[0][h])))?na:_a.find((a=>"Planned"===a[0][h]));if(!$a)throw new Error("No weight lots with a valid method found in selected parcel");const Ea=$a.map((a=>{var e,t,n;return{lotNumber:a[u],wetWeight:a[x],wetWeightUom:a[A],moisture:((null!=(e=a[x])?e:0)-(null!=(t=a[C])?t:0))/(null!=(n=a[x])?n:1)*100,moistureUom:"%",dryWeight:a[C],dryWeightUom:a[S]}})),Na=da.data.data[v];let ba;Na&&(ba=await i.get(`/items/navarch_vessel/${Na}`,{params:{fields:[k]}}));const Ca=await i.get("/items/navarch_company",{params:{fields:[O,D,T,F,U,I,j,J,B,G,W,M,R]}});!function(a){if(!a||!a.data||!a.data.data)throw new Error("No company data found, please ensure that company data has been entered.");if(!a.data.data[O])throw new Error("Company name not found.");if(!a.data.data[D])throw new Error("Please ensure that company address line 1 has been entered.");if(!a.data.data[j])throw new Error("Company base country not found.");if(!a.data.data[J])throw new Error("Company phone code not found.");if(!a.data.data[B])throw new Error("Company phone number not found.");if(!a.data.data[G])throw new Error("Company signatory name not found.");if(!a.data.data[W])throw new Error("Company signatory title not found.")}(Ca);const xa=Ca.data.data,Aa=xa[O],Sa=await i.get(`/items/${q}/${xa[J]}`,{params:{fields:[z]}});!function(a){if(!a||!a.data||!a.data.data)throw new Error("No company country phone code data found, please contact Navarch for assistance.");if(!a.data.data[z])throw new Error("Company-based country phone code not found, please contact Navarch for assistance.")}(Sa);const Pa=Sa.data.data[z],ka=xa[B],Oa=xa[D],Da=xa[T]?`,\n${xa[T]}`:"",Ta=xa[F]?`,\n${xa[F]}`:"",Fa=xa[U]?`,\n${xa[U]}`:"",Ua=await i.get(`/items/${q}/${xa[j]}`,{params:{fields:[Y]}});!function(a){if(!a||!a.data||!a.data.data)throw new Error("No company country base data found, please contact Navarch for assistance.");if(!a.data.data[Y])throw new Error("Company-based country name not found, please contact Navarch for assistance.")}(Ua);const ja=Ua.data.data[Y]?`, ${Ua.data.data[Y]}`:"",Ia=`${Oa}${Da}${Ta}${xa[I]?` ${xa[I]}`:""}${Fa}${ja}`,Ja={signatoryName:xa[G],signatoryTitle:xa[W],signature:xa[M],company:Aa},Ba=await i.get(`/items/navarch_counterparty/${da.data.data[m]}`,{params:{fields:[P]}});!function(a){if(!a||!a.data||!a.data.data)throw new Error("No counterparty data found, please ensure that counterparty data has been entered.");if(!a.data.data[P])throw new Error("Counterparty name not found, please ensure that the selected counterparty has a name.")}(Ba);const Ga=await i.get(`/items/${K}/${da.data.data[_]}`,{params:{fields:[V,X]}});Q(Ga,"origin");const Wa=await i.get(`/items/${K}/${da.data.data[$]}`,{params:{fields:[V,X]}});Q(Wa,"destination");const Ma={company_logo:null!=(oa=xa[R])?oa:void 0,seller:Aa,seller_address:Ia,seller_phone_number:`+${Pa} ${ka}`,buyer:Ba.data.data[P],vessel:ba?ba.data.data[k]:"N/A",contract_ref:`${da.data.data[f]}`,bl_date:aa(new Date(da.data.data[g])),parcel_ref:`${da.data.data[p]} (#${da.data.data.id})`,port_of_loading:`${Ga.data.data[V]}, ${Ga.data.data[X]}`,port_of_discharge:`${Wa.data.data[V]}, ${Wa.data.data[X]}`,weights:Ea,assays:ya,composite_assays:ga,signatory:Ja},Ra=await i.post("/generate/assay-exchange",Ma);if(200!==Ra.status)return console.log(`[generateProvWeightAndAssay] invoice response status: ${Ra.status}`),d.value=!1,void(r.value="Something went wrong when generating assay exchange cert, please contact Navarch for assistance.");const qa=await async function(a){const e=function(a){console.log("[convertJsonToFormData] json=",JSON.stringify(a));const e=new FormData;for(let t in a)"file"!==t&&e.append(t,a[t]);const t=a.file,n=function(a,e){const t=atob(a),n=new ArrayBuffer(t.length),o=new Uint8Array(n);for(let a=0;a<t.length;a++)o[a]=t.charCodeAt(a);const r=new Blob([o],{type:e});return r}(t,"application/pdf");return e.append("file",n,`${a.filename_download}.pdf`),e}(a),t=await i.post("/files",e,{headers:{"Content-Type":"multipart/form-data"}});if(200!==t.status)throw console.error(`[uploadGeneratedDoc] uploadedFileData status: ${t.status}`),new Error("A failure occured while trying to upload the generated document. Please try again.");return t.data.data.id}(Ra.data);t("input",{...Ma,doc_name:qa}),d.value=!1,L(qa)}catch(a){console.error("[generateProvWeightAndAssay] error=",a),r.value=a,d.value=!1}},copy:async function(){s.value=!0;const{id:a,user_created:e,date_created:t,user_updated:n,date_updated:o,assay_exchange_cert:d,...l}=c.value;console.log(`[assay exchange::copy] requestBody=${JSON.stringify(l)}`);const u=await i.post("/items/navarch_assay_exchange",l);if(200!==u.status)return console.log(`[assay exchange::copy] copy response status: ${u.status}`),void(r.value=`Failed to duplicate assay exchange with status ${u.status}`);s.value=!1,window.open(`/admin/content/navarch_assay_exchange/${u.data.data.id}`)},isCopying:s,viewPdf:L};function L(a){const t=null!=a?a:e.value.doc_name;console.log(`[viewPdf] doc ID: ${t}`),window.open(`/assets/${t}?access_token=9TKZlOUjs29Svyop45nyyyN02lYPlX_x`)}function Q(a,e){if(!a||!a.data||!a.data.data)throw new Error(`No ${e} port data found, please contact Navarch to check that the selected port is still valid.`);if(!a.data.data[V])throw new Error(`Port name for ${e} port not found, please contact Navarch to check that the selected port is still valid.`);if(!a.data.data[X])throw new Error("Port country for ${portType} port not found, please contact Navarch to check that the selected port is still valid.")}function aa(a){const e=a.getDate(),t=a.getMonth(),n=a.getFullYear();return`${e} ${["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"][t]} ${n}`}}});const w={key:0},y={key:1};var g=[],v=[];!function(a,e){if(a&&"undefined"!=typeof document){var t,n=!0===e.prepend?"prepend":"append",o=!0===e.singleTag,r="string"==typeof e.container?document.querySelector(e.container):document.getElementsByTagName("head")[0];if(o){var d=g.indexOf(r);-1===d&&(d=g.push(r)-1,v[d]={}),t=v[d]&&v[d][n]?v[d][n]:v[d][n]=s()}else t=s();65279===a.charCodeAt(0)&&(a=a.substring(1)),t.styleSheet?t.styleSheet.cssText+=a:t.appendChild(document.createTextNode(a))}function s(){var a=document.createElement("style");if(a.setAttribute("type","text/css"),e.attributes)for(var t=Object.keys(e.attributes),o=0;o<t.length;o++)a.setAttribute(t[o],e.attributes[t[o]]);var d="prepend"===n?"afterbegin":"beforeend";return r.insertAdjacentElement(d,a),a}}(".margin-top-16px[data-v-64969d30] {\n  margin-top: 16px;\n}",{}),m.render=function(a,e,t,n,o,m){const g=r("v-button"),v=r("v-notice");return d(),s(i,null,[c(' <input :value="value" @input="handleChange($event.target.value)" /> '),c(" create a button only interface for Directus"),a.value?(d(),s("div",y,[l(g,{onClick:e[1]||(e[1]=()=>a.viewPdf())},{default:u((()=>[h("View Assay Exchange Cert ")])),_:1})])):(d(),s("div",w,[l(g,{onClick:e[0]||(e[0]=()=>a.generatePdf()),loading:a.isGeneraingDoc},{default:u((()=>[h("Generate Assay Exchange Cert")])),_:1},8,["loading"]),a.failureReason?(d(),f(v,{key:0},{default:u((()=>[h(p(a.failureReason),1)])),_:1})):c("v-if",!0)])),l(g,{class:"margin-top-16px",onClick:e[2]||(e[2]=()=>a.copy()),loading:a.isCopying},{default:u((()=>[h("Copy")])),_:1},8,["loading"])],64)},m.__scopeId="data-v-64969d30",m.__file="src/interface.vue";var _=e({id:"navarch-docgen-assay-exchange",name:"Navarch Assay Exchange Cert Generator Button",icon:"receipt_long",description:"This is a custom interface for Navarch's Assay Exchange Cert Generator Button.",component:m,options:null,types:["json"],group:"standard"});export{_ as default};
