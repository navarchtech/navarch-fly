import{useApi as e,defineInterface as t}from"@directus/extensions-sdk";import{ref as a,defineComponent as o,inject as l,watch as i,resolveComponent as n,resolveDirective as r,openBlock as d,createElementBlock as s,Fragment as c,createCommentVNode as u,createVNode as h,withCtx as g,createElementVNode as v,toDisplayString as p,withDirectives as w,createBlock as m,createTextVNode as f,normalizeClass as b,pushScopeId as W,popScopeId as D}from"vue";const y=[];for(let e=0;e<256;++e)y.push((e+256).toString(16).slice(1));let I;const C=new Uint8Array(16);function $(){if(!I){if("undefined"==typeof crypto||!crypto.getRandomValues)throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");I=crypto.getRandomValues.bind(crypto)}return I(C)}var _={randomUUID:"undefined"!=typeof crypto&&crypto.randomUUID&&crypto.randomUUID.bind(crypto)};function S(e,t,a){if(_.randomUUID&&!t&&!e)return _.randomUUID();const o=(e=e||{}).random||(e.rng||$)();if(o[6]=15&o[6]|64,o[8]=63&o[8]|128,t){a=a||0;for(let e=0;e<16;++e)t[a+e]=o[e];return t}return function(e,t=0){return(y[e[t+0]]+y[e[t+1]]+y[e[t+2]]+y[e[t+3]]+"-"+y[e[t+4]]+y[e[t+5]]+"-"+y[e[t+6]]+y[e[t+7]]+"-"+y[e[t+8]]+y[e[t+9]]+"-"+y[e[t+10]]+y[e[t+11]]+y[e[t+12]]+y[e[t+13]]+y[e[t+14]]+y[e[t+15]]).toLowerCase()}(o)}const L="related_parcel",M="lot_number",E="contract",U="navarch_weight_lot",x="dry_weight",R="wet_weight",k="wet_weight_uom",O="dry_weight_uom",N="moisture",P="weight_uom",A="moisture_uom",T="methods",V="wet_symbol",F="dry_symbol";var B=(e=>(e[e.Estimated=0]="Estimated",e[e.Planned=10]="Planned",e[e.Inturn=20]="Inturn",e[e["Inturn Final"]=30]="Inturn Final",e[e.Outturn=40]="Outturn",e))(B||{}),K=Object.defineProperty,H=Object.getOwnPropertySymbols,j=Object.prototype.hasOwnProperty,J=Object.prototype.propertyIsEnumerable,q=(e,t,a)=>t in e?K(e,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[t]=a;function z(e,t){return e.reduce(((e,a)=>{var o,l;return e+(null!=(l=parseFloat(null!=(o=a[t])?o:"0"))?l:0)}),0)}function G(e,t){var a;return 0!==e.length&&e[0]&&null!=(a=e[0][t])?a:null}function Q(e){const t=B[e];if(!t&&isNaN(t))throw new Error(`Invalid method type ${e}, please contact Navarch for support`);return t}function X(e,t=2,a=!1){if(null==e||isNaN(e))return null;const o=a&&e<0;return o&&(e*=-1),Math.round(e*Math.pow(10,t))/Math.pow(10,t)*(o?-1:1)}function Y(e,t=2,a=!0){if(isNaN(e)||null==e)return"-";const o=Math.round(e*Math.pow(10,t))/Math.pow(10,t),[l,i]=o.toString().split("."),n=l?l.replace(/\B(?=(\d{3})+(?!\d))/g,","):0;if(!i&&!a)return n;return`${n}.${(null!=i?i:"").padEnd(t,"0")}`}function Z(e){return e.map((e=>((e,t)=>{for(var a in t||(t={}))j.call(t,a)&&q(e,a,t[a]);if(H)for(var a of H(t))J.call(t,a)&&q(e,a,t[a]);return e})({},e)))}const ee=a([{text:"Method",value:"method",sortable:!1,width:150,align:"left"},{text:"Wet Weight",value:"wetWeight",sortable:!1,width:150,align:"left"},{text:"Moisture",value:"moisture",sortable:!1,width:150,align:"left"},{text:"Dry Weight",value:"dryWeight",sortable:!1,width:150,align:"left"}]),te=a([{text:"Wet Weight",value:"compositeWetWeight",sortable:!1,width:150,align:"left"},{text:"Moisture",value:"compositeMoisture",sortable:!1,width:150,align:"left"},{text:"Dry Weight",value:"compositeDryWeight",sortable:!1,width:150,align:"left"}]),ae=a([{text:"To Delete",value:"delete",sortable:!1,width:60,align:"left"},{text:"Lot",value:"lot_number",sortable:!1,width:60,align:"left"},{text:"Wet Weight",value:"wet_weight",sortable:!1,width:200,align:"left"},{text:"Moisture (%)",value:"moisture",sortable:!1,width:200,align:"left"},{text:"Dry Weight",value:"dry_weight",sortable:!1,width:200,align:"left"}]);var oe=o({props:{value:{type:String,default:null}},emits:["input"],setup(t,{emit:o}){const n=e(),r=l("values",a({}));let d=null;i((()=>r.value.id),(e=>{v(e),null!==e&&(g.value.editingDisabledReason=null)})),i((()=>r.value.parcel_finalised),(async e=>{null!==r.value.id&&(console.log(`[navarch-parcellots-weight-v2:watch:weightLotsByMethod:parcelId=${r.value.id}] change in parcel finalised field in the parcel form detected with a new value=${e}`),g.value.editingDisabledReason=e?"Cannot edit weight lot data to a finalised parcel":null)}),{immediate:!0});const s=a({create:[],update:[],delete:[]});i(s,(e=>{console.log(`[navarch-parcellots-weight-v2:watch:editedWeightLotIds:parcelId=${r.value.id}] new edited ids=\n${JSON.stringify(e)}`),null!==g.value.saveFunctionDisabledReason&&(s.value.create.length>0||s.value.update.length>0||s.value.delete.length>0)&&(console.log(`[navarch-parcellots-weight-v2:watch:editedWeightLotIds:parcelId=${r.value.id}] changes detected, enabling save functionality`),g.value.saveFunctionDisabledReason=null),null===g.value.saveFunctionDisabledReason&&0===s.value.create.length&&0===s.value.update.length&&0===s.value.delete.length&&(console.log(`[navarch-parcellots-weight-v2:watch:editedWeightLotIds:parcelId=${r.value.id}] all changes reverted, disabling save functionality if previously enabled`),g.value.saveFunctionDisabledReason="Make changes to the weight lots to enable saving")}),{deep:!0});const c=a({Estimated:null,Planned:null,Inturn:null,"Inturn Final":null,Outturn:null}),u=a([]);i(c,(e=>{console.log(`[navarch-parcellots-weight-v2:watch:weightLotsByMethod:parcelId=${r.value.id}] new weight lots=\n${JSON.stringify(e)}`),u.value=Object.values(e).filter((e=>!!e))}),{deep:!0});const h=a([]);i(h,(e=>{console.log(`[navarch-parcellots-weight-v2:watch:methodSelection:parcelId=${r.value.id}] new method selection=\n${JSON.stringify(e)}`)}),{deep:!0});const g=a({isConfirmSavePopupOpen:!1,isConfirmDeletePopupOpen:!1,isConfirmClosePopupOpen:!1,isAddingNewWeightByMethod:!1,isLoadingWhilePatching:!1,isCompositeWeightRecalculatedWithEditedLots:!0,contractData:null,editingDisabledReason:r.value.id?null:"Please save the parcel first before adding a weight lot",saveFunctionDisabledReason:null,isDrawerOpen:!1,editableWeightInDrawer:null});return i(g,(e=>{console.log(`[navarch-parcellots-weight-v2:watch:interfaceState:parcelId=${r.value.id}] new state=\n${JSON.stringify(e)}`)}),{deep:!0}),v(r.value.id),i((()=>r.value[E]),(async e=>{if(console.log(`[navarch-parcellots-weight-v2:watch:contract field:parcelId=${r.value.id}] new contract id=${e}`),null===e)return g.value.contractData=null,void(g.value.editingDisabledReason="Selecting a contract for this parcel is required to create/edit weight lots");m()}),{immediate:!0}),{weightLotsByMethod:c,weightLotsByMethodList:u,interfaceState:g,methodSelection:h,onKeyDownInWeightLotEditorCell:function(e,t,a){if(console.log(`[navarch-parcellots-weight-v2:onKeyDownInWeightLotEditorCell:parcelId=${r.value.id}] started`),"Enter"===a.code||"NumpadEnter"===a.code)return function(e){var t,a,o;console.log(`[navarch-parcellots-weight-v2:onFocusNextWeightLotEditorCell:parcelId=${r.value.id}] started`);const l=null==(t=e.target||e.srcElement)?void 0:t.id;if(!l)return void console.error("currentElementId is not defined");if(!/weightlots-(\w)+-(\d)+/.test(l))return void console.error(`current element id=${l} is not in the correct format`);const[i,n,d]=l.split("-"),s=parseInt(d),c=parseInt(n);let u=`${i}-`;if(Array.isArray(null==(a=g.value.editableWeightInDrawer)?void 0:a.editableLots)&&s<g.value.editableWeightInDrawer.editableLots.length)u+=`${c}-${s+1}`;else{const e=3===c;u+=`${e?c:c+1}-${e?s:1}`}null==(o=document.getElementById(u))||o.focus(),console.log(`[navarch-parcellots-weight-v2:onFocusNextWeightLotEditorCell:parcelId=${r.value.id}] completed`)}(a),void console.log(`[navarch-parcellots-weight-v2:onKeyDownInWeightLotEditorCell:parcelId=${r.value.id}] completed, focusing on the next field`);d&&clearTimeout(d);d=setTimeout((()=>{!function(e,t){console.log(`[navarch-parcellots-weight-v2:onReevaluateWeightLotEditorCells:parcelId=${r.value.id}] started`);let a=!1;if(e.wet_weight&&e.moisture&&e.dry_weight)switch(t){case"wet_weight":e.wet_weight=X(e.wet_weight,4),e.moisture=X((e.wet_weight-e.dry_weight)/e.wet_weight*100,4),a=!0;break;case"moisture":e.moisture=X(e.moisture,4),e.dry_weight=X(e.wet_weight*(1-e.moisture/100),4),a=!0;break;case"dry_weight":e.dry_weight=X(e.dry_weight,4),e.moisture=X((e.wet_weight-e.dry_weight)/e.wet_weight*100,4),a=!0}else e.wet_weight&&e.moisture&&!e.dry_weight?(e.dry_weight=X(e.wet_weight*(1-e.moisture/100),4),console.debug(`[navarch-parcellots-weight-v2:onReevaluateWeightLotEditorCells:parcelId=${r.value.id}] wet weight=${e.wet_weight}; moisture=${e.moisture}; evaluated dry weight=${e.dry_weight}`),a=!0):e.wet_weight&&!e.moisture&&e.dry_weight?(e.moisture=X((e.wet_weight-e.dry_weight)/e.wet_weight*100,4),console.debug(`[navarch-parcellots-weight-v2:onReevaluateWeightLotEditorCells:parcelId=${r.value.id}] wet weight=${e.wet_weight}; dry weight=${e.dry_weight}; evaluated moisture=${e.moisture}`),a=!0):!e.wet_weight&&e.moisture&&e.dry_weight&&(e.wet_weight=X(e.dry_weight/(1-e.moisture/100),4),console.debug(`[navarch-parcellots-weight-v2:onReevaluateWeightLotEditorCells:parcelId=${r.value.id}] moisture=${e.moisture}; dry weight=${e.dry_weight}; evaluated wet weight=${e.wet_weight}`),a=!0);if(a){-1===s.value.update.indexOf(e.id)&&(g.value.isCompositeWeightRecalculatedWithEditedLots=!1,s.value.update.push(e.id))}console.log(`[navarch-parcellots-weight-v2:onReevaluateWeightLotEditorCells:parcelId=${r.value.id}] completed`)}(e,t)}),500),console.log(`[navarch-parcellots-weight-v2:onKeyDownInWeightLotEditorCell:parcelId=${r.value.id}] completed`)},onMainWeightLotTableRowClick:function(e){var t,a,o,l,i;console.log(`[navarch-parcellots-weight-v2:onMainWeightLotTableRowClick:parcelId=${r.value.id}] started with item=${JSON.stringify(e.item)}`);const n=e.item;g.value.isDrawerOpen=!0,g.value.saveFunctionDisabledReason="Make changes to the weight lots first before saving",g.value.editableWeightInDrawer={compositeWeightId:n.id,commonMethodDisplay:n.method,commonDryWeightUom:null!=(t=n.dryWeightUom)?t:"-",commonWetWeightUom:null!=(a=n.wetWeightUom)?a:"-",compositeDryWeight:null!=(o=n.dryWeight)?o:null,compositeWetWeight:null!=(l=n.wetWeight)?l:null,compositeMoisture:null!=(i=n.moisture)?i:null,editableLots:Z(n.lots)}},WeightCompositeTableHeaders:ee,WeightCompositeTableInDrawerHeaders:te,WeightLotTableHeaders:ae,formatNumber:Y,getMethodRank:Q,onDrawerClickDeleteWeightLotButton:function(e){console.log(`[navarch-parcellots-weight-v2:onDrawerClickDeleteWeightLotButton:parcelId=${r.value.id}] started`);const t=s.value.delete.indexOf(e);-1===t?(g.value.isCompositeWeightRecalculatedWithEditedLots=!1,s.value.delete.push(e)):(g.value.isCompositeWeightRecalculatedWithEditedLots=!1,s.value.delete.splice(t,1));console.log(`[navarch-parcellots-weight-v2:onDrawerClickDeleteWeightLotButton:parcelId=${r.value.id}] completed`)},onDrawerClickAddWeightLot:function(){var e,t,a,o;if(console.log(`[navarch-parcellots-weight-v2:onDrawerClickAddWeightLot:parcelId=${r.value.id}] started`),!(null==(e=g.value.editableWeightInDrawer)?void 0:e.commonMethodDisplay))return void(g.value.editingDisabledReason="Please select a method first before adding a new weight lot");if(!(null==(t=g.value.editableWeightInDrawer)?void 0:t.commonDryWeightUom)||!(null==(a=g.value.editableWeightInDrawer)?void 0:a.commonWetWeightUom))return void(g.value.editingDisabledReason="The dry/wet weight UOMs are not set, please ensure a weight unit has been selected for measuring weight lots in the associated contract");Array.isArray(null==(o=g.value.editableWeightInDrawer)?void 0:o.editableLots)||(g.value.editableWeightInDrawer.editableLots=[]);if(!r.value.id)return void console.error(`[navarch-parcellots-weight-v2:onDrawerClickAddWeightLot:parcelId=${r.value.id}] parcel id is not set, cannot add new weight lot`);const l={id:S(),lot_number:g.value.editableWeightInDrawer.editableLots.length+1,method:g.value.editableWeightInDrawer.commonMethodDisplay,dry_weight_uom:g.value.editableWeightInDrawer.commonDryWeightUom,wet_weight_uom:g.value.editableWeightInDrawer.commonWetWeightUom,related_parcel:r.value.id};g.value.editableWeightInDrawer.editableLots.push(l),g.value.isCompositeWeightRecalculatedWithEditedLots=!1,s.value.create.push(l.id),console.log(`[navarch-parcellots-weight-v2:onDrawerClickAddWeightLot:parcelId=${r.value.id}] completed`)},onDrawerClose:function(){console.log(`[navarch-parcellots-weight-v2:onDrawerClose:parcelId=${r.value.id}] started`);s.value.create.length>0||s.value.update.length>0||s.value.delete.length>0?g.value.isConfirmClosePopupOpen=!0:w();console.log(`[navarch-parcellots-weight-v2:onDrawerClose:parcelId=${r.value.id}] completed`)},onConfirmDrawerClose:function(){console.log(`[navarch-parcellots-weight-v2:onConfirmDrawerClose:parcelId=${r.value.id}] started`),g.value.isConfirmClosePopupOpen=!1,w(),console.log(`[navarch-parcellots-weight-v2:onConfirmDrawerClose:parcelId=${r.value.id}] completed`)},onConfirmDrawerSave:async function(){console.log(`[navarch-parcellots-weight-v2:onConfirmSave:parcelId=${r.value.id}] started`),g.value.isConfirmSavePopupOpen=!1,g.value.isLoadingWhilePatching=!0,await async function(){var e,t,a,o;console.log(`[navarch-parcellots-weight-v2:saveWeightLotChanges:parcelId=${r.value.id}] started`),console.log(`[navarch-parcellots-weight-v2:stageAllChanges:parcelId=${r.value.id}] started`),s.value.create=s.value.create.filter((e=>!s.value.delete.includes(e))),s.value.update=s.value.update.filter((e=>!s.value.delete.includes(e))),s.value.update=s.value.update.filter((e=>!s.value.create.includes(e))),console.log(`[navarch-parcellots-weight-v2:stageAllChanges:parcelId=${r.value.id}] completed`);try{if(await async function(){if(console.log(`[navarch-parcellots-weight-v2:updateExistingWeightLots:parcelId=${r.value.id}] started`),s.value.update.length<=0)return void console.log(`[navarch-parcellots-weight-v2:updateExistingWeightLots:parcelId=${r.value.id}] completed, no weight lots to update`);const e=s.value.update.map((e=>{var t;return null===g.value.editableWeightInDrawer?(console.warn(`[navarch-parcellots-weight-v2:updateExistingWeightLots:parcelId=${r.value.id}] something went wrong, list of edited weight lots is null`),null):null!=(t=g.value.editableWeightInDrawer.editableLots.find((t=>t.id===e)))?t:null}));console.debug(`[navarch-parcellots-weight-v2:updateExistingWeightLots:parcelId=${r.value.id}] lotsToUpdate=${JSON.stringify(e)}`);const t=await n.patch(`/items/${U}`,e);if(200!==t.status)throw new Error(`Failed to update weight lots: ${t.statusText}`);console.log(`[navarch-parcellots-weight-v2:updateExistingWeightLots:parcelId=${r.value.id}] completed`)}(),await async function(){if(console.log(`[navarch-parcellots-weight-v2:createNewWeightLots:parcelId=${r.value.id}] started`),s.value.create.length<=0)return void console.log(`[navarch-parcellots-weight-v2:createNewWeightLots:parcelId=${r.value.id}] completed, no weight lots to create`);const e=s.value.create.map((e=>{var t;return null===g.value.editableWeightInDrawer?(console.warn(`[navarch-parcellots-weight-v2:createNewWeightLots:parcelId=${r.value.id}] something went wrong, list of edited weight lots is null`),null):null!=(t=g.value.editableWeightInDrawer.editableLots.find((t=>t.id===e)))?t:null}));console.debug(`[navarch-parcellots-weight-v2:createNewWeightLots:parcelId=${r.value.id}] lotsToCreate=${JSON.stringify(e)}`);const t=await n.post(`/items/${U}`,e);if(200!==t.status)throw new Error(`Failed to create weight lots: ${t.statusText}`);console.log(`[navarch-parcellots-weight-v2:createNewWeightLots:parcelId=${r.value.id}] completed`)}(),await async function(){if(console.log(`[navarch-parcellots-weight-v2:deleteExistingWeightLots:parcelId=${r.value.id}] started`),s.value.delete.length<=0)return void console.log(`[navarch-parcellots-weight-v2:deleteExistingWeightLots:parcelId=${r.value.id}] completed, no weight lots to delete`);const e=await n.delete(`/items/${U}`,{data:s.value.delete});if(204!==e.status)throw new Error(`Failed to delete weight lots: ${e.status}`);if(null===g.value.editableWeightInDrawer)return void console.warn(`[navarch-parcellots-weight-v2:deleteExistingWeightLots:parcelId=${r.value.id}] something went wrong, list of edited weight lots is null`);const t=g.value.editableWeightInDrawer.editableLots.filter((e=>!s.value.delete.includes(e.id))).map(((e,t)=>({id:e.id,lot_number:t+1}))),a=await n.patch(`/items/${U}`,t);if(200!==a.status)throw new Error(`Failed to patch weight lots numbers after deletion of weight lots: ${a.statusText}`);g.value.editableWeightInDrawer.editableLots=a.data.data,console.log(`[navarch-parcellots-weight-v2:deleteExistingWeightLots:parcelId=${r.value.id}] completed`)}(),g.value.isCompositeWeightRecalculatedWithEditedLots||f(),await async function(){var e,t,a;if(!g.value.editableWeightInDrawer)throw new Error("Editable weight in drawer is null, cannot save composite weight");if(!g.value.editableWeightInDrawer.commonMethodDisplay)throw new Error("Method is not set in the drawer, cannot save composite weight");const o={id:g.value.editableWeightInDrawer.compositeWeightId,lot_number:null,method:g.value.editableWeightInDrawer.commonMethodDisplay,dry_weight:null!=(e=g.value.editableWeightInDrawer.compositeDryWeight)?e:void 0,dry_weight_uom:g.value.editableWeightInDrawer.commonDryWeightUom,wet_weight:null!=(t=g.value.editableWeightInDrawer.compositeWetWeight)?t:void 0,wet_weight_uom:g.value.editableWeightInDrawer.commonWetWeightUom,moisture:null!=(a=g.value.editableWeightInDrawer.compositeMoisture)?a:void 0,related_parcel:r.value.id};let l;l=g.value.isAddingNewWeightByMethod?await n.post(`/items/${U}`,o):await n.patch(`/items/${U}/${o.id}`,o);if(200!==l.status)throw new Error(`Failed to save composite weight: ${l.statusText}`)}(),!(null==(e=g.value.editableWeightInDrawer)?void 0:e.commonMethodDisplay))throw new Error("Method is not set in the drawer, cannot save weight lots");c.value[g.value.editableWeightInDrawer.commonMethodDisplay]={id:g.value.editableWeightInDrawer.compositeWeightId,method:g.value.editableWeightInDrawer.commonMethodDisplay,dryWeight:null!=(t=g.value.editableWeightInDrawer.compositeDryWeight)?t:void 0,dryWeightUom:g.value.editableWeightInDrawer.commonDryWeightUom,wetWeight:null!=(a=g.value.editableWeightInDrawer.compositeWetWeight)?a:void 0,wetWeightUom:g.value.editableWeightInDrawer.commonWetWeightUom,moisture:null!=(o=g.value.editableWeightInDrawer.compositeMoisture)?o:void 0,lots:g.value.editableWeightInDrawer.editableLots}}catch(e){console.error(`[navarch-parcellots-weight-v2:saveWeightLotChanges:parcelId=${r.value.id}] failed with reason: ${e}`)}console.log(`[navarch-parcellots-weight-v2:saveWeightLotChanges:parcelId=${r.value.id}] completed`)}(),g.value.isLoadingWhilePatching=!1,w(),console.log(`[navarch-parcellots-weight-v2:onConfirmSave:parcelId=${r.value.id}] completed`)},onDrawerSave:function(){console.log(`[navarch-parcellots-weight-v2:onSaveClicked:parcelId=${r.value.id}] started`),g.value.isConfirmSavePopupOpen=!0,console.log(`[navarch-parcellots-weight-v2:onSaveClicked:parcelId=${r.value.id}] completed`)},onDrawerDeleteWeight:function(){console.log(`[navarch-parcellots-weight-v2:onDrawerDeleteWeight:parcelId=${r.value.id}] started`),g.value.isConfirmDeletePopupOpen=!0,console.log(`[navarch-parcellots-weight-v2:onDrawerDeleteWeight:parcelId=${r.value.id}] completed`)},onConfirmDrawerDeleteWeight:async function(){console.log(`[navarch-parcellots-weight-v2:onConfirmDeleteWeight:parcelId=${r.value.id}] started`),g.value.isConfirmDeletePopupOpen=!1,g.value.isLoadingWhilePatching=!0,await async function(){if(console.log(`[navarch-parcellots-weight-v2:deleteWeight:parcelId=${r.value.id}] started`),!g.value.editableWeightInDrawer)return void console.warn(`[navarch-parcellots-weight-v2:deleteWeight:parcelId=${r.value.id}] editableWeightInDrawer is null, cannot delete weight lots`);if(null===g.value.editableWeightInDrawer.commonMethodDisplay)return void console.log(`[navarch-parcellots-weight-v2:deleteWeight:parcelId=${r.value.id}] completed, commonMethodDisplay is null, no weight lots to delete`);const e=g.value.editableWeightInDrawer.editableLots.map((e=>e.id));console.log(`adding ${g.value.editableWeightInDrawer.compositeWeightId} to the list of weight lots to delete`),e.push(g.value.editableWeightInDrawer.compositeWeightId);const t=await n.delete(`/items/${U}`,{data:e});if(204!==t.status)return void console.error(`[navarch-parcellots-weight-v2:deleteWeight:parcelId=${r.value.id}] failed to delete weight lots, received response with status code: ${t.status}`);c.value[g.value.editableWeightInDrawer.commonMethodDisplay]=null,console.log(`[navarch-parcellots-weight-v2:deleteWeight:parcelId=${r.value.id}] completed`)}(),g.value.isLoadingWhilePatching=!1,w(),console.log(`[navarch-parcellots-weight-v2:onConfirmDeleteWeight:parcelId=${r.value.id}] completed`)},onMainPageClickAddWeight:function(){if(console.log(`[navarch-parcellots-weight-v2:onMainPageClickAddWeight:parcelId=${r.value.id}] started`),!g.value.contractData)return void console.warn(`[navarch-parcellots-weight-v2:onMainPageClickAddWeight:parcelId=${r.value.id}] contract data not loaded yet, cannot add new weight lot`);g.value.isAddingNewWeightByMethod=!0,function(){if(console.log("[navarch-parcellots-weight-v2:setSelectableMethodSelection:parcelId=${formValues.value.id}] start"),!g.value.contractData)return h.value=[],void console.log("[navarch-parcellots-weight-v2:setSelectableMethodSelection:parcelId=${formValues.value.id}] completed with no contract data found");const e=g.value.contractData.methods.map((e=>({value:e,text:e})));console.debug(`[navarch-parcellots-weight-v2:setSelectableMethodSelection:parcelId=\${formValues.value.id}] allMethodSelectionInContract=${JSON.stringify(e)}`),Object.keys(c.value).forEach((t=>{if(console.debug(`[navarch-parcellots-weight-v2:setSelectableMethodSelection:parcelId=${r.value.id}] ${t};;${JSON.stringify(c.value[t])}`),c.value[t]){console.debug(`[navarch-parcellots-weight-v2:setSelectableMethodSelection:parcelId=${r.value.id}] removing method ${t} (rank: ${B[t]}) from selectable methods`);const a=e.findIndex((e=>e.value===t));e.splice(a,1)}})),h.value=e,console.log(`[navarch-parcellots-weight-v2:setSelectableMethodSelection:parcelId=\${formValues.value.id}] completed for parcel id=${r.value.id}`)}(),g.value.saveFunctionDisabledReason="Select a method and add new weight lots first before saving",g.value.isDrawerOpen=!0,g.value.editableWeightInDrawer={compositeWeightId:S(),commonMethodDisplay:null,compositeDryWeight:null,commonDryWeightUom:g.value.contractData.dryWeightUom,compositeWetWeight:null,commonWetWeightUom:g.value.contractData.wetWeightUom,compositeMoisture:null,editableLots:[]},console.log(`[navarch-parcellots-weight-v2:onMainPageClickAddWeight:parcelId=${r.value.id}] completed`)},onHoverWeightLotDeleteButtonForTooltip:function(e){const t=s.value.delete.indexOf(e);if(-1===t)return"Remove Lot";return"Undo Removed Lot"},onRefetchContractData:m,onRecalculateCompositeWeight:f,getDeleteIconName:function(e){const t=s.value.delete.findIndex((t=>t===e));if(-1===t)return"close";return"settings_backup_restore"},getDeleteIconColour:function(e){const t=s.value.delete.findIndex((t=>t===e));if(-1===t)return"v-icon-delete-button-small-foreground-subdued";return"v-icon-delete-button-small-red"}};function v(e){null!==e?n.get(`/items/${U}`,{params:{filter:{[L]:{_eq:e}},sort:[M],fields:["id",M,"method",R,k,N,x,O]}}).then((e=>{const t=e.data.data,a=t.filter((e=>null===e[M]));console.debug(`[navarch-parcellots-weight-v2:fetchAndEvaluateWeightLotsIfExistsForThisParcel:parcelId=${r.value.id}] fetched weight lots=\n${JSON.stringify(a)}`);for(const e of a){if(c.value[e.method])throw new Error(`More than one composite weight found for method ${e.method} for this parcel`);c.value[e.method]={id:e.id,method:e.method,wetWeight:e[R],wetWeightUom:e[k],moisture:e[N],dryWeight:e[x],dryWeightUom:e[O],lots:t.filter((t=>t.method===e.method&&null!==t[M]))}}})).catch((e=>{console.error(`[navarch-parcellots-weight-v2:fetchAndEvaluateWeightLotsIfExistsForThisParcel:parcelId=${r.value.id}] fetch weight lots API call failed with reason: ${e}`)})):g.value.editingDisabledReason="Save the Parcel first to add weight lots"}async function p(e){console.log(`[navarch-parcellots-weight-v2:getContractData:parcelId=${r.value.id}] start with param contractId=${e}`);try{const t=(await n.get(`/items/navarch_contract/${e}`,{params:{fields:[P,A,T]}})).data.data;!function(e){if(console.log("[validateContractData]"),!e)throw new Error("Contract data response is empty, please ensure the selected contract for this parcel still exists");if(!e[P])throw new Error("Contract field 'Weight UOM' is empty");if(!e[A])throw new Error("Contract field 'Moisture UOM' is empty");if(!e[A]||!Array.isArray(e[T]))throw new Error("Contract field 'Methods' is empty or not a list");console.log("[validateContractData] contract data validated")}(t);const a=await n.get(`/items/navarch_unit/${t.weight_uom}`,{params:{fields:[V,F]}});!function(e){if(console.log("[validateDryWetWeightUom]"),!e)throw new Error("Weight uom response is empty, please ensure a valid weight UOM has been selected in the contract");if(!e[V])throw new Error(`Contract field 'Weight UOM' may have an invalid 'Wet Symbol' field value of ${e.wet_symbol}, please ensure a valid UOM with a proper Wet Symbol is selected`);if(!e[F])throw new Error(`Contract field 'Weight UOM' may have an invalid 'Dry Symbol' field value of ${e.dry_symbol}, please ensure a valid UOM with a proper Dry Symbol is selected`);console.log("[validateDryWetWeightUom] fetched uom for dry/wet weights are valid")}(a.data.data),g.value.contractData={wetWeightUom:a.data.data[V],dryWeightUom:a.data.data[F],moistureUom:t[A],methods:t[T]},console.log(`[navarch-parcellots-weight-v2:getContractData:parcelId=${r.value.id}] completed`)}catch(e){g.value.editingDisabledReason=`Contract data could not be fetched due to: ${e.message}`,console.error(`[navarch-parcellots-weight-v2:getContractData:parcelId=${r.value.id}] failed with reason: ${e}`)}}function w(){g.value.saveFunctionDisabledReason=null,g.value.isDrawerOpen=!1,g.value.isCompositeWeightRecalculatedWithEditedLots=!0,g.value.editableWeightInDrawer=null,s.value.create=[],s.value.update=[],s.value.delete=[]}async function m(){console.log(`[navarch-parcellots-weight-v2:onRefetchContractData:parcelId=${r.value.id}] started`),r.value[E]?(await p(r.value[E]),g.value.editingDisabledReason=g.value.contractData?null:g.value.editingDisabledReason,console.log(`[navarch-parcellots-weight-v2:onRefetchContractData:parcelId=${r.value.id}] completed`)):console.log(`[navarch-parcellots-weight-v2:onRefetchContractData:parcelId=${r.value.id}] contract field is not set, cannot refetch contract data`)}function f(){var e,t,a,o,l,i,n,d,c;if(console.log(`[navarch-parcellots-weight-v2:onRecalculateCompositeWeight:parcelId=${r.value.id}] started`),!(null==(e=g.value.editableWeightInDrawer)?void 0:e.editableLots))return void console.error(`[navarch-parcellots-weight-v2:onRecalculateCompositeWeight:parcelId=${r.value.id}] editableLots is not set, cannot recalculate composite weight`);const u=function(e){if(0===e.length)return null;const t=z(e,"dry_weight"),a=z(e,"wet_weight");return{method:G(e,"method"),lots:e,dryWeightUom:G(e,"dry_weight_uom"),wetWeightUom:G(e,"wet_weight_uom"),dryWeight:X(t,4),wetWeight:X(a,4),moisture:X((a-t)/a*100,4)}}(g.value.editableWeightInDrawer.editableLots.filter((e=>!s.value.delete.includes(e.id))));g.value.editableWeightInDrawer={compositeWeightId:g.value.editableWeightInDrawer.compositeWeightId,compositeDryWeight:null!=(t=null==u?void 0:u.dryWeight)?t:null,commonDryWeightUom:null!=(o=null==(a=g.value.contractData)?void 0:a.dryWeightUom)?o:"-",compositeWetWeight:null!=(l=null==u?void 0:u.wetWeight)?l:null,commonWetWeightUom:null!=(n=null==(i=g.value.contractData)?void 0:i.wetWeightUom)?n:"-",compositeMoisture:null!=(d=null==u?void 0:u.moisture)?d:null,commonMethodDisplay:null!=(c=null==u?void 0:u.method)?c:null,editableLots:g.value.editableWeightInDrawer.editableLots},g.value.isCompositeWeightRecalculatedWithEditedLots=!0,console.log(`[navarch-parcellots-weight-v2:onRecalculateCompositeWeight:parcelId=${r.value.id}] completed`)}}});const le=e=>(W("data-v-64969d30"),e=e(),D(),e),ie={class:"margin-top-16px"},ne={class:"drawer-content"},re=le((()=>v("div",{class:"input-label"},"Composite Weight Results",-1))),de={class:"margin-top-16px"},se=["disabled"],ce=le((()=>v("div",{class:"input-label"},"Method",-1))),ue=le((()=>v("div",{class:"input-label"},"Weight Lots",-1))),he={class:"margin-top-16px"},ge=le((()=>v("div",null,"Something went wrong with displaying the weight lots, please contact Navarch with a screenshot of this",-1)));var ve=[],pe=[];!function(e,t){if(e&&"undefined"!=typeof document){var a,o=!0===t.prepend?"prepend":"append",l=!0===t.singleTag,i="string"==typeof t.container?document.querySelector(t.container):document.getElementsByTagName("head")[0];if(l){var n=ve.indexOf(i);-1===n&&(n=ve.push(i)-1,pe[n]={}),a=pe[n]&&pe[n][o]?pe[n][o]:pe[n][o]=r()}else a=r();65279===e.charCodeAt(0)&&(e=e.substring(1)),a.styleSheet?a.styleSheet.cssText+=e:a.appendChild(document.createTextNode(e))}function r(){var e=document.createElement("style");if(e.setAttribute("type","text/css"),t.attributes)for(var a=Object.keys(t.attributes),l=0;l<a.length;l++)e.setAttribute(a[l],t.attributes[a[l]]);var n="prepend"===o?"afterbegin":"beforeend";return i.insertAdjacentElement(n,e),e}}('.weight-table .table-row[data-v-64969d30] {\n  height: 30px;\n}\n.weight-table .weight_cell[data-v-64969d30] {\n  width: 100%;\n}\n.weight-table .header_cell_with_input[data-v-64969d30] {\n  height: 60px;\n}\n.margin-top-16px[data-v-64969d30] {\n  margin-top: 16px;\n}\n.margin-left-16px[data-v-64969d30] {\n  margin-left: 16px;\n}\n.secondary-button[data-v-64969d30] {\n  --v-button-background-color: var(--background-page);\n  --v-button-color: var(--primary);\n  border: 1px solid var(--primary);\n  border-radius: var(--border-radius);\n}\n.secondary-button[data-v-64969d30]:disabled {\n  border-radius: var(--border-radius);\n}\n.secondary-button[data-v-64969d30]:hover {\n  border-color: var(--v-button-background-color-hover);\n  --v-button-color: inherit;\n}\n.v-icon-white[data-v-64969d30] {\n  --v-icon-color: #ffffff;\n}\n.v-icon-purple[data-v-64969d30] {\n  --v-icon-color: #8866FF;\n}\n.v-icon-delete-button-small-foreground-subdued[data-v-64969d30] {\n  --v-icon-size: 18px;\n  --v-icon-color: var(--foreground-subdued);\n}\n.v-icon-delete-button-small-red[data-v-64969d30] {\n  --v-icon-size: 18px;\n  --v-icon-color: var(--red);\n}\n.v-button-red-on-hover[data-v-64969d30] {\n  --v-button-color: var(--white);\n  --v-button-background-color: var(--background-normal);\n  --v-button-color-hover: var(--white);\n  --v-button-background-color-hover: var(--red);\n}\n.v-button-red[data-v-64969d30] {\n  --v-button-color: var(--white);\n  --v-button-background-color: var(--danger);\n  --v-button-color-hover: var(--white);\n  --v-button-background-color-hover: var(--danger-125);\n}\n.drawer-content[data-v-64969d30] {\n  padding: 0 32px 40px;\n}\n.weight-drawer[data-v-64969d30] {\n  max-width: 1500px !important;\n}\n.input-label[data-v-64969d30] {\n  color: #f0f6fc;\n  font-weight: 600;\n  font-size: 16px;\n  font-family: "Inter", -apple-system, "BlinkMacSystemFont", "Segoe UI", "Roboto", "Helvetica", "Arial", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";\n  font-style: normal;\n  line-height: 19px;\n  margin-bottom: 8px;\n  padding-top: 20px;\n}',{}),oe.render=function(e,t,a,o,l,i){const W=n("v-overlay"),D=n("v-table"),y=n("v-button"),I=n("v-icon"),C=n("v-select"),$=n("v-input"),_=n("v-drawer"),S=n("v-card-title"),L=n("v-card-text"),M=n("v-card-actions"),E=n("v-card"),U=n("v-dialog"),x=r("tooltip");return d(),s(c,null,[u(" Darkened area over the UI when loading "),h(W,{active:e.interfaceState.isLoadingWhilePatching,clickable:!1},null,8,["active"]),u(" Displayed in the Parcel form "),h(D,{class:"weight-table",headers:e.WeightCompositeTableHeaders,items:e.weightLotsByMethodList,rowHeight:30,"onClick:row":e.onMainWeightLotTableRowClick,fixedHeader:"",inline:""},{"item.wetWeight":g((({item:t})=>[v("div",null,p(`${e.formatNumber(t.wetWeight,4,!0)}${t.wetWeight?t.wetWeightUom:""}`),1)])),"item.moisture":g((({item:t})=>[v("div",null,p(`${e.formatNumber(t.moisture,4,!0)}%`),1)])),"item.dryWeight":g((({item:t})=>[v("div",null,p(`${e.formatNumber(t.dryWeight,4,!0)}${t.dryWeight?t.dryWeightUom:""}`),1)])),_:2},1032,["headers","items","onClick:row"]),u(" Needs to be disabled through the editing Disabled Reason in the interface state OR by the contract data being null "),v("div",ie,[w((d(),m(y,{onClick:e.onMainPageClickAddWeight,disabled:!!e.interfaceState.editingDisabledReason||!e.interfaceState.contractData},{default:g((()=>[f(" Add Weight ")])),_:1},8,["onClick","disabled"])),[[x,e.interfaceState.editingDisabledReason||!e.interfaceState.contractData?e.interfaceState.editingDisabledReason??(e.interfaceState.contractData?"Editing is disabled":"Please select a contract first"):"Click to add a new weight lot by method"]])]),u(" Displayed when the Drawer is open to show Weight Lots by Method "),h(_,{modelValue:e.interfaceState.isDrawerOpen,"onUpdate:modelValue":t[1]||(t[1]=t=>e.interfaceState.isDrawerOpen=t),onToggle:e.onDrawerClose,onCancel:e.onDrawerClose,icon:"scale",title:`Edit ${e.interfaceState?.editableWeightInDrawer?.commonMethodDisplay?e.interfaceState?.editableWeightInDrawer?.commonMethodDisplay+" ":""}Weight`,subtitle:"Weight Lots"},{actions:g((()=>[w((d(),m(y,{rounded:"",onClick:e.onDrawerSave,disabled:!!e.interfaceState.editingDisabledReason||!e.interfaceState.contractData||!!e.interfaceState.saveFunctionDisabledReason,icon:""},{default:g((()=>[h(I,{name:"check"})])),_:1},8,["onClick","disabled"])),[[x,e.interfaceState.editingDisabledReason||!e.interfaceState.contractData||e.interfaceState.saveFunctionDisabledReason?e.interfaceState.editingDisabledReason??e.interfaceState.saveFunctionDisabledReason??"Editing has been disabled":null,void 0,{bottom:!0}]]),w((d(),m(y,{class:"v-button-red-on-hover",rounded:"",onClick:e.onDrawerDeleteWeight,disabled:!!e.interfaceState.editingDisabledReason||!e.interfaceState.contractData,icon:""},{default:g((()=>[h(I,{name:"delete"})])),_:1},8,["onClick","disabled"])),[[x,e.interfaceState.editingDisabledReason||!e.interfaceState.contractData?e.interfaceState.editingDisabledReason??"Editing has been disabled":null,void 0,{bottom:!0}]])])),default:g((()=>[v("div",ne,[re,u(" interfaceState.editableWeightInDrawer should not be null, but just in case, default to empty array "),h(D,{class:"weight-table",headers:e.WeightCompositeTableInDrawerHeaders,items:e.interfaceState.editableWeightInDrawer?[e.interfaceState.editableWeightInDrawer]:[],rowHeight:30,fixedHeader:"",inline:""},{"item.compositeWetWeight":g((({item:t})=>[v("div",null,[u(" compositeWetWeight is either a valid number or is null, isNaN returns false for null so can't use that "),f(" "+p(`${e.formatNumber(t.compositeWetWeight,4,!0)}${null===t.compositeWetWeight?"":t.commonWetWeightUom}`),1)])])),"item.compositeMoisture":g((({item:t})=>[v("div",null,p(`${e.formatNumber(t.compositeMoisture,4,!0)}${null===t.compositeMoisture?"":"%"}`),1)])),"item.compositeDryWeight":g((({item:t})=>[v("div",null,[u(" compositeDryWeight is either a valid number or is null, isNaN returns false for null so can't use that "),f(" "+p(`${e.formatNumber(t.compositeDryWeight,4,!0)}${null===t.compositeDryWeight?"":t.commonDryWeightUom}`),1)])])),_:2},1032,["headers","items"]),v("div",de,[w((d(),m(y,{disabled:!!e.interfaceState.editingDisabledReason||!e.interfaceState.contractData||!e.interfaceState.editableWeightInDrawer.commonMethodDisplay,onClick:e.onRecalculateCompositeWeight},{default:g((()=>[f(" Evaluate Composite ")])),_:1},8,["disabled","onClick"])),[[x,e.interfaceState.editingDisabledReason||!e.interfaceState.contractData?e.interfaceState.editingDisabledReason??"Editing has been disabled":e.interfaceState.editableWeightInDrawer.commonMethodDisplay?"Recalculate the composite weight data based on the weight lots currently entered":"Cannot add new lot without a method selected",void 0,{bottom:!0}]])]),e.interfaceState.editableWeightInDrawer?(d(),s("fieldset",{key:0,disabled:!!e.interfaceState.editingDisabledReason||!e.interfaceState.contractData},[ce,e.interfaceState.editableWeightInDrawer?(d(),m(C,{key:0,modelValue:e.interfaceState.editableWeightInDrawer.commonMethodDisplay,"onUpdate:modelValue":t[0]||(t[0]=t=>e.interfaceState.editableWeightInDrawer.commonMethodDisplay=t),items:e.methodSelection,disabled:!e.interfaceState.isAddingNewWeightByMethod},null,8,["modelValue","items","disabled"])):u("v-if",!0),u(" Table with editable cells to enter each weight lot data "),ue,h(D,{class:"weight-table",headers:e.WeightLotTableHeaders,items:e.interfaceState.editableWeightInDrawer.editableLots,rowHeight:30,fixedHeader:"",inline:""},{"header.wet_weight":g((({header:t})=>[v("div",null,p(`${t.text} (${e.interfaceState.editableWeightInDrawer.commonWetWeightUom})`),1)])),"header.dry_weight":g((({header:t})=>[v("div",null,p(`${t.text} (${e.interfaceState.editableWeightInDrawer.commonDryWeightUom})`),1)])),"item.delete":g((({item:t})=>[w(h(I,{class:b(e.getDeleteIconColour(t.id)),name:e.getDeleteIconName(t.id),onClick:()=>e.onDrawerClickDeleteWeightLotButton(t.id)},null,8,["class","name","onClick"]),[[x,e.onHoverWeightLotDeleteButtonForTooltip(t.id),void 0,{top:!0}]])])),"item.wet_weight":g((({item:t})=>[h($,{class:"weight_cell",modelValue:t.wet_weight,"onUpdate:modelValue":e=>t.wet_weight=e,placeholder:0,type:"number",onKeydown:a=>e.onKeyDownInWeightLotEditorCell(t,"wet_weight",a),nullable:!0,id:`weightlots-1-${t.lot_number}`},null,8,["modelValue","onUpdate:modelValue","onKeydown","id"])])),"item.moisture":g((({item:t})=>[h($,{class:"weight_cell",modelValue:t.moisture,"onUpdate:modelValue":e=>t.moisture=e,placeholder:0,type:"number",onKeydown:a=>e.onKeyDownInWeightLotEditorCell(t,"moisture",a),nullable:!0,id:`weightlots-2-${t.lot_number}`},null,8,["modelValue","onUpdate:modelValue","onKeydown","id"])])),"item.dry_weight":g((({item:t})=>[h($,{class:"weight_cell",modelValue:t.dry_weight,"onUpdate:modelValue":e=>t.dry_weight=e,placeholder:0,type:"number",onKeydown:a=>e.onKeyDownInWeightLotEditorCell(t,"dry_weight",a),nullable:!0,id:`weightlots-3-${t.lot_number}`},null,8,["modelValue","onUpdate:modelValue","onKeydown","id"])])),_:2},1032,["headers","items"]),v("div",he,[w((d(),m(y,{disabled:!!e.interfaceState.editingDisabledReason||!e.interfaceState.contractData||!e.interfaceState.editableWeightInDrawer.commonMethodDisplay,onClick:e.onDrawerClickAddWeightLot},{default:g((()=>[f(" Add New Lot ")])),_:1},8,["disabled","onClick"])),[[x,e.interfaceState.editingDisabledReason||!e.interfaceState.contractData?e.interfaceState.editingDisabledReason??"Editing has been disabled":e.interfaceState.editableWeightInDrawer.commonMethodDisplay?null:"Cannot add new lot without a method selected",void 0,{bottom:!0}]])])],8,se)):(d(),s(c,{key:1},[u(" This div below absolutely should not be shown at all, it means the interfaceState.weightLotsForDrawerDisplay is null and the drawer should never be opened in this case "),ge],2112))])])),_:1},8,["modelValue","onToggle","onCancel","title"]),u(" Confirmation popups when exiting or performing a save or delete operation "),h(U,{modelValue:e.interfaceState.isConfirmSavePopupOpen,"onUpdate:modelValue":t[3]||(t[3]=t=>e.interfaceState.isConfirmSavePopupOpen=t)},{default:g((()=>[h(E,null,{default:g((()=>[h(S,null,{default:g((()=>[f("New changes made")])),_:1}),h(L,null,{default:g((()=>[f("The changes will be saved even if other changes to the Parcel is not saved. Are you sure you want to save?")])),_:1}),h(M,null,{default:g((()=>[h(y,{secondary:"",onClick:t[2]||(t[2]=()=>e.interfaceState.isConfirmSavePopupOpen=!1)},{default:g((()=>[f("Keep Editing")])),_:1}),h(y,{loading:e.interfaceState.isLoadingWhilePatching,onClick:e.onConfirmDrawerSave},{default:g((()=>[f("Save Changes")])),_:1},8,["loading","onClick"])])),_:1})])),_:1})])),_:1},8,["modelValue"]),h(U,{modelValue:e.interfaceState.isConfirmDeletePopupOpen,"onUpdate:modelValue":t[5]||(t[5]=t=>e.interfaceState.isConfirmDeletePopupOpen=t)},{default:g((()=>[h(E,null,{default:g((()=>[e.interfaceState.editableWeightInDrawer?.commonMethodDisplay?(d(),m(S,{key:0},{default:g((()=>[f(p(`Delete ${e.interfaceState.editableWeightInDrawer.commonMethodDisplay.toLowerCase()} weights`),1)])),_:1})):(d(),m(S,{key:1},{default:g((()=>[f("Delete weights")])),_:1})),u(" This should never be shown, but just in case "),h(L,null,{default:g((()=>[f("This action is permanent and can not be undone. Are you sure you would like to proceed?")])),_:1}),h(M,null,{default:g((()=>[h(y,{secondary:"",onClick:t[4]||(t[4]=()=>e.interfaceState.isConfirmDeletePopupOpen=!1)},{default:g((()=>[f("Keep Editing")])),_:1}),h(y,{class:"v-button-red",loading:e.interfaceState.isLoadingWhilePatching,onClick:e.onConfirmDrawerDeleteWeight},{default:g((()=>[f("Delete")])),_:1},8,["loading","onClick"])])),_:1})])),_:1})])),_:1},8,["modelValue"]),h(U,{modelValue:e.interfaceState.isConfirmClosePopupOpen,"onUpdate:modelValue":t[7]||(t[7]=t=>e.interfaceState.isConfirmClosePopupOpen=t)},{default:g((()=>[h(E,null,{default:g((()=>[h(S,null,{default:g((()=>[f("Unsaved changes")])),_:1}),h(L,null,{default:g((()=>[f("Are you sure you want to leave this page?")])),_:1}),h(M,null,{default:g((()=>[h(y,{secondary:"",onClick:e.onConfirmDrawerClose},{default:g((()=>[f("Discard Changes")])),_:1},8,["onClick"]),h(y,{onClick:t[6]||(t[6]=()=>e.interfaceState.isConfirmClosePopupOpen=!1)},{default:g((()=>[f("Keep Editing")])),_:1})])),_:1})])),_:1})])),_:1},8,["modelValue"]),u(" For some reason, the dialog box doesn't appear if coded like this, must use the above way with a v-card element "),u(' <v-dialog\r\n\t\tv-model="interfaceState.isConfirmClosePopupOpen"\r\n\t\t@confirm="onConfirmDrawerClose"\r\n\t\t@cancel="interfaceState.isConfirmClosePopupOpen = false"\r\n\t\ttitle="Unsaved changes"\r\n\t\tsubtitle="Are you sure you want to leave this page?"\r\n\t/> ')],64)},oe.__scopeId="data-v-64969d30",oe.__file="src/interface.vue";var we=t({id:"navarch-parcellots-weight-v2",name:"Navarch Weight Lots Table v2",icon:"arrow_right_alt",description:"Navarch Weight Lots Table Interface for Parcel Form",component:oe,options:null,types:["uuid","string","text","integer","bigInteger","alias"],group:"relational",localTypes:["o2m"],relational:!0});export{we as default};
