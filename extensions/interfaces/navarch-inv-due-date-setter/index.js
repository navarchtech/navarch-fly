import{useApi as t,defineInterface as e}from"@directus/extensions-sdk";import{defineComponent as a,ref as n,inject as l,watch as o,resolveComponent as i,resolveDirective as r,openBlock as d,createBlock as c,withCtx as s,createCommentVNode as u,createElementBlock as v,createVNode as p,Fragment as f,renderList as y,withDirectives as m,createTextVNode as h,toDisplayString as D,createSlots as g,mergeProps as _,toHandlers as b}from"vue";const S={Advance:0,"Second Advance":1,"Third Advance":2,"Fourth Advance":3,Provisional:4,"Second Provisional":5,"Third Provisional":6,"Fourth Provisional":7,Final:8};var k=a({props:{value:{type:Object,default:null}},emits:["input"],setup(e,{emit:a}){var i;const r=t(),d=n(),c=n(!1),s=n(""),u=n([]),v=n({}),p=n({}),f=n({}),y=n({qp:null,date:null}),m=n({}),h=n(null!=(i=e.value)?i:{}),D="contract",g="invoice_date",_="navarch_contract_payment_information",b="related_contract",k="invoice_type",O="pa_days",$="pa_day_type",w="pa_ref_day",T="estimate_arrival_date",M="actual_arrival_date",A="bl_date",I="estimated_shipment_date",B="parcel_finalisation_date",E="qp_selection",L=l("values",n({}));return o((()=>L.value[D]),(async t=>{c.value=!!L.value[D],t?(await async function(t){console.log("[loadInvoiceTypeList]");try{const e=await r.get(`/items/${_}`,{params:{filter:{[b]:{_eq:t}},fields:[k,O,$,w]}});u.value=e.data.data.map((t=>t[k])).filter((t=>Object.keys(S).includes(t))).sort(((t,e)=>S[t]-S[e]));const a={};q(L.value[E],L.value),v.value=e.data.data.reduce(((t,e)=>{console.debug(`[loadInvoiceTypeList] item: ${JSON.stringify(e)}`);const n="Final"===e[k]?function(t){if(null===t)return"invalid";const e=t.split(" ");switch(e[1]){case"MAMA":return M;case"MOSS":return I;case"MOS":case"MOAS":return A;default:return"invalid"}}(y.value.qp):function(t){switch(t){case"Arrival Date":return M;case"B/L Date":case"End of Month of Delivery":return A;case"Invoice Date":return g;case"Estimated Shipment Date":return I;case"Parcel Finalisation":return B;default:return"invalid"}}(e[w]);return a[n]instanceof Array?a[n].push(e[k]):a[n]=[e[k]],t[e[k]]={days:e[O],day_type:e[$],ref_day:e[w]},t}),{}),console.log(`[loadInvoiceTypeList] paymentAdviceConfigByInvoiceType: ${JSON.stringify(v.value)}`),m.value=a}catch(t){console.error(t)}console.log("[loadInvoiceTypeList] done")}(t),function(){const t={},e=Object.keys(h.value);if(u.value.length===e.length){if(u.value.every((t=>e.includes(t))))return}u.value.forEach((e=>{h.value[e]?t[e]=h.value[e]:t[e]={due_date:null,locked:!1,inv_type:e}})),h.value=t}(),C()):a("input",null)}),{immediate:!0}),o(h,(t=>{console.log("[watch] due dates by invoice updated"),a("input",JSON.stringify(t))}),{deep:!0}),o((()=>L.value[T]),(async()=>{Object.keys(m.value).includes(T)&&C(m.value[T])})),o((()=>L.value[M]),(async()=>{Object.keys(m.value).includes(M)&&C(m.value[M])})),o((()=>L.value[A]),(async()=>{Object.keys(m.value).includes(A)&&C(m.value[A])})),o((()=>L.value[I]),(async()=>{console.log(`[watch] ${I} updated`),console.log(`[watch] datesToWatchInParcelForm: ${JSON.stringify(m.value)}`),Object.keys(m.value).includes(I)&&(console.log(`[watch] ${I} included in dates to watch`),C(m.value[I]))})),o((()=>L.value[B]),(async()=>{Object.keys(m.value).includes(B)&&C(m.value[B])})),o((()=>L.value[E]),(t=>{console.log(`[watch] ${E} updated to ${JSON.stringify(t)} with type ${typeof t}`),C(["Final"])}),{deep:!0}),{invoiceTypeList:u,dueDatesByInvoiceType:h,dueDateDecriptionsByInvoiceTypeBasedOnContract:p,dueDatesByInvoiceTypeBasedOnContract:f,isContractSelected:c,failureReason:s,dateTimeMenu:d,updateDueDate:function(t,e){h.value[t].due_date=e},unsetValue:function(t){h.value[t].due_date=null},displayDate:function(t){const e=t?new Date(t):null;return e?e.toLocaleDateString("en-US",{month:"long",day:"numeric",year:"numeric"}):""},formatDate:j};async function C(t){var e,a,n;console.log("[updateEstimatedDueDatesBasedOnContract]"+(t?` updateOnlyInvTypes: ${JSON.stringify(t)}`:""));for(const l of void 0!==t?t:u.value){"Final"===l&&q(L.value[E],L.value),console.log(`[updateEstimatedDueDatesBasedOnContract] payment advice config by inv type: ${JSON.stringify(v.value)}`),J(l,v.value[l].days,v.value[l].day_type,v.value[l].ref_day);const t={invoice_type:l,days:v.value[l].days,day_type:v.value[l].day_type,ref_day:"Final"===l?void 0:v.value[l].ref_day};let o,i="";if("Final"!==l)switch(t.ref_day){case"Arrival Date":i="Actual/Estimated Arrival Date from the Parcel form",o=null!=(e=L.value[M])?e:L.value[T];break;case"B/L Date":i="B/L Date (or Estimated Shipment Date) from the Parcel form",o=null!=(a=L.value[A])?a:L.value[I];break;case"End of Month of Delivery":i="B/L Date (or Estimated Shipment Date) from the Parcel form",o=null!=(n=L.value[A])?n:L.value[I];const d=new Date(o);d.setMonth(d.getMonth()+1,0),o=Q(d);break;case"Invoice Date":i="Invoice Date from the Invoice form";const c=await r.get("/items/navarch_invoices",{params:{filter:{parcel:{_eq:L.value.id},invoice_type:{_eq:l}},sort:"-invoice_date",fields:[g]}});o=c.data.data.length>0?c.data.data[0][g]:void 0;break;case"Estimated Shipment Date":i="Estimated Shipment Date from the Parcel form",o=L.value[I];break;case"Parcel Finalisation":if(void 0===L.value[B]||null===L.value[B])throw new Error("[generateInvoice] Parcel has not been finalised, please fill in the the parcel finalisation date in the parcel form.");i="Parcel Finalisation Date from the Parcel form",o=L.value[B];break;default:throw new Error(`Invalid reference day for payment advice: ${t.ref_day}; please contact Navarch for support`)}else i="last day of the last QP Month";console.log(`[updateEstimatedDueDatesBasedOnContract] invType: ${l}, readablePaymentAdviceRefDayType: ${i}, refDayAsString: ${o}`);const d="Final"===l?y.value.date:null==o?null:new Date(o),c=parseInt(t.days),s=t.day_type;if(null===d||!x(d)){p.value[l]=`${c} ${s} ${c<0?"before":"after"} ${i} based on contract`,f.value[l]="N/A";continue}let u;switch(console.log(`[updateEstimatedDueDatesBasedOnContract] invType: ${l}, dayRange: ${c}, dayType: ${s}, refDate: ${d}`),s){case"Business Day(s)":u=N(d,c);break;case"Calendar Day(s)":u=new Date(d.valueOf()),u.getHours()>=12?u.setDate(u.getDate()+c+1):u.setDate(u.getDate()+c);break;default:throw new Error(`Invalid day_type for payment advice ${s}`)}console.log(`[updateEstimatedDueDatesBasedOnContract] invType: ${l}, dueDate: ${u}`),p.value[l]=`${c} ${s} ${c<0?"before":"after"} ${i} (${j(d)}) based on contract`,f.value[l]=j(u)}}function q(t,e){if(console.log(`[findAndSetLatestQpMonthAndGetLastDayOfTheMonth] qpSelectionByCommodityCode: ${JSON.stringify(t)}`),null===t)return void console.log("[findAndSetLatestQpMonthAndGetLastDayOfTheMonth] qpSelectionByCommodityCode not yet loaded or is deselected. Returning and moving on, this will run again once the qp selection is loaded");"string"==typeof t&&(t=JSON.parse(t));const a=Object.values(t),n=a.map((t=>({qp:t.qp_selected,date:P(t,e)}))).filter((t=>x(t.date))).sort(((t,e)=>e.date.valueOf()-t.date.valueOf()));console.log(`[findAndSetLatestQpMonthAndGetLastDayOfTheMonth] unfiltered: ${JSON.stringify(a.map((t=>({qp:t.qp_selected,date:P(t,e)}))))}}`),console.log(`[findAndSetLatestQpMonthAndGetLastDayOfTheMonth] unsorted: ${JSON.stringify(a.map((t=>({qp:t.qp_selected,date:P(t,e)}))).filter((t=>x(t.date))))}`),console.log(`[findAndSetLatestQpMonthAndGetLastDayOfTheMonth] listOfQpSelectedMonthDates: ${JSON.stringify(n)}}`),0===n.length?y.value={qp:null,date:null}:(y.value=n[0],console.log(`[findAndSetLatestQpMonthAndGetLastDayOfTheMonth] latestQpMonthSelectionForFinalInvoiceType: ${JSON.stringify(y.value)}`))}function P(t,e,a=!1){var n,l;if(a&&!t.declared)return null;const o=null==t?void 0:t.qp_selected;if(!o)return null;const i=o.split(" "),r={qp_period:parseInt(i[0]),qp_code:i[1]};let d,c;switch(r.qp_code){case"MAMA":d=new Date(null!=(n=e[M])?n:e[T]),c="Actual/Estimated Arrival Date";break;case"MOSS":d=new Date(e[I]),c="Estimated Shipment Date";break;case"MOS":case"MOAS":d=new Date(null!=(l=e[A])?l:e[I]),c="B/L Date (or Estimated Shipment Date)";break;default:throw new Error(`Unsupported QP code ${r.qp_code} in the contract commodities, please ensure all commodity QP codes are MAMA, MOS, MOSS, or MOAS`)}return console.log(`[getLastDayOfQpMonthForQpSelection] qpSelection: ${JSON.stringify(r)}, refDay: ${d}, readableRefDayType: ${c}`),function(t,e){const a=new Date(t.valueOf());return a.setMonth(a.getMonth()+e+1,0),a}(d,r.qp_period)}function N(t,e,a=!1){const n=new Date(t.valueOf());let l=e-(a?1:0),o=!0;for(;F(n);)n.setDate(n.getDate()+1),o&&(l-=1,o=!1);for(;l>0;)n.setDate(n.getDate()+1),F(n)||(l-=1);for(n.getHours()>=12&&n.setDate(n.getDate()+1);F(n);)n.setDate(n.getDate()+1);return n}function F(t){return 0===t.getDay()||6===t.getDay()}function J(t,e,a,n){if(!t)throw new Error("Please ensure the payment advice is properly set in the contract for all invoice types");if(!e)throw new Error(`Please ensure that the number of days is set for the ${t} payment advice of the associated contract`);if(!a)throw new Error(`Please ensure that the day type is set for the ${t} payment advice of the associated contract`);if("Final"!==t&&!n)throw new Error(`Please ensure that the reference date is set for the ${t} payment advice of the associated contract`)}function x(t){return t instanceof Date&&!isNaN(t.getTime())}function Q(t,e=!0){const a=t.getMonth()+1,n=t.getDate();return`${t.getFullYear()}${e?"-":" "}${a<10?"0":""}${a}${e?"-":" "}${n<10?"0":""}${n}`}function j(t){const e=t.getDate(),a=t.getMonth(),n=t.getFullYear();return`${e} ${["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"][a]} ${n}`}}});const O={key:0},$={key:1},w={class:"list-item-component left"};var T=[],M=[];!function(t,e){if(t&&"undefined"!=typeof document){var a,n=!0===e.prepend?"prepend":"append",l=!0===e.singleTag,o="string"==typeof e.container?document.querySelector(e.container):document.getElementsByTagName("head")[0];if(l){var i=T.indexOf(o);-1===i&&(i=T.push(o)-1,M[i]={}),a=M[i]&&M[i][n]?M[i][n]:M[i][n]=r()}else a=r();65279===t.charCodeAt(0)&&(t=t.substring(1)),a.styleSheet?a.styleSheet.cssText+=t:a.appendChild(document.createTextNode(t))}function r(){var t=document.createElement("style");if(t.setAttribute("type","text/css"),e.attributes)for(var a=Object.keys(e.attributes),l=0;l<a.length;l++)t.setAttribute(a[l],e.attributes[a[l]]);var i="prepend"===n?"afterbegin":"beforeend";return o.insertAdjacentElement(i,t),t}}('.list-item[data-v-64969d30] {\n  margin-bottom: 10px;\n}\n.list-item-component[data-v-64969d30] {\n  float: left;\n}\n.left[data-v-64969d30] {\n  width: 30%;\n}\n.middle[data-v-64969d30] {\n  width: 40%;\n}\n.right[data-v-64969d30] {\n  width: 30%;\n  padding-left: 20px;\n}\n\n/* Clear floats after the columns */\n.list-item[data-v-64969d30]:after {\n  content: "";\n  display: table;\n  clear: both;\n}',{}),k.render=function(t,e,a,n,l,o){const S=i("v-icon"),k=i("v-input"),T=i("v-date-picker"),M=i("v-menu"),A=i("v-checkbox"),I=i("v-list-item"),B=i("v-list"),E=i("v-sheet"),L=r("tooltip");return d(),c(E,null,{default:s((()=>[u(" <div>{{ dueDatesByInvoiceType }}</div>\r\n\t\t<div>{{ invoiceTypeList }}</div>\r\n\t\t<div>{{ dateTimeMenu }}</div> "),t.isContractSelected?t.isContractSelected&&t.invoiceTypeList&&t.dueDatesByInvoiceType?(d(),v("div",$,[p(B,null,{default:s((()=>[(d(!0),v(f,null,y(t.dueDatesByInvoiceType,(e=>(d(),c(I,{class:"list-item",key:e.inv_type},{default:s((()=>[m((d(),v("div",w,[h(D(`${e.inv_type} (${t.dueDatesByInvoiceTypeBasedOnContract[e.inv_type]})`),1)])),[[L,t.dueDateDecriptionsByInvoiceTypeBasedOnContract[e.inv_type],void 0,{bottom:!0}]]),p(M,{ref_for:!0,ref:"dateTimeMenu","close-on-content-click":!1,attached:"",disabled:e.locked,"full-height":"",seamless:""},{activator:s((({toggle:a,active:n})=>[p(k,{active:n,clickable:"",readonly:"","model-value":t.displayDate(e.due_date),disabled:e.locked,placeholder:e.due_date,onClick:a},g({_:2},[e.locked?void 0:{name:"append",fn:s((()=>[p(S,_({name:e.due_date?"clear":"today",class:{active:n,"clear-icon":!!e.due_date,"today-icon":!e.due_date}},b({click:e.due_date?()=>t.unsetValue(e.inv_type):null})),null,16,["name","class"])])),key:"0"}]),1032,["active","model-value","disabled","placeholder","onClick"])])),default:s((()=>[p(T,{type:"date",disabled:e.locked,"include-seconds":!1,"use-24":!1,"model-value":t.value,"onUpdate:modelValue":a=>t.updateDueDate(e.inv_type,a),onClose:t.dateTimeMenu?.deactivate},null,8,["disabled","model-value","onUpdate:modelValue","onClose"])])),_:2},1032,["disabled"]),u(' <v-input\r\n\t\t\t\t\t\tref="inputEl"\r\n\t\t\t\t\t\ttype="text"\r\n\t\t\t\t\t\t:pattern="\'\'"\r\n\t\t\t\t\t\t:value="dueDateItem.due_date"\r\n\t\t\t\t\t\t:style="{ width: `${(dueDateItem.due_date?.toString().length || 2) + 1 + \'ch\'}` }"\r\n\t\t\t\t\t\tplaceholder="--"\r\n\t\t\t\t\t\t@input="updateDueDate(dueDateItem.inv_type, $event?.target?.value)"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<v-menu\r\n\t\t\t\t\t\tref="dateTimeMenu"\r\n\t\t\t\t\t\t:close-on-content-click="false"\r\n\t\t\t\t\t\t:show-arrow="true"\r\n\t\t\t\t\t\tplacement="bottom-start"\r\n\t\t\t\t\t\tseamless\r\n\t\t\t\t\t\tfull-height\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<template #activator="{ toggle }">\r\n\t\t\t\t\t\t\t<v-icon class="preview" name="event" small @click="toggle" />\r\n\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t<div class="date-input">\r\n\t\t\t\t\t\t\t<v-date-picker\r\n\t\t\t\t\t\t\t\ttype="text"\r\n\t\t\t\t\t\t\t\t:model-value="dueDateItem.due_date"\r\n\t\t\t\t\t\t\t\t@update:model-value="(newDate) => updateDueDate(dueDateItem.inv_type, newDate)"\r\n\t\t\t\t\t\t\t\t@close="dateTimeMenu?.deactivate"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</v-menu> '),u(" <interface-datetime /> "),u(' <v-menu>\r\n\t\t\t\t\t\t<template #activator="{ toggle, active }">\r\n\t\t\t\t\t\t\t<v-input :active="active" clickable readonly @click="toggle" />\r\n\t\t\t\t\t\t</template>\r\n\r\n\t\t\t\t\t\t<v-date-picker :style="{ width: \'50rem\'}" />\r\n\t\t\t\t\t</v-menu> '),u(' <v-menu \r\n\t\t\t\t\t\t:location="location"\r\n\t\t\t\t\t\t:style="{ maxHeight: \'none\', width: \'30rem\'}"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<template #activator="{ toggle }">\r\n\t\t\t\t\t\t\t<v-input\r\n\t\t\t\t\t\t\t\taria-readonly="true"\r\n\t\t\t\t\t\t\t\t@click="toggle"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</template>\r\n\r\n\t\t\t\t\t\t<v-date-picker \r\n\t\t\t\t\t\t\tv-model="dueDateItem.due_date"\r\n\t\t\t\t\t\t\t:style="{ width: \'30rem\'}"\r\n\t\t\t\t\t\t\t:include-seconds="true"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</v-menu> '),u(' <v-date-picker v-model="dueDateItem.due_date"></v-date-picker> '),u(' <v-menu>\r\n\t\t\t\t\t\t<template v-slot:activator="{ on, attrs }">\r\n\t\t\t\t\t\t\t<v-text-field\r\n\t\t\t\t\t\t\tv-model="dueDateItem.due_date"\r\n\t\t\t\t\t\t\tlabel="Select Date"\r\n\t\t\t\t\t\t\treadonly\r\n\t\t\t\t\t\t\tv-bind="attrs"\r\n\t\t\t\t\t\t\tv-on="on"\r\n\t\t\t\t\t\t\t></v-text-field>\r\n\t\t\t\t\t\t</template>\r\n\r\n\t\t\t\t\t\t<v-date-picker v-model="dueDateItem.due_date" @input="menuSingle = false"></v-date-picker>\r\n\t\t\t\t\t</v-menu> '),u(' <v-date-picker\r\n\t\t\t\t\t\tclass="list-item-component middle"\r\n\t\t\t\t\t\tv-model="dueDatesByInvoiceType[invType].due_date"\r\n\t\t\t\t\t\t:disabled="dueDatesByInvoiceType[invType].locked"\r\n\t\t\t\t\t\tv-tooltip.bottom="!!dueDatesByInvoiceType[invType].locked ? \'Cannot update due date if locked.\' : null"\r\n\t\t\t\t\t/> '),m(p(A,{class:"list-item-component right",modelValue:e.locked,"onUpdate:modelValue":t=>e.locked=t,"icon-on":"check_box","icon-off":"check_box_outline_blank",label:"Locked",disabled:null===e.due_date},null,8,["modelValue","onUpdate:modelValue","disabled"]),[[L,e.due_date?null:"Please set a due date first.",void 0,{bottom:!0}]])])),_:2},1024)))),128))])),_:1})])):u("v-if",!0):(d(),v("div",O,"Please first select a contract.")),u(' <v-notice v-if="!!failureReason">\r\n\t\t\t{{ failureReason }}\r\n\t\t</v-notice> ')])),_:1})},k.__scopeId="data-v-64969d30",k.__file="src/interface.vue";var A=e({id:"navarch-inv-due-date-setter",name:"Navarch Invoice Due Date Setter",icon:"date_range",description:"For setting invoice due dates for each type of invoice.",component:k,options:null,types:["json"],group:"standard"});export{A as default};
