import{useApi as e,defineInterface as t}from"@directus/extensions-sdk";import{defineComponent as a,ref as l,inject as o,watch as d,resolveComponent as c,resolveDirective as n,openBlock as i,createBlock as s,withCtx as r,createCommentVNode as u,createElementBlock as p,createVNode as m,Fragment as v,renderList as _,createElementVNode as f,toDisplayString as h,withDirectives as q,createSlots as y,mergeProps as $,toHandlers as g}from"vue";var S=a({props:{value:{type:Object,default:null}},emits:["input"],setup(t,{emit:a}){var c;const n=e(),i=l(!1),s=l(null!=(c="string"==typeof t.value?JSON.parse(t.value):t.value)?c:{}),r=l({}),u=l({}),p=l([]),m=l("MONTH"),v=l(),_=l(null),f="contract",h="actual_arrival_date",q="estimate_arrival_date",y="bl_date",$="estimated_shipment_date",g="id",S="navarch_commodity_in_contract",b="contract",A="commodity",I="primary_commodity",D="payable_commodity",M="quotational_periods",O="navarch_commodity",E="name",k="code",C=o("values",l({}));i.value=!!C.value[f],d((()=>C.value[f]),(async e=>{console.log(`[navarch-qp-select:watch:contract:parcelId=${C.value.id}] new contract id value=${e}`),e?async function(e){console.log(`[navarch-qp-select:loadQpSelectionField:parcelId=${C.value.id}] loading QP Selection field for contractId=${e}`),i.value=!0;const t=await n.get(`/items/${S}`,{params:{filter:{_and:[{[b]:{_eq:e}},{_or:[{[I]:{_eq:!0}},{[D]:{_eq:!0}}]}]},fields:[A,M]}});console.log(`[navarch-qp-select:loadQpSelectionField:parcelId=${C.value.id}] fetched commodity in contract data=${JSON.stringify(t.data.data)}`);const a=t.data.data.map((e=>e[A])),l=await n.get(`/items/${O}`,{params:{filter:{[g]:{_in:a}},fields:[g,E,k]}});console.log(`[navarch-qp-select:loadQpSelectionField:parcelId=${C.value.id}] fetched commodity data=${JSON.stringify(l.data.data)}`),p.value=l.data.data.map((e=>e[k]));const o=l.data.data.reduce(((e,t)=>(e[t[g]]={name:t[E],code:t[k]},e)),{});if(0===Object.keys(s.value).length){s.value=t.data.data.reduce(((e,t)=>{const a=t[A],l=o[a],d=t[M],c=d.find((e=>!!e.default));return e[l.code]={commodity_name:l.name,commodity_code:l.code,commodity_id:a,declared:!1,qp_selected:c?`${c.qp_period} ${c.qp_code}`:null,qp_month:null},r.value[l.code]=d.map((e=>({text:`${e.qp_period} ${e.qp_code}${e.default?" (default)":""}`,value:`${e.qp_period} ${e.qp_code}`}))),e}),{});for(const e of Object.values(s.value))T(e)}else r.value=t.data.data.reduce(((e,t)=>{var a;const l=t[A],d=o[l];if(e[d.code]=t[M].map((e=>({text:`${e.qp_period} ${e.qp_code}${e.default?" (default)":""}`,value:`${e.qp_period} ${e.qp_code}`}))),console.debug(`[navarch-qp-select:loadQpSelectionField:parcelId=${C.value.id}] checking if commodity code ${d.code} exists in qpCommodities=${!!s.value[d.code]}`),!s.value[d.code]){const e=t[M].find((e=>!!e.default));s.value[d.code]={commodity_name:d.name,commodity_code:d.code,commodity_id:l,declared:!1,qp_selected:e?`${e.qp_period} ${e.qp_code}`:null,qp_month:null}}return(null==(a=s.value[d.code])?void 0:a.qp_month)||T(s.value[d.code]),e}),{});console.log(`[navarch-qp-select:loadQpSelectionField:parcelId=${C.value.id}] qpCommodities=${JSON.stringify(s.value)}, and qpSelection=${JSON.stringify(r.value)}`)}(e):(i.value=!1,a("input",null))}),{immediate:!0});let N=JSON.parse(JSON.stringify(s.value));return d(s,(e=>{console.log(`[navarch-qp-select:watch:qpCommodities:parcelId=${C.value.id}] changes detected for the QP settings for the commodities: `+JSON.stringify(e)+" vs old: "+JSON.stringify(N)),Object.values(e).forEach((e=>{var t;e.qp_selected!==(null==(t=N[e.commodity_code])?void 0:t.qp_selected)&&T(e)})),N=JSON.parse(JSON.stringify(e)),a("input",JSON.stringify(e))}),{deep:!0}),d((()=>C.value[$]),(e=>{console.log(`[navarch-qp-select:watch:PARCEL_ESTIMATED_SHIPMENT_DATE_FIELD_NAME:parcelId=${C.value.id}] new Estimated Shipment Date=${e}`),Object.values(s.value).forEach((t=>{if(!t.declared&&t.qp_selected){const[a,l]=t.qp_selected.split(" ");(null!==C.value[y]||"MOAS"!==l&&"MOS"!==l)&&"MOSS"!==l||w(t.commodity_code,parseInt(null!=a?a:"0"),e)}}))}),{immediate:!0}),d((()=>C.value[q]),(e=>{console.log(`[navarch-qp-select:watch:PARCEL_ESTIMATED_ARRIVAL_DATE_FIELD_NAME:parcelId=${C.value.id}] new Estimated Arrival Date=${e}`),Object.values(s.value).forEach((t=>{if(!t.declared&&t.qp_selected){const[a,l]=t.qp_selected.split(" ");null===C.value[h]&&"MAMA"===l&&w(t.commodity_code,parseInt(null!=a?a:"0"),e)}}))}),{immediate:!0}),d((()=>C.value[h]),(e=>{console.log(`[navarch-qp-select:watch:PARCEL_ACTUAL_ARRIVAL_DATE_FIELD_NAME:parcelId=${C.value.id}] new Actual Arrival Date=${e}`),Object.values(s.value).forEach((t=>{if(!t.declared&&t.qp_selected){const[a,l]=t.qp_selected.split(" ");null!==C.value[h]&&"MAMA"===l?w(t.commodity_code,parseInt(null!=a?a:"0"),e):null===C.value[h]&&"MAMA"===l&&w(t.commodity_code,parseInt(null!=a?a:"0"),C.value[q])}}))}),{immediate:!0}),d((()=>C.value[y]),(e=>{console.log(`[navarch-qp-select:watch:PARCEL_BL_DATE_FIELD_NAME:parcelId=${C.value.id}] new B/L Date=${e}`),Object.values(s.value).forEach((t=>{if(!t.declared&&t.qp_selected){const[a,l]=t.qp_selected.split(" ");null===C.value[y]||"MOAS"!==l&&"MOS"!==l?null!==C.value[y]||"MOAS"!==l&&"MOS"!==l||w(t.commodity_code,parseInt(null!=a?a:"0"),C.value[$]):w(t.commodity_code,parseInt(null!=a?a:"0"),e)}}))}),{immediate:!0}),{isContractSelected:i,qpCommodities:s,qpSelection:r,DEFAULT_NA_SELECTION:[{text:"N/A",value:null}],commodityCodeList:p,qpMonthsDisplay:u,dateTimeRef:v,dateTime:_,unsetValue:function(e){if(console.log(`[navarch-qp-select:unsetValue:parcelId=${C.value.id}] comm code: ${e}`),!s.value[e])return void console.warn(`[navarch-qp-select:unsetValue:parcelId=${C.value.id}] due date for ${e} is already unset`);s.value[e].qp_month=null,console.log(`[navarch-qp-select:unsetValue:parcelId=${C.value.id}] done`)},updateDueDate:function(e,t){var a,l;if(console.log(`[navarch-qp-select:updateDueDate:parcelId=${C.value.id}] comm code: ${e}, newDueDate: ${t}`),!t&&!(null==(a=s.value[e])?void 0:a.qp_month))return void console.log(`[navarch-qp-select:updateDueDate:parcelId=${C.value.id}] newDueDate is null, doing nothing value for ${e}`);s.value[e].qp_month=t,null==(l=v.value)||l.deactivate(),console.log(`[navarch-qp-select:updateDueDate:parcelId=${C.value.id}] done`)},activePicker:m};function w(e,t,a){if(console.log(`[navarch-qp-select:evaluateQpMonth:parcelId=${C.value.id}] evaluating QP Month for commodity code ${e} with qpPeriod=${t} and date=${a}`),!t||!a)return void console.log(`[navarch-qp-select:evaluateQpMonth:parcelId=${C.value.id}] invalid qpPeriod=${t} or date=${a}`);console.log(`[navarch-qp-select:evaluateQpMonth:parcelId=${C.value.id}] commodityCode=${e}, qpPeriod=${t}, date=${a}`);const l=new Date(a),o=l.getMonth(),d=(o+t)%12,c=o<=d?l.getFullYear():l.getFullYear()+1;s.value[e]&&(s.value[e].qp_month=`${c}-${(d+1).toString().padStart(2,"0")}-01`),console.log(`[navarch-qp-select:evaluateQpMonth:parcelId=${C.value.id}] done for commodity code ${e}, QP Month=${c}-${(d+1).toString().padStart(2,"0")}`)}function T(e){var t,a;if(console.log(`[navarch-qp-select:setDefaultQpMonthBasedOnAvailableValues:parcelId=${C.value.id}] started for commodity code ${e.commodity_code} with qp_selected=${e.qp_selected}`),null===e.qp_selected)return;let l;const[o,d]=e.qp_selected.split(" ");switch(d){case"MOS":case"MOAS":l=null!=(t=C.value[y])?t:C.value[$];break;case"MAMA":l=null!=(a=C.value[h])?a:C.value[q];break;case"MOSS":l=C.value[$]}console.log(`[navarch-qp-select:setDefaultQpMonthBasedOnAvailableValues:parcelId=${C.value.id}] date=${l}`),w(e.commodity_code,parseInt(null!=o?o:"0"),l),console.log(`[navarch-qp-select:setDefaultQpMonthBasedOnAvailableValues:parcelId=${C.value.id}] done for commodity code ${e.commodity_code} with qp_selected=${e.qp_selected}`)}}});const b={key:0},A={key:1};var I=[],D=[];!function(e,t){if(e&&"undefined"!=typeof document){var a,l=!0===t.prepend?"prepend":"append",o=!0===t.singleTag,d="string"==typeof t.container?document.querySelector(t.container):document.getElementsByTagName("head")[0];if(o){var c=I.indexOf(d);-1===c&&(c=I.push(d)-1,D[c]={}),a=D[c]&&D[c][l]?D[c][l]:D[c][l]=n()}else a=n();65279===e.charCodeAt(0)&&(e=e.substring(1)),a.styleSheet?a.styleSheet.cssText+=e:a.appendChild(document.createTextNode(e))}function n(){var e=document.createElement("style");if(e.setAttribute("type","text/css"),t.attributes)for(var a=Object.keys(t.attributes),o=0;o<a.length;o++)e.setAttribute(a[o],t.attributes[a[o]]);var c="prepend"===l?"afterbegin":"beforeend";return d.insertAdjacentElement(c,e),e}}('.list-item-qp-selection[data-v-64969d30] {\n  width: 100%;\n  display: grid;\n  grid-template-columns: 150px 1fr 1fr 100px;\n  column-gap: 20px;\n  margin-bottom: 10px;\n}\n\n/* Clear floats after the columns */\n.list-item[data-v-64969d30]:after {\n  content: "";\n  display: table;\n  clear: both;\n}',{}),S.render=function(e,t,a,l,o,d){const S=c("v-select"),I=c("v-icon"),D=c("v-input"),M=c("v-date-picker"),O=c("v-menu"),E=c("v-checkbox"),k=c("v-list-item"),C=c("v-list"),N=c("v-sheet"),w=n("tooltip");return i(),s(N,null,{default:r((()=>[u(" <div>{{ qpMonthsDisplay }}</div>\r\n\t\t<div>{{ qpCommodities }}</div> "),e.isContractSelected?(i(),p("div",A,[m(C,null,{default:r((()=>[(i(!0),p(v,null,_(e.qpCommodities,(t=>(i(),s(k,{class:"list-item-qp-selection",key:t.commodity_id},{default:r((()=>[f("div",null,h(t.commodity_name),1),q(m(S,{modelValue:t.qp_selected,"onUpdate:modelValue":e=>t.qp_selected=e,items:e.qpSelection[t.commodity_code]??e.DEFAULT_NA_SELECTION,disabled:t.declared},null,8,["modelValue","onUpdate:modelValue","items","disabled"]),[[w,t.declared?"Cannot change Quotational Period if Declared.":null,void 0,{bottom:!0}]]),u(' <v-date-picker\r\n\t\t\t\t\t\tv-model="picker"\r\n\t\t\t\t\t\ttype="month"\r\n\t\t\t\t\t\tlabel="Select Month and Year"\r\n\t\t\t\t\t></v-date-picker> '),u(' <v-date-picker view-mode="month"></v-date-picker> '),u(' <v-date-picker type="month" :active-picker.sync="activePicker"></v-date-picker> '),u(' <v-date-picker view-mode="months"></v-date-picker> '),m(O,{ref_for:!0,ref:e.dateTimeRef,"close-on-content-click":!1,attached:"",disabled:t.declared,"full-height":"",seamless:""},{activator:r((({toggle:a,active:l})=>[m(D,{active:l,clickable:"",readonly:"","model-value":e.qpCommodities[t.commodity_code]?.qp_month??null,disabled:t.declared,onClick:a},y({_:2},[t.declared?void 0:{name:"append",fn:r((()=>[m(I,$({name:e.qpCommodities[t.commodity_code]?.qp_month?"clear":"today",class:{active:l,"clear-icon":!!e.qpCommodities[t.commodity_code]?.qp_month,"today-icon":!e.qpCommodities[t.commodity_code]?.qp_month}},g({click:e.qpCommodities[t.commodity_code]?.qp_month?()=>e.unsetValue(t.commodity_code):null})),null,16,["name","class"])])),key:"0"}]),1032,["active","model-value","disabled","onClick"])])),default:r((()=>[m(M,{type:"date",disabled:t.declared,"include-seconds":!1,"use-24":!1,"model-value":e.qpCommodities[t.commodity_code]?.qp_month??null,"onUpdate:modelValue":a=>e.updateDueDate(t.commodity_code,a),onClose:e.dateTimeRef?.deactivate},null,8,["disabled","model-value","onUpdate:modelValue","onClose"])])),_:2},1032,["disabled"]),u(' <v-input \r\n\t\t\t\t\t\ttype="date"\r\n\t\t\t\t\t\t:value="qpCommodities[commodity.commodity_code]?.qp_month ?? null"\r\n\t\t\t\t\t\t@update:value="updateDueDate(commodity.commodity_code, $event)"\r\n\t\t\t\t\t></v-input> '),q(m(E,{modelValue:t.declared,"onUpdate:modelValue":e=>t.declared=e,"icon-on":"check_box","icon-off":"check_box_outline_blank",label:"Declared",disabled:null===t.qp_selected},null,8,["modelValue","onUpdate:modelValue","disabled"]),[[w,t.qp_selected?null:"Please select a Quotational Period first.",void 0,{bottom:!0}]])])),_:2},1024)))),128))])),_:1})])):(i(),p("div",b,"Please select a contract first."))])),_:1})},S.__scopeId="data-v-64969d30",S.__file="src/interface.vue";var M=t({id:"navarch-qp-select",name:"Navarch QP Select",icon:"format_list_numbered_rtl",description:"For QP selection in the Parcel form",component:S,options:null,types:["json"]});export{M as default};
