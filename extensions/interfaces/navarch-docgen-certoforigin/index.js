import{useApi as t,defineInterface as e}from"@directus/extensions-sdk";import{defineComponent as a,inject as o,ref as n,resolveComponent as i,openBlock as r,createElementBlock as d,Fragment as s,createCommentVNode as l,createVNode as u,withCtx as c,createTextVNode as g,createBlock as m,toDisplayString as _}from"vue";var h=a({props:{value:{type:String,default:null}},emits:["input"],setup(e,{emit:a}){let i;var r;let d;var s;(r=i||(i={})).WET_WEIGHT="wet_weight",r.MOISTURE="moisture",r.DRY_WEIGHT="dry_weight",(s=d||(d={})).METHOD="method",s.WET_WEIGHT_UOM="wet_weight_uom",s.MOISTURE_UOM="moisture_uom",s.DRY_WEIGHT_UOM="dry_weight_uom";const l=t(),u=o("values",n({}));console.log("[main] formValues=",u);const c=n(null),g="name",m="line_1",_="line_2",h="city",f="state",w="country",p="zip",v="phone_code",$="phone_number",y="signatory_name",O="signatory_title",C="name",b="commodity",E="name",T="navarch_country",D="name",S="phone_code",M="contract",k="counterparty",I="weight_result",W="bl_date",G="vessel",R="origin",x="destination",H="name",N="navarch_world_port",U="port_name",V="country";return{failureReason:c,generateCertOfOrigin:async function(){var t,e;c.value=null;try{const o=(await l.get("/items/navarch_company",{params:{fields:[g,m,_,h,f,p,w,v,$,"email",y,O]}})).data.data,n=o[m],i=o[_]?`,\n${o[_]}`:"",r=o[h]?`,\n${o[h]}`:"",d=o[f]?`,\n${o[f]}`:"",s={signatoryName:o[y],signatoryTitle:o[O],company:o[g]},j=(await l.get(`/items/${T}/${o[v]}`,{params:{fields:[S]}})).data.data[S],J=o[$],Y=await l.get(`/items/${T}/${o[w]}`,{params:{fields:[D]}}),B=Y.data.data[D]?`, ${Y.data.data[D]}`:"",P=`${n}${i}${r}${o[p]?` ${o[p]}`:""}${d}${B}`,z=u.value.parcel,q=await l.get(`/items/navarch_parcel/${z}`,{params:{fields:[I,M,k,"actual_arrival_date",W,"invoice_date","estimated_shipment_date","actual_shipment_date",G,R,x]}}),K=q.data.data[I],L=q.data.data[G],Q=await l.get(`/items/navarch_vessel/${L}`,{params:{fields:[H]}}),X=await l.get(`/items/${N}/${q.data.data[R]}`,{params:{fields:[U,V]}}),Z=await l.get(`/items/${N}/${q.data.data[x]}`,{params:{fields:[U,V]}}),tt=await l.get(`/items/navarch_counterparty/${q.data.data[k]}`,{params:{fields:[E]}}),et=function(t){console.log("[evaluateWeights]");const e={};for(const a of t)e[a.method]||(console.log(`adding method ${a.method} to weightData object`),e[a.method]=[]),console.log(`adding lot ${a.id} to weightData.${a.method} array`),e[a.method.toString()].push(a);const a=[];for(const t of Object.keys(e)){if(!e[t]){console.log(`method=${t} does not exist in weightData object`);continue}console.log(`adding lots and other values to weights for method=${t}`);const o=F(e[t]);o&&a.push(o)}return a}((await l.get(`/items/navarch_weight_lot?filter[foreign_key]=${K}&sort[]=lot_number`,{params:{fields:["id","dry_weight","wet_weight","method","moisture","wet_weight_uom","dry_weight_uom"]}})).data.data);let at;if(at||(at=et.find((t=>"Outturn"===t.method))),at||(at=et.find((t=>"Inturn Final"===t.method))),at||(at=et.find((t=>"Inturn"===t.method))),at||(at=et.find((t=>"Estimated"===t.method))),at||(at=et.find((t=>"Planned"===t.method))),!at)throw new Error("No weight lot data found for all weight methods. Please ensure weight lot data has been entered in the selected parcel.");const ot=q.data.data[M],nt=(await l.get(`/items/navarch_commodity_in_contract?filter[${M}]=${ot}&filter[primary_commodity]=true`,{params:{fields:[b]}})).data.data[0][b],it=null!=(t=(await l.get(`/items/navarch_commodity/${nt}`,{params:{fields:[C]}})).data.data[C])?t:"",rt={parcel_id:z,seller:o[g],seller_address:P,seller_phone_number:`+${j} ${J}`,buyer:tt.data.data[E],vessel:Q.data.data[H],contract_ref:`${q.data.data[M]}`,bl_date:A(new Date(q.data.data[W])),port_of_loading:`${X.data.data[U]}, ${X.data.data[V]}`,port_of_discharge:`${Z.data.data[U]}, ${Z.data.data[V]}`,wet_weight:at.wet_weight,wet_weight_uom:at.wet_weight_uom,country_of_origin:X.data.data[V],commodity_name:it,other_comments:null!=(e=u.value.other_comments)?e:"",signatory:s},dt=await l.post("/generate/cert-of-origin",rt);if(200!==dt.status)return console.log(`[generateCertOfOrigin] invoice response status: ${dt.status}`),void(c.value=dt.data);const st=dt.data;a("input",{...rt,doc_location:st})}catch(t){console.error("[generateCertOfOrigin] error=",t),c.value=t}},viewCertOfOrigin:function(){}};function A(t){const e=t.getDate(),a=t.getMonth(),o=t.getFullYear();return`${e} ${["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"][a]} ${o}`}function F(t){if(console.log("[evaluateWeightData]"),0===t.length)return;const e=j(t,"dry_weight"),a=j(t,"wet_weight");return{method:J(t,"method"),lots:t,dry_weight_uom:J(t,"dry_weight_uom"),wet_weight_uom:J(t,"wet_weight_uom"),dry_weight:e,wet_weight:a,moisture:(a-e)/a*100}}function j(t,e){return console.log("[evaluateAggregateValue]"),t.reduce(((t,a)=>{var o;return t+(null!=(o=a[e.toString()])?o:0)}),0)}function J(t,e){if(console.log("[getFirstValueAsSharedValue]"),0!==t.length)return console.log(`lots[0][${e.toString()}]=${t[0][e.toString()]}`),t[0][e.toString()]}}});const f={key:0},w={key:1};h.render=function(t,e,a,o,n,h){const p=i("v-button"),v=i("v-notice");return r(),d(s,null,[l(' <input :value="value" @input="handleChange($event.target.value)" /> '),t.value?(r(),d("div",w,[u(p,{class:"margin-top-16px",onClick:e[1]||(e[1]=()=>t.viewCertOfOrigin())},{default:c((()=>[g("View Cert Of Origin ")])),_:1})])):(r(),d("div",f,[u(p,{class:"margin-top-16px",onClick:e[0]||(e[0]=()=>t.generateCertOfOrigin())},{default:c((()=>[g("Generate Cert Of Origin")])),_:1}),t.failureReason?(r(),m(v,{key:0},{default:c((()=>[g(_(t.failureReason),1)])),_:1})):l("v-if",!0)]))],2112)},h.__file="src/interface.vue";var p=e({id:"navarch-docgen-certoforigin",name:"Navarch Cert of Origin Generator Button",icon:"receipt_long",description:"This is a custom interface for Navarch's Cert of Origin Generator Button.",component:h,options:null,types:["string"],group:"standard"});export{p as default};
