import{useApi as t,defineDisplay as a}from"@directus/extensions-sdk";import{defineComponent as n,ref as e,openBlock as r,createElementBlock as s,toDisplayString as o}from"vue";const i="id",l="foreign_key",u="lot_number",c="method",d="navarch_parcel",f="contract",m="navarch_assay_lot",p="commodity",y="assay_uom",h="final_assay",v="dry_weight",g="navarch_commodity",_="code",w="navarch_commodity_in_contract",$="commodity",O="primary_commodity",I="penalty_element",b="contract";var E=(t=>(t[t.Estimated=0]="Estimated",t[t.Planned=10]="Planned",t[t.Inturn=20]="Inturn",t[t.InturnFinal=30]="InturnFinal",t[t.Outturn=40]="Outturn",t))(E||{});function F(t){switch(t){case"Inturn":return E.Inturn;case"Outturn":return E.Outturn;case"Inturn Final":return E.InturnFinal;case"Planned":return E.Planned;case"Estimated":return E.Estimated;default:throw new Error(`Invalid method type ${t}, please contact Navarch for support`)}}function N(t,a=2,n=!1){if(null==t||isNaN(t))return null;const e=n&&t<0;return e&&(t*=-1),Math.round(t*Math.pow(10,a))/Math.pow(10,a)*(e?-1:1)}function j(t,a=2,n=!0){if(isNaN(t)||null==t)return"-";const e=Math.round(t*Math.pow(10,a))/Math.pow(10,a),[r,s]=e.toString().split("."),o=r?r.replace(/\B(?=(\d{3})+(?!\d))/g,","):0;if(!s&&!n)return o;return`${o}.${(null!=s?s:"").padEnd(a,"0")}`}var M=n({props:{value:{type:String,default:null}},setup(a){const n=e(null),r=t(),s="assay_results";try{!async function(){const t=await async function(){var t,n;const e=(await r.get(`/items/${m}`,{params:{filter:{[l]:{_eq:a.value}},fields:[u,c,v,h,y,p]}})).data.data,s=e.map((t=>t[c])).sort(((t,a)=>F(a)-F(t)));if(0===s.length)return{};const o=s[0],i=e.filter((t=>t[c]===o)).reduce(((t,a)=>{const n=a[p];return t[n]||(t[n]=[]),t[n].push(a),t}),{}),d={};for(const a of Object.values(i))if(!(a.length<1))if(1===a.length)d[a[0][p]]=`${a[0][h]} ${a[0][y]} (${a[0][p]})`;else if(a.length>1){const e=a.filter((t=>null!==t[h]));let r=0,s=0;for(const a of e)r+=parseFloat(a[v]),s+=null!=(t=N(parseFloat(a[h])*parseFloat(a[v]),4))?t:0;const o=null!=(n=N(s/r,4))?n:0;d[a[0][p]]=`${j(o,4)}${e[0][y]} (${e[0][p]})`}return d}(),e=await async function(t){if(!t)return[];const n=await r.get(`/items/${d}`,{params:{filter:{[s]:{_eq:a.value}},fields:[f]}}),e=n.data.data.length>0?n.data.data[0][f]:null;if(!e)return Object.values(t).sort();const o=await r.get(`/items/${w}`,{params:{filter:{[b]:{_eq:e}},fields:[$,O,I]}});if(!o.data.data||o.data.data.length<1)return Object.values(t);const l=await r.get(`/items/${g}`,{params:{filter:{[i]:{_in:o.data.data.map((t=>t[$]))}},fields:[i,_]}});if(!l.data.data||l.data.data.length<1)return Object.values(t);const u=l.data.data.reduce(((t,a)=>(t[a[i]]=a[_],t)),{}),c=o.data.data.reduce(((t,a)=>{const n=u[a[$]];return a[O]&&n?t[n]=1:a[I]&&n?t[n]=3:t[n]=2,t}),{});return console.log("sort map: "+JSON.stringify(c)+" for contract="+e),Object.entries(t).sort(((t,a)=>c[t[0]]-c[a[0]])).map((t=>t[1]))}(t);n.value=e.join(" | ")}()}catch(t){console.error(t),n.value="Error occured"}return{finalAssaysByCommodity:n}}});M.render=function(t,a,n,e,i,l){return r(),s("div",null,o(t.finalAssaysByCommodity??"-"),1)},M.__file="src/display.vue";var P=a({id:"navarch-display-assaylots",name:"Navarch Display Assay Lots",icon:"box",description:"This is for displaying aggregate assay lot values in the Parcel home page.",component:M,options:null,types:["string"]});export{P as default};
