import{useApi as t,defineDisplay as a}from"@directus/extensions-sdk";import{defineComponent as e,ref as n,openBlock as s,createElementBlock as r,toDisplayString as o}from"vue";const l="id",i="related_parcel",u="lot_number",c="method",d="navarch_parcel",m="contract",f="navarch_assay_lot",y="commodity",p="assay_uom",h="final_assay",v="navarch_commodity",g="code",_="navarch_commodity_in_contract",$="commodity",w="primary_commodity",O="penalty_element",b="contract";var N=(t=>(t[t.Estimated=0]="Estimated",t[t.Planned=10]="Planned",t[t.Inturn=20]="Inturn",t[t["Inturn Final"]=30]="Inturn Final",t[t.Outturn=40]="Outturn",t))(N||{});function j(t,a){if(null==t)return"--";const e=function(t,a=2,e=!0){if(isNaN(t)||null==t)return"-";const n=Math.round(t*Math.pow(10,a))/Math.pow(10,a),[s,r]=n.toString().split("."),o=s?s.replace(/\B(?=(\d{3})+(?!\d))/g,","):0;if(!r&&!e)return o;const l=(null!=r?r:"").padEnd(a,"0");return`${o}.${l}`}(t,4,!0);return null==a?`${e}`:`${e}${a}`}var A=e({props:{value:{type:String,default:null}},setup(a){const e=t(),s=n(null),r=n(null);return a.value?(async function(){try{const t=await async function(){const t=[];console.log("Fetching assay lots for parcel: "+JSON.stringify(a.value));for(let n=0;n<a.value.length;n+=15){const s=a.value.slice(n,n+15);console.log("Fetching assay lots for chunk: "+JSON.stringify(s));const r=await e.get(`/items/${f}`,{params:{filter:{[l]:{_in:s},[u]:{_null:!0}},fields:[c,h,p,y,i]}});t.push(...r.data.data)}if(0===t.length||!t[0])return{COMMODITY:"No assays"};r.value=t[0][i];const n=t.map((t=>t.method)).sort(((t,a)=>N[a]-N[t]));if(0===n.length||!n[0])throw new Error("No latest method found for the assay lots");const s=n[0];return t.filter((t=>t.method===s)).reduce(((t,a)=>{const e=a[y];return t[e]||(t[e]=`${j(Number(a[h]),a[p])} (${a[y]})`),t}),{})}(),n=await async function(t){if(!t)return[];if(!r.value)return Object.values(t);const a=await e.get(`/items/${d}/${r.value}`,{params:{fields:[m]}}),n=a.data.data.length>0?a.data.data[0][m]:null;if(!n)return Object.values(t).sort();const s=await e.get(`/items/${_}`,{params:{filter:{[b]:{_eq:n}},fields:[$,w,O]}});if(!s.data.data||s.data.data.length<1)return Object.values(t);const o=await e.get(`/items/${v}`,{params:{filter:{[l]:{_in:s.data.data.map((t=>t[$]))}},fields:[l,g]}});if(!o.data.data||o.data.data.length<1)return Object.values(t);const i=o.data.data.reduce(((t,a)=>(t[a[l]]=a[g],t)),{}),u=s.data.data.reduce(((t,a)=>{const e=i[a[$]];return a[w]&&e?t[e]=1:a[O]&&e?t[e]=3:t[e]=2,t}),{});return Object.entries(t).sort(((t,a)=>u[t[0]]-u[a[0]])).map((t=>t[1]))}(t);s.value=n.join(", ")}catch(t){console.error(t),s.value="--"}}(),{finalAssaysByCommodity:s}):{finalAssaysByCommodity:n(null)}}});A.render=function(t,a,e,n,l,i){return s(),r("div",null,o(t.finalAssaysByCommodity??"--"),1)},A.__file="src/display.vue";var I=a({id:"navarch-display-assaylots-v2",name:"Navarch Display Assay Lots V2",icon:"box",description:"This is for displaying aggregate assay lot values in the Parcel home page with the Assay Results V2 interface.",component:A,options:null,types:["alias"],localTypes:["o2m"]});export{I as default};
